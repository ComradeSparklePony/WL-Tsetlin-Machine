(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24717,        569]
NotebookOptionsPosition[     19228,        472]
NotebookOutlinePosition[     20114,        500]
CellTagsIndexPosition[     20071,        497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Implementing a Tsetlin Machine Framework-- So Long, Neural Nets!\
\>", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.771694053316667*^9, 
  3.771694181067889*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["By: Dmitri Volkov", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.771694195247992*^9, 
  3.771694196465578*^9}, {3.771694292356884*^9, 
  3.771694293372081*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Mentor: Nikki Sigurdson", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.771694276087515*^9, 3.771694286307672*^9}, {3.771694355402587*^9, 
  3.771694362371986*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.771694408036838*^9, 
  3.771694432900632*^9}},ExpressionUUID->"816301f7-bb8e-48e5-a8d6-\
7587c2d332f7"],

Cell[TextData[{
 "Machine learning is a field of research that has been growing in relevance \
throughout the past few years, and has had an impact in many areas in modern \
life. <something about neural nets and other machine learning algorithms, and \
say that the tsetlin machine exists.> The Tsetlin Machine is a type of \
machine learning based on Tsetlin Automata, which were invented by Michael \
Lvovitch Tsetlin in the early 1960s. While a single Tsetlin Automaton is not \
very powerful, when many are used together the opposite can be true. \
Unfortunately, putting multiple Tsetlin Automata together resulted in the \
problem of a vanishing signal-to-noise ratio-- in other words, each Tsetlin \
Automaton optimized for itself instead of the whole, leading to an \
ineffective learning system. Fortunately, 2018 research by Ole-Christoffer ",
 StyleBox["Granmo",
  IgnoreSpellCheck->True],
 " has solved the vanishing signal-to-noise ratio problem and made Tsetlin \
Machines a strong competitor to Neural Nets and other machine learning \
algorithms. This computational essay presents a modular framework, written in \
the Wolfram Language, for creating and applying Tsetlin Machines."
}], "Text",
 CellChangeTimes->{{3.771694457627404*^9, 3.771694460635857*^9}, {
  3.771696199783646*^9, 3.771696232252058*^9}, {3.77169630828655*^9, 
  3.771696488319343*^9}, {3.771696632914084*^9, 3.771696683023712*^9}, {
  3.771696730015501*^9, 3.77169684195756*^9}, {3.7716968770779953`*^9, 
  3.77169690331382*^9}, {3.771699603933687*^9, 3.7716996539870777`*^9}, {
  3.771699782613887*^9, 3.7716997910344954`*^9}, {3.771699850765149*^9, 
  3.7717000336540947`*^9}, {3.771700088476625*^9, 3.771700166308934*^9}, {
  3.771700225354311*^9, 
  3.771700305539495*^9}},ExpressionUUID->"59eabf55-a8ba-4608-8c74-\
6f3e5ba0a140"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tsetlin Automatons", "Section",
 CellChangeTimes->{{3.771700317868024*^9, 
  3.771700330388814*^9}},ExpressionUUID->"0e0efcca-7c60-4de9-84e5-\
6a5d0e7de620"],

Cell["\<\
The building block of Tsetlin Machines is the Tsetlin Automaton, similar to \
the Neuron in Neural Nets. Here, Tsetlin Automatons are represented by a \
single integer (which holds their state).\
\>", "Text",
 CellChangeTimes->{{3.771700400522331*^9, 3.7717005278833027`*^9}, {
  3.771700559856189*^9, 
  3.7717005603556547`*^9}},ExpressionUUID->"f4aaae64-edde-41b5-9730-\
b6a4010b6587"],

Cell["A Tsetlin Automaton in state 3:", "CodeText",
 CellChangeTimes->{
  3.771700509040175*^9, {3.7717005506015778`*^9, 
   3.771700569388463*^9}},ExpressionUUID->"d80df9b8-6768-4a34-ae5a-\
c34f3ad9ff66"],

Cell[CellGroupData[{

Cell[BoxData["3"], "Input",
 CellChangeTimes->{3.77170057237554*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4ee44a8e-67d0-4505-bbc3-037be3ff0646"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7717005728040457`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0161b042-8110-44b3-91c5-c3a4f96a612c"]
}, Open  ]],

Cell[TextData[{
 "Tsetlin Automatons choose an action based on their state. If their state is \
less than or equal to a number (called a state identifier), then they choose \
action 1. Otherwise they choose action 2. The maximum state a Tsetlin \
Automaton can have is 2 * the state identifier. The ",
 StyleBox["TsetinAutomatonCalculateAction", "Code"],
 " function takes a Tsetlin Automaton and a state identifier as input, and \
outputs a 1 or 2 corresponding to the action the Tsetlin Automaton chooses."
}], "Text",
 CellChangeTimes->{{3.771700613314402*^9, 3.771700676686369*^9}, {
  3.7717007108930473`*^9, 
  3.7717008127122707`*^9}},ExpressionUUID->"e93687ad-fa4b-43bf-b6b6-\
eb97276b16a1"],

Cell["The TsetlinAutomatonCalculateAction function definition:", "CodeText",
 CellChangeTimes->{{3.7717006811970463`*^9, 3.771700694020897*^9}, {
  3.771700742468322*^9, 3.77170076433637*^9}, {3.7717008221734543`*^9, 
  3.771700848607287*^9}, {3.771701461382575*^9, 
  3.771701462881727*^9}},ExpressionUUID->"81338f64-ae03-46b1-88e7-\
a7d82059e940"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonCalculateAction", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", "2", ",", 
    "\[IndentingNewLine]", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771700825608028*^9, 3.771700826645507*^9}, {
  3.7717008783307734`*^9, 3.77170090445875*^9}, {3.771701023498765*^9, 
  3.771701026131686*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"96de5be5-6ee4-47a8-9eef-6d3fadc2724f"],

Cell["A Tsetlin Automaton in state 3 choosing action 1:", "CodeText",
 CellChangeTimes->{{3.7717009143750772`*^9, 3.771700921652643*^9}, {
  3.771701008937649*^9, 
  3.7717010334190693`*^9}},ExpressionUUID->"2cac9451-c99e-4aa9-9dd6-\
1d0a36bee9b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701036876133*^9, 3.7717010439919357`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"95913ef3-4d24-4d4b-b550-1a12ed6f4832"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.771701044939169*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2c665e31-ef62-4a42-b2e2-8180a9bb363e"]
}, Open  ]],

Cell["A Tsetlin Automaton in state 3 choosing action 2:", "CodeText",
 CellChangeTimes->{{3.77170105684577*^9, 3.77170105925316*^9}, {
  3.7717011780828648`*^9, 
  3.771701228485972*^9}},ExpressionUUID->"002c9a40-91f7-4f1e-befa-\
d070e663bdab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701242693276*^9, 3.771701260629006*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"40a672dd-7656-4f33-b4a9-4ce94251fa46"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.771701261416347*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"edd5efbb-0366-41be-88a8-0df1163ab460"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Approach", "Code"],
 " is a utility function that takes three arguments: a current value, target \
value, and delta value. It outputs the current value shifted closer to the \
target value by the delta value."
}], "Text",
 CellChangeTimes->{{3.771701275289242*^9, 
  3.771701361327045*^9}},ExpressionUUID->"2ac9a2a2-4694-4e06-8fa5-\
e6a129f2444c"],

Cell["The Approach function definition:", "CodeText",
 CellChangeTimes->{{3.771701419088615*^9, 
  3.7717014593747797`*^9}},ExpressionUUID->"5035ae96-aea5-4edb-83c7-\
6efccc5a223f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Approach", "[", 
   RowBox[{
    RowBox[{"x_", "?", "NumericQ"}], ",", 
    RowBox[{"y_", "?", "NumericQ"}], ",", 
    RowBox[{"t_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Which", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", "\[IndentingNewLine]", 
    RowBox[{"x", ">", "y"}], ",", 
    RowBox[{"x", "-", "t"}], ",", "\[IndentingNewLine]", 
    RowBox[{"x", "<", "y"}], ",", 
    RowBox[{"x", "+", "t"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717013796494703`*^9, 3.77170138750891*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"372cdb49-a9ee-440c-b5d6-2a9369da232a"],

Cell["Approach 10 ,starting from 1, by 5:", "CodeText",
 CellChangeTimes->{{3.7717014952343884`*^9, 3.7717015042972813`*^9}, 
   3.771701585400387*^9},ExpressionUUID->"68240f81-162e-427b-b29e-\
a55b7fb3248f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "[", 
  RowBox[{"1", ",", "10", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717015087527742`*^9, 3.7717015210082827`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"102bd5ab-e7e1-46f7-ba89-4b061f04a0ae"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.771701521709978*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"144fa403-5890-4493-ada4-65d5f023fb88"]
}, Open  ]],

Cell["Approach 1, starting from 4, by 1:", "CodeText",
 CellChangeTimes->{{3.771701543997341*^9, 
  3.771701561167594*^9}},ExpressionUUID->"ab638405-981f-46ca-9ec7-\
150307804a07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "[", 
  RowBox[{"4", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701562194887*^9, 3.771701567580132*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2355c0fb-e43d-47e3-855a-701370840b19"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.771701568351255*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e3fa56df-a123-4ea6-9eb7-b05323960c7e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["TsetlinAutomatonPunish", "Code"],
 " and ",
 StyleBox["TsetlinAutomatonReward", "Code"],
 " punish or reward a Tsetlin Automaton, given the automaton and the state \
identifier. In other words, they move a Tsetlin Automaton\[CloseCurlyQuote]s \
state closer or farther to the state which would cause the opposite action."
}], "Text",
 CellChangeTimes->{{3.771701602071537*^9, 3.7717016161816883`*^9}, {
  3.771708350892005*^9, 3.771708378556693*^9}, {3.771708409868058*^9, 
  3.7717084170085907`*^9}, {3.771708455276134*^9, 3.771708467974896*^9}, {
  3.771708500964188*^9, 3.7717085019542*^9}, {3.771708816078652*^9, 
  3.771708841079398*^9}, {3.7717088810850163`*^9, 3.7717088962877913`*^9}, {
  3.771709021328017*^9, 
  3.771709030702962*^9}},ExpressionUUID->"bca36145-22a1-4811-a42c-\
41de1893c903"],

Cell["The TsetlinAutomatonPunish function definition.", "CodeText",
 CellChangeTimes->{{3.771709064791973*^9, 3.771709095284637*^9}, {
  3.771709134830332*^9, 
  3.7717091377348127`*^9}},ExpressionUUID->"56ef0c01-ba10-4266-a912-\
d83ae70489d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonPunish", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Approach", "[", 
     RowBox[{"ta", ",", "1", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Approach", "[", 
     RowBox[{"ta", ",", 
      RowBox[{"2", "*", "si"}], ",", "1"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771708808798938*^9, 3.771708813104903*^9}, {
  3.77170887894412*^9, 3.771708879069189*^9}, {3.7717110036284924`*^9, 
  3.7717110086371527`*^9}},ExpressionUUID->"9a8f99b4-d43d-40d4-9769-\
7f388a77b091"],

Cell[TextData[StyleBox["The TsetlinAutomatonReward function definition.", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771709227045538*^9, 
  3.771709238321711*^9}},ExpressionUUID->"9638a2c4-44c3-4e0d-b78b-\
f6e1639bd2a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonReward", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Approach", "[", 
     RowBox[{"ta", ",", 
      RowBox[{"2", "*", "si"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Approach", "[", 
     RowBox[{"ta", ",", "1", ",", "1"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771709263249586*^9, 3.771709264251316*^9}, {
  3.771710998433988*^9, 
  3.771711010017227*^9}},ExpressionUUID->"5582880d-c60e-4587-9194-\
62e8ab2b5edc"],

Cell[TextData[StyleBox["Punish a Tsetlin Automaton in state 1, with state \
identifier 3. Because this corresponds to action 1, it will move it towards \
action 2, therefore raising the state.", "CodeText"]], "Text",
 CellChangeTimes->{{3.771709809794046*^9, 3.7717098207941236`*^9}, {
  3.771709949707827*^9, 3.771709979053582*^9}, {3.7717100318370247`*^9, 
  3.771710037468348*^9}, {3.771710072871414*^9, 3.77171008261969*^9}, {
  3.771710121138091*^9, 
  3.771710138511047*^9}},ExpressionUUID->"6964a1d8-c1b2-4b85-bb0c-\
1003703bc2c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonPunish", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.77170975502234*^9, 3.7717098026091003`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6dc45a55-12ef-429a-960f-1c76704d945a"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.771709803133582*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b30baeda-403f-411f-95c4-2b898a5bf20d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["TsetlinAutomatonUpdate", "Code"],
 " takes a state, a state identifier, and a number n such that n \[Element] \
{1, 2} and updates the Tsetlin Automaton by rewarding it if it produced \
output equal output to n, or punishing it if it did not. It then outputs the \
Tsetlin Automaton."
}], "Text",
 CellChangeTimes->{{3.771709355757409*^9, 3.771709390814437*^9}, {
  3.7717094307125673`*^9, 3.771709435316437*^9}, {3.771709492842966*^9, 
  3.771709493884301*^9}, {3.771709643906315*^9, 
  3.771709657912094*^9}},ExpressionUUID->"7cc76468-d9cd-48e5-84df-\
79800aa9a5e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonUpdate", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer", ",", "n_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TsetlinAutomatonCalculateAction", "[", 
      RowBox[{"ta", ",", "si"}], "]"}], "\[Equal]", "n"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TsetlinAutomatonReward", "[", 
     RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TsetlinAutomatonPunish", "[", 
     RowBox[{"ta", ",", "si"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771709570266077*^9, 3.771709571210041*^9}, {
  3.771709631079324*^9, 3.771709632199893*^9}, {3.7717096734509706`*^9, 
  3.771709697503574*^9}, {3.7717109903993692`*^9, 3.771710996314996*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ae94b64f-539f-47b7-bd5e-610b6bd25dae"],

Cell["Update a Tsetlin Automaton to learn to pick action 2.", "CodeText",
 CellChangeTimes->{{3.77171092426439*^9, 
  3.771710983770575*^9}},ExpressionUUID->"aedf7bf2-795e-4859-9718-\
901f3dcef060"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonUpdate", "[", 
  RowBox[{"3", ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717109121367893`*^9, 3.7717109184331417`*^9}, 
   3.771710987616435*^9, {3.7717110409965*^9, 3.771711070268942*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8277b1fc-9192-4e56-8a66-4d9c0b62a52c"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.771711070964961*^9, 3.771711083287176*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"c4fecb03-7664-4d30-a300-96c8c98b0308"]
}, Open  ]],

Cell["\<\
By now, we have enough functions to implement a basic learning algorithm. The \
following bit of code learns which of two options gets a better result more \
often.\
\>", "Text",
 CellChangeTimes->{{3.7717096674206743`*^9, 3.771709669561469*^9}, {
  3.771710281858734*^9, 3.771710287541407*^9}, {3.771710398712921*^9, 
  3.7717104663797817`*^9}, {3.771710650723826*^9, 3.771710663156369*^9}, {
  3.771710749689456*^9, 
  3.771710751299251*^9}},ExpressionUUID->"c4c398fa-2cde-4787-8c32-\
67ea2a7fd260"],

Cell["\<\
Train a Tsetlin Automaton via nesting TsetlinAutomatonUpdate and output the \
action it chooses at the end. Should learn 1.\
\>", "CodeText",
 CellChangeTimes->{{3.771711164643793*^9, 
  3.7717112118853416`*^9}},ExpressionUUID->"d43211ee-c429-495d-8210-\
73c2f7acfece"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Nest", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TsetlinAutomatonUpdate", "[", "\[IndentingNewLine]", 
       RowBox[{
       "#", ",", "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", "\[IndentingNewLine]", 
             RowBox[{"#", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TakeLargestBy", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"#", "&"}], ",", "1"}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "&"}], "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomVariate", "[", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0.75", ",", ".5"}], "]"}], "]"}], ",", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0.25", ",", ".5"}], "]"}], "]"}]}], "}"}]}]}], "]"}], 
      "&"}], ",", "\[IndentingNewLine]", "4", ",", "10"}], "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771710801165113*^9, 3.771710832415866*^9}, {
  3.7717111302143497`*^9, 3.771711157755282*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d83a95fd-e6e3-4885-8cb7-8203b9c6c28e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.771710811967348*^9, 3.7717108331268263`*^9}, 
   3.771711086111533*^9, {3.771711121513871*^9, 3.771711151937304*^9}, {
   3.7717112304326897`*^9, 3.77171123141757*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"fb199683-6115-4b3f-bd72-1b05cc2c5bfb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 1004},
WindowMargins->{{0, Automatic}, {Automatic, 22}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
SpellingDictionaries->{"CorrectWords"->{"Tsetlin", "Lvovitch", "Christoffer"}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 314, 6, 99, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[897, 30, 454, 7, 36, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1354, 39, 411, 6, 36, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[CellGroupData[{
Cell[1790, 49, 157, 3, 68, "Section",ExpressionUUID->"816301f7-bb8e-48e5-a8d6-7587c2d332f7"],
Cell[1950, 54, 1822, 28, 132, "Text",ExpressionUUID->"59eabf55-a8ba-4608-8c74-6f3e5ba0a140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3809, 87, 163, 3, 68, "Section",ExpressionUUID->"0e0efcca-7c60-4de9-84e5-6a5d0e7de620"],
Cell[3975, 92, 397, 8, 36, "Text",ExpressionUUID->"f4aaae64-edde-41b5-9730-b6a4010b6587"],
Cell[4375, 102, 205, 4, 39, "CodeText",ExpressionUUID->"d80df9b8-6768-4a34-ae5a-c34f3ad9ff66"],
Cell[CellGroupData[{
Cell[4605, 110, 146, 2, 31, "Input",ExpressionUUID->"4ee44a8e-67d0-4505-bbc3-037be3ff0646"],
Cell[4754, 114, 150, 2, 35, "Output",ExpressionUUID->"0161b042-8110-44b3-91c5-c3a4f96a612c"]
}, Open  ]],
Cell[4919, 119, 699, 12, 60, "Text",ExpressionUUID->"e93687ad-fa4b-43bf-b6b6-eb97276b16a1"],
Cell[5621, 133, 349, 5, 39, "CodeText",ExpressionUUID->"81338f64-ae03-46b1-88e7-a7d82059e940"],
Cell[5973, 140, 610, 13, 140, "Input",ExpressionUUID->"96de5be5-6ee4-47a8-9eef-6d3fadc2724f",
 InitializationCell->True],
Cell[6586, 155, 248, 4, 39, "CodeText",ExpressionUUID->"2cac9451-c99e-4aa9-9dd6-1d0a36bee9b6"],
Cell[CellGroupData[{
Cell[6859, 163, 254, 4, 31, "Input",ExpressionUUID->"95913ef3-4d24-4d4b-b550-1a12ed6f4832"],
Cell[7116, 169, 149, 2, 35, "Output",ExpressionUUID->"2c665e31-ef62-4a42-b2e2-8180a9bb363e"]
}, Open  ]],
Cell[7280, 174, 244, 4, 39, "CodeText",ExpressionUUID->"002c9a40-91f7-4f1e-befa-d070e663bdab"],
Cell[CellGroupData[{
Cell[7549, 182, 252, 4, 31, "Input",ExpressionUUID->"40a672dd-7656-4f33-b4a9-4ce94251fa46"],
Cell[7804, 188, 149, 2, 35, "Output",ExpressionUUID->"edd5efbb-0366-41be-88a8-0df1163ab460"]
}, Open  ]],
Cell[7968, 193, 374, 8, 36, "Text",ExpressionUUID->"2ac9a2a2-4694-4e06-8fa5-e6a129f2444c"],
Cell[8345, 203, 181, 3, 39, "CodeText",ExpressionUUID->"5035ae96-aea5-4edb-83c7-6efccc5a223f"],
Cell[8529, 208, 710, 16, 140, "Input",ExpressionUUID->"372cdb49-a9ee-440c-b5d6-2a9369da232a",
 InitializationCell->True],
Cell[9242, 226, 208, 3, 39, "CodeText",ExpressionUUID->"68240f81-162e-427b-b29e-a55b7fb3248f"],
Cell[CellGroupData[{
Cell[9475, 233, 244, 4, 31, "Input",ExpressionUUID->"102bd5ab-e7e1-46f7-ba89-4b061f04a0ae"],
Cell[9722, 239, 149, 2, 35, "Output",ExpressionUUID->"144fa403-5890-4493-ada4-65d5f023fb88"]
}, Open  ]],
Cell[9886, 244, 180, 3, 39, "CodeText",ExpressionUUID->"ab638405-981f-46ca-9ec7-150307804a07"],
Cell[CellGroupData[{
Cell[10091, 251, 239, 4, 31, "Input",ExpressionUUID->"2355c0fb-e43d-47e3-855a-701370840b19"],
Cell[10333, 257, 149, 2, 35, "Output",ExpressionUUID->"e3fa56df-a123-4ea6-9eb7-b05323960c7e"]
}, Open  ]],
Cell[10497, 262, 829, 15, 60, "Text",ExpressionUUID->"bca36145-22a1-4811-a42c-41de1893c903"],
Cell[11329, 279, 244, 4, 39, "CodeText",ExpressionUUID->"56ef0c01-ba10-4266-a912-d83ae70489d9"],
Cell[11576, 285, 753, 17, 140, "Input",ExpressionUUID->"9a8f99b4-d43d-40d4-9769-7f388a77b091",
 InitializationCell->True],
Cell[12332, 304, 223, 4, 36, "Text",ExpressionUUID->"9638a2c4-44c3-4e0d-b78b-f6e1639bd2a3"],
Cell[12558, 310, 704, 17, 140, "Input",ExpressionUUID->"5582880d-c60e-4587-9194-62e8ab2b5edc",
 InitializationCell->True],
Cell[13265, 329, 538, 8, 36, "Text",ExpressionUUID->"6964a1d8-c1b2-4b85-bb0c-1003703bc2c5"],
Cell[CellGroupData[{
Cell[13828, 341, 243, 4, 31, "Input",ExpressionUUID->"6dc45a55-12ef-429a-960f-1c76704d945a"],
Cell[14074, 347, 148, 2, 35, "Output",ExpressionUUID->"b30baeda-403f-411f-95c4-2b898a5bf20d"]
}, Open  ]],
Cell[14237, 352, 595, 11, 60, "Text",ExpressionUUID->"7cc76468-d9cd-48e5-84df-79800aa9a5e7"],
Cell[14835, 365, 922, 19, 140, "Input",ExpressionUUID->"ae94b64f-539f-47b7-bd5e-610b6bd25dae",
 InitializationCell->True],
Cell[15760, 386, 198, 3, 39, "CodeText",ExpressionUUID->"aedf7bf2-795e-4859-9718-901f3dcef060"],
Cell[CellGroupData[{
Cell[15983, 393, 327, 5, 31, "Input",ExpressionUUID->"8277b1fc-9192-4e56-8a66-4d9c0b62a52c"],
Cell[16313, 400, 173, 2, 35, "Output",ExpressionUUID->"c4fecb03-7664-4d30-a300-96c8c98b0308"]
}, Open  ]],
Cell[16501, 405, 511, 10, 36, "Text",ExpressionUUID->"c4c398fa-2cde-4787-8c32-67ea2a7fd260"],
Cell[17015, 417, 279, 6, 39, "CodeText",ExpressionUUID->"d43211ee-c429-495d-8210-73c2f7acfece"],
Cell[CellGroupData[{
Cell[17319, 427, 1568, 34, 216, "Input",ExpressionUUID->"d83a95fd-e6e3-4885-8cb7-8203b9c6c28e"],
Cell[18890, 463, 298, 4, 35, "Output",ExpressionUUID->"fb199683-6115-4b3f-bd72-1b05cc2c5bfb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

