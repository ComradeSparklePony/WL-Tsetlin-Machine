(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    618033,      12224]
NotebookOptionsPosition[    590613,      11812]
NotebookOutlinePosition[    591499,      11840]
CellTagsIndexPosition[    591456,      11837]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Implementing a Tsetlin Machine Framework-- So Long, Neural Nets!\
\>", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.771694053316667*^9, 
  3.771694181067889*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["By: Dmitri Volkov", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.771694195247992*^9, 
  3.771694196465578*^9}, {3.771694292356884*^9, 
  3.771694293372081*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Mentor: Nikki Sigurdson", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.771694276087515*^9, 3.771694286307672*^9}, {3.771694355402587*^9, 
  3.771694362371986*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.771694408036838*^9, 
  3.771694432900632*^9}},ExpressionUUID->"816301f7-bb8e-48e5-a8d6-\
7587c2d332f7"],

Cell[TextData[{
 "Machine learning is a field of research that has been growing in relevance \
throughout the past few years, and has had an impact in many areas in modern \
life. Although Neural Nets have been behind the majority of the push, \
learning algorithms such as Logistic Regression, Decision Trees, Monte Carlo \
Markov Chains, Nearest Neighbor, Support Vector Machines, and the like have \
also been useful. Now, another strong competitor can join their ranks: the \
Tsetlin Machine. The Tsetlin Machine is a type of machine learning that acts \
on binary data based on Tsetlin Automata, which were invented by Michael \
Lvovitch Tsetlin in the early 1960s. One of the advantages of Tsetlin \
Machines is that they work with Boolean operations on binary data, which is \
very fast compared to the calculus Neural Nets need to do. While a single \
Tsetlin Automaton is not very powerful, when many are used together the \
opposite can be true. Unfortunately, putting multiple Tsetlin Automata \
together resulted in the problem of a vanishing signal-to-noise ratio-- in \
other words, each Tsetlin Automaton optimized for itself instead of the \
whole, leading to an ineffective learning system. Fortunately, 2018 research \
by Ole-Christoffer ",
 StyleBox["Granmo",
  IgnoreSpellCheck->True],
 " has solved the vanishing signal-to-noise ratio problem and made Tsetlin \
Machines a viable competitor to Neural Nets and other machine learning \
algorithms. This computational essay presents a modular framework, written in \
the Wolfram Language, for creating and applying Tsetlin Machines."
}], "Text",
 CellChangeTimes->{{3.771694457627404*^9, 3.771694460635857*^9}, {
  3.771696199783646*^9, 3.771696232252058*^9}, {3.77169630828655*^9, 
  3.771696488319343*^9}, {3.771696632914084*^9, 3.771696683023712*^9}, {
  3.771696730015501*^9, 3.77169684195756*^9}, {3.7716968770779953`*^9, 
  3.77169690331382*^9}, {3.771699603933687*^9, 3.7716996539870777`*^9}, {
  3.771699782613887*^9, 3.7716997910344954`*^9}, {3.771699850765149*^9, 
  3.7717000336540947`*^9}, {3.771700088476625*^9, 3.771700166308934*^9}, {
  3.771700225354311*^9, 3.771700305539495*^9}, {3.771747076035966*^9, 
  3.771747225746015*^9}, {3.7717472568075333`*^9, 3.771747374445335*^9}, {
  3.771747423277752*^9, 3.771747452786021*^9}, {3.771756342174213*^9, 
  3.7717564534167423`*^9}},ExpressionUUID->"59eabf55-a8ba-4608-8c74-\
6f3e5ba0a140"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tsetlin Automata", "Section",
 CellChangeTimes->{{3.771700317868024*^9, 3.771700330388814*^9}, {
  3.771757054283306*^9, 
  3.7717570547194023`*^9}},ExpressionUUID->"0e0efcca-7c60-4de9-84e5-\
6a5d0e7de620"],

Cell["\<\
The building block of Tsetlin Machines is the Tsetlin Automaton, similar to \
the Neuron in Neural Nets. Here, Tsetlin Automatons are represented by a \
single integer (which holds their state).\
\>", "Text",
 CellChangeTimes->{{3.771700400522331*^9, 3.7717005278833027`*^9}, {
  3.771700559856189*^9, 
  3.7717005603556547`*^9}},ExpressionUUID->"f4aaae64-edde-41b5-9730-\
b6a4010b6587"],

Cell["A Tsetlin Automaton in state 3:", "CodeText",
 CellChangeTimes->{
  3.771700509040175*^9, {3.7717005506015778`*^9, 
   3.771700569388463*^9}},ExpressionUUID->"d80df9b8-6768-4a34-ae5a-\
c34f3ad9ff66"],

Cell[CellGroupData[{

Cell[BoxData["3"], "Input",
 CellChangeTimes->{3.77170057237554*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4ee44a8e-67d0-4505-bbc3-037be3ff0646"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7717005728040457`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0161b042-8110-44b3-91c5-c3a4f96a612c"]
}, Closed]],

Cell[TextData[{
 "Tsetlin Automatons choose an action based on their state. If their state is \
less than or equal to a number (called a state identifier), then they choose \
action 1. Otherwise they choose action 2. The maximum state a Tsetlin \
Automaton can have is 2 * the state identifier. The ",
 StyleBox["TsetinAutomatonCalculateAction", "Code"],
 " function takes a Tsetlin Automaton and a state identifier as input, and \
outputs a 1 or 2 corresponding to the action the Tsetlin Automaton chooses."
}], "Text",
 CellChangeTimes->{{3.771700613314402*^9, 3.771700676686369*^9}, {
  3.7717007108930473`*^9, 
  3.7717008127122707`*^9}},ExpressionUUID->"e93687ad-fa4b-43bf-b6b6-\
eb97276b16a1"],

Cell["The TsetlinAutomatonCalculateAction function definition:", "CodeText",
 CellChangeTimes->{{3.7717006811970463`*^9, 3.771700694020897*^9}, {
  3.771700742468322*^9, 3.77170076433637*^9}, {3.7717008221734543`*^9, 
  3.771700848607287*^9}, {3.771701461382575*^9, 
  3.771701462881727*^9}},ExpressionUUID->"81338f64-ae03-46b1-88e7-\
a7d82059e940"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"si", ",", "_Integer"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", "2", ",", 
      "\[IndentingNewLine]", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.771700825608028*^9, 3.771700826645507*^9}, {
  3.7717008783307734`*^9, 3.77170090445875*^9}, {3.771701023498765*^9, 
  3.771701026131686*^9}, {3.7718306970803423`*^9, 3.7718307703450737`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"96de5be5-6ee4-47a8-9eef-6d3fadc2724f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", "2", ",", "1"}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
   4}}, {{2, {2, 0, 2}}, {1, {2, 0, 3}}}, {1, 5, 0, 0, 
   0}, {{25, 1, 0, 0}, {2, 0, 3}, {6, 2, 4}, {3, 2}, {6, 3, 4}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si}, 
    If[$CellContext`ta > $CellContext`si, 2, 1]], Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction0.so", 
    "compiledFunction0", {{Integer, 0, "Constant"}, {Integer, 0, "Constant"}},
     Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.771830729895816*^9, 3.771830772087632*^9}, 
   3.7718333753669987`*^9, 3.77183353158034*^9, 3.7718389388093777`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c6953b35-ab97-4ef9-8b2e-0bf7aacbab1a"]
}, Closed]],

Cell["A Tsetlin Automaton in state 3 choosing action 1:", "CodeText",
 CellChangeTimes->{{3.7717009143750772`*^9, 3.771700921652643*^9}, {
  3.771701008937649*^9, 
  3.7717010334190693`*^9}},ExpressionUUID->"2cac9451-c99e-4aa9-9dd6-\
1d0a36bee9b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701036876133*^9, 3.7717010439919357`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"95913ef3-4d24-4d4b-b550-1a12ed6f4832"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.771701044939169*^9, {3.771830753583501*^9, 3.771830774882409*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"8a93129a-4d87-43de-a7f5-c4713de835be"]
}, Closed]],

Cell["A Tsetlin Automaton in state 3 choosing action 2:", "CodeText",
 CellChangeTimes->{{3.77170105684577*^9, 3.77170105925316*^9}, {
  3.7717011780828648`*^9, 3.771701228485972*^9}, {3.7718307778442097`*^9, 
  3.77183077913768*^9}},ExpressionUUID->"002c9a40-91f7-4f1e-befa-\
d070e663bdab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701242693276*^9, 3.771701260629006*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"40a672dd-7656-4f33-b4a9-4ce94251fa46"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.771701261416347*^9, 3.771830780566267*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"7adb1c80-cbe1-4790-ab1f-e291dd2bffe1"]
}, Closed]],

Cell[TextData[{
 StyleBox["Approach", "Code"],
 " is a utility function that takes three arguments: a current value, target \
value, and delta value. It outputs the current value shifted closer to the \
target value by the delta value."
}], "Text",
 CellChangeTimes->{{3.771701275289242*^9, 
  3.771701361327045*^9}},ExpressionUUID->"2ac9a2a2-4694-4e06-8fa5-\
e6a129f2444c"],

Cell["The Approach function definition:", "CodeText",
 CellChangeTimes->{{3.771701419088615*^9, 
  3.7717014593747797`*^9}},ExpressionUUID->"5035ae96-aea5-4edb-83c7-\
6efccc5a223f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "_Real"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", "\[IndentingNewLine]", 
      RowBox[{"x", ">", "y"}], ",", 
      RowBox[{"x", "-", "t"}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "<", "y"}], ",", 
      RowBox[{"x", "+", "t"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.7717013796494703`*^9, 3.77170138750891*^9}, {
  3.771830022491867*^9, 3.771830031724715*^9}, {3.771830172488978*^9, 
  3.771830270454327*^9}, {3.7718303085992527`*^9, 3.771830314069685*^9}, {
  3.7718303675423183`*^9, 3.771830416453081*^9}, {3.77183045646618*^9, 
  3.7718305472468767`*^9}, {3.771830623880074*^9, 3.771830693442153*^9}, {
  3.771830813773226*^9, 3.771830947176244*^9}, {3.771831042490005*^9, 
  3.771831055214822*^9}, {3.7718311006407347`*^9, 3.771831104146193*^9}, {
  3.7718311477290773`*^9, 3.77183114950832*^9}, {3.77183128162315*^9, 
  3.771831292616572*^9}, {3.771831695858227*^9, 3.771831727798008*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"372cdb49-a9ee-440c-b5d6-2a9369da232a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Real], 
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0, 0, 4, 
   0, 0}, {{46, 
     Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
      Which[$CellContext`x == $CellContext`y, $CellContext`x, $CellContext`x > \
$CellContext`y, $CellContext`x - $CellContext`t, $CellContext`x < \
$CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 3, 0, 1, 3, 0, 2, 
     3, 0, 3}, {1}}, 
   Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
    Which[$CellContext`x == $CellContext`y, $CellContext`x, $CellContext`x > \
$CellContext`y, $CellContext`x - $CellContext`t, $CellContext`x < \
$CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction1.so", 
    "compiledFunction1", {{Real, 0, "Constant"}, {Real, 0, "Constant"}, {
     Real, 0, "Constant"}}, Real]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7718308788637943`*^9, 3.771830903020372*^9}, 
   3.77183094782552*^9, 3.771831055852455*^9, 3.771831105431608*^9, 
   3.7718311537752523`*^9, 3.771831293587598*^9, 3.771831728852338*^9, 
   3.771833375734933*^9, 3.771833531989991*^9, 3.771838939126186*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"8fbda4f8-6927-441a-80b3-8f7106f9e554"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "[", 
  RowBox[{"3", ",", "10", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.771830602448262*^9, 3.7718306087992773`*^9}, {
  3.771830842569854*^9, 3.771830842634219*^9}, {3.7718310786444807`*^9, 
  3.771831080422514*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"522cd17d-9707-432e-8644-40ad0a4933f6"],

Cell[BoxData["7.`"], "Output",
 CellChangeTimes->{{3.7718310608494587`*^9, 3.771831108427434*^9}, 
   3.771831155490286*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"1251edac-5282-47cc-b422-b34f286e6ab9"]
}, Closed]],

Cell["Approach 10 ,starting from 1, by 5:", "CodeText",
 CellChangeTimes->{{3.7717014952343884`*^9, 3.7717015042972813`*^9}, 
   3.771701585400387*^9},ExpressionUUID->"68240f81-162e-427b-b29e-\
a55b7fb3248f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "[", 
  RowBox[{"1", ",", "10", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717015087527742`*^9, 3.7717015210082827`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"102bd5ab-e7e1-46f7-ba89-4b061f04a0ae"],

Cell[BoxData["6.`"], "Output",
 CellChangeTimes->{3.771701521709978*^9, 3.7718311575877733`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"f76c0895-9f20-4e4a-b10e-1b4f900c4bea"]
}, Closed]],

Cell["Approach 1, starting from 4, by 1:", "CodeText",
 CellChangeTimes->{{3.771701543997341*^9, 
  3.771701561167594*^9}},ExpressionUUID->"ab638405-981f-46ca-9ec7-\
150307804a07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Approach", "[", 
  RowBox[{"4", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.771701562194887*^9, 3.771701567580132*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2355c0fb-e43d-47e3-855a-701370840b19"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.771701568351255*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e3fa56df-a123-4ea6-9eb7-b05323960c7e"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinAutomatonPunish", "Code"],
 " and ",
 StyleBox["TsetlinAutomatonReward", "Code"],
 " punish or reward a Tsetlin Automaton, given the automaton and the state \
identifier. In other words, they move a Tsetlin Automaton\[CloseCurlyQuote]s \
state closer or farther to the state which would cause the opposite action."
}], "Text",
 CellChangeTimes->{{3.771701602071537*^9, 3.7717016161816883`*^9}, {
  3.771708350892005*^9, 3.771708378556693*^9}, {3.771708409868058*^9, 
  3.7717084170085907`*^9}, {3.771708455276134*^9, 3.771708467974896*^9}, {
  3.771708500964188*^9, 3.7717085019542*^9}, {3.771708816078652*^9, 
  3.771708841079398*^9}, {3.7717088810850163`*^9, 3.7717088962877913`*^9}, {
  3.771709021328017*^9, 
  3.771709030702962*^9}},ExpressionUUID->"bca36145-22a1-4811-a42c-\
41de1893c903"],

Cell["The TsetlinAutomatonPunish function definition.", "CodeText",
 CellChangeTimes->{{3.771709064791973*^9, 3.771709095284637*^9}, {
  3.771709134830332*^9, 
  3.7717091377348127`*^9}},ExpressionUUID->"56ef0c01-ba10-4266-a912-\
d83ae70489d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonPunish", "=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Approach", "=", "Approach"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"si", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", 
        RowBox[{"IntegerPart", "@", 
         RowBox[{"Approach", "[", 
          RowBox[{"ta", ",", "1", ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"IntegerPart", "@", 
         RowBox[{"Approach", "[", 
          RowBox[{"ta", ",", 
           RowBox[{"2", "*", "si"}], ",", "1"}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", " ", "->", " ", "True"}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771708808798938*^9, 3.771708813104903*^9}, {
  3.77170887894412*^9, 3.771708879069189*^9}, {3.7717110036284924`*^9, 
  3.7717110086371527`*^9}, {3.771831164719411*^9, 3.771831231869328*^9}, {
  3.771831434537491*^9, 3.771831510499069*^9}, {3.771831574182589*^9, 
  3.771831602061297*^9}, {3.771831763197216*^9, 3.771831776081749*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9a8f99b4-d43d-40d4-9769-7f388a77b091"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
   4}}, {{2, {2, 0, 5}}, {1, {2, 0, 3}}}, {1, 7, 1, 0, 
   0}, {{25, 1, 0, 0}, {2, 0, 6}, {6, 0, 2}, {46, 
     Function[{$CellContext`ta, $CellContext`si}, 
      Which[
      Compile`FunctionVariable$4089 == Compile`FunctionVariable$4090, 
       Compile`FunctionVariable$4089, Compile`FunctionVariable$4089 > 
       Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 - 
       Compile`FunctionVariable$4091, Compile`FunctionVariable$4089 < 
       Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 + 
       Compile`FunctionVariable$4091]], {
     Compile`FunctionVariable$4090, 2, 0, 3, Module}, {
     Compile`FunctionVariable$4089, 2, 0, 2, Module}, {
     Compile`FunctionVariable$4091, 2, 0, 3, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 4}, {3, 6}, {6, 0, 4}, {15, 5, 1, 
    6}, {46, 
     Function[{$CellContext`ta, $CellContext`si}, 
      Which[
      Compile`FunctionVariable$4092 == Compile`FunctionVariable$4093, 
       Compile`FunctionVariable$4092, Compile`FunctionVariable$4092 > 
       Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 - 
       Compile`FunctionVariable$4094, Compile`FunctionVariable$4092 < 
       Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 + 
       Compile`FunctionVariable$4094]], {
     Compile`FunctionVariable$4094, 2, 0, 3, Module}, {
     Compile`FunctionVariable$4093, 2, 0, 6, Module}, {
     Compile`FunctionVariable$4092, 2, 0, 4, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0}, {40, 53, 3, 0, 0, 2, 0, 6}, {6, 6, 4}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si}, 
    If[$CellContext`ta > $CellContext`si, 
     IntegerPart[
      CompiledFunction[{11, 12., 5468}, {
        Blank[Real], 
        Blank[Real], 
        Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0, 0,
        4, 0, 0}, {{46, 
         Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
          
          Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
         3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
       Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
        Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
       
       LibraryFunction[
       "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction1.so", 
        "compiledFunction1", {{Real, 0, "Constant"}, {Real, 0, "Constant"}, {
         Real, 0, "Constant"}}, Real]][$CellContext`ta, 1, 1]], 
     IntegerPart[
      CompiledFunction[{11, 12., 5468}, {
        Blank[Real], 
        Blank[Real], 
        Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0, 0,
        4, 0, 0}, {{46, 
         Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
          
          Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
         3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
       Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
        Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
       
       LibraryFunction[
       "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction1.so", 
        "compiledFunction1", {{Real, 0, "Constant"}, {Real, 0, "Constant"}, {
         Real, 0, "Constant"}}, Real]][$CellContext`ta, 2 $CellContext`si, 
       1]]]], Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction2.so", 
    "compiledFunction2", {{Integer, 0, "Constant"}, {Integer, 0, "Constant"}},
     Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771831511335498*^9, 3.771831603105977*^9, 
  3.7718317769139967`*^9, 3.771833376566305*^9, 3.771833532867157*^9, 
  3.7718389393976717`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"44cac1f2-8292-4037-82ec-669244869d6c"]
}, Closed]],

Cell[TextData[StyleBox["The TsetlinAutomatonReward function definition.", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771709227045538*^9, 
  3.771709238321711*^9}},ExpressionUUID->"9638a2c4-44c3-4e0d-b78b-\
f6e1639bd2a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonReward", "=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Approach", "=", "Approach"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"si", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ta", ">", "si"}], ",", "\[IndentingNewLine]", 
        RowBox[{"IntegerPart", "@", 
         RowBox[{"Approach", "[", 
          RowBox[{"ta", ",", 
           RowBox[{"2", "*", "si"}], ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"IntegerPart", "@", 
         RowBox[{"Approach", "[", 
          RowBox[{"ta", ",", "1", ",", "1"}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", " ", "->", " ", "True"}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771709263249586*^9, 3.771709264251316*^9}, {
  3.771710998433988*^9, 3.771711010017227*^9}, {3.771831789949811*^9, 
  3.771831911582563*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5582880d-c60e-4587-9194-62e8ab2b5edc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}],
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
   6}}, {{2, {2, 0, 3}}, {1, {2, 0, 5}}}, {1, 7, 1, 0, 
   0}, {{25, 1, 0, 0}, {2, 0, 7}, {6, 0, 2}, {15, 3, 1, 4}, {46, 
     Function[{$CellContext`ta, $CellContext`si}, 
      Which[
      Compile`FunctionVariable$5390 == Compile`FunctionVariable$5391, 
       Compile`FunctionVariable$5390, Compile`FunctionVariable$5390 > 
       Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 - 
       Compile`FunctionVariable$5392, Compile`FunctionVariable$5390 < 
       Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 + 
       Compile`FunctionVariable$5392]], {
     Compile`FunctionVariable$5392, 2, 0, 5, Module}, {
     Compile`FunctionVariable$5391, 2, 0, 4, Module}, {
     Compile`FunctionVariable$5390, 2, 0, 2, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0}, {40, 53, 3, 0, 0, 2, 0, 4}, {6, 4, 6}, {3, 5}, {6, 0, 2}, {46, 
     Function[{$CellContext`ta, $CellContext`si}, 
      Which[
      Compile`FunctionVariable$5393 == Compile`FunctionVariable$5394, 
       Compile`FunctionVariable$5393, Compile`FunctionVariable$5393 > 
       Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 - 
       Compile`FunctionVariable$5395, Compile`FunctionVariable$5393 < 
       Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 + 
       Compile`FunctionVariable$5395]], {
     Compile`FunctionVariable$5393, 2, 0, 2, Module}, {
     Compile`FunctionVariable$5394, 2, 0, 5, Module}, {
     Compile`FunctionVariable$5395, 2, 0, 5, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 6}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si}, 
    If[$CellContext`ta > $CellContext`si, 
     IntegerPart[
      CompiledFunction[{11, 12., 5468}, {
        Blank[Real], 
        Blank[Real], 
        Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0, 0,
        4, 0, 0}, {{46, 
         Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
          
          Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
         3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
       Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
        Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
       
       LibraryFunction[
       "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction1.so", 
        "compiledFunction1", {{Real, 0, "Constant"}, {Real, 0, "Constant"}, {
         Real, 0, "Constant"}}, Real]][$CellContext`ta, 2 $CellContext`si, 
       1]], 
     IntegerPart[
      CompiledFunction[{11, 12., 5468}, {
        Blank[Real], 
        Blank[Real], 
        Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0, 0,
        4, 0, 0}, {{46, 
         Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
          
          Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
         3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
       Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
        Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
       
       LibraryFunction[
       "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction1.so", 
        "compiledFunction1", {{Real, 0, "Constant"}, {Real, 0, "Constant"}, {
         Real, 0, "Constant"}}, Real]][$CellContext`ta, 1, 1]]]], Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction3.so", 
    "compiledFunction3", {{Integer, 0, "Constant"}, {Integer, 0, "Constant"}},
     Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7718319147741003`*^9, 3.771833377117621*^9, 
  3.771833533530588*^9, 3.771838939663684*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"89e449b0-6b3b-414f-bd4a-c7c696db542f"]
}, Closed]],

Cell[TextData[StyleBox["Punish a Tsetlin Automaton in state 1, with state \
identifier 3. Because this corresponds to action 1, it will move it towards \
action 2, therefore raising the state.", "CodeText"]], "Text",
 CellChangeTimes->{{3.771709809794046*^9, 3.7717098207941236`*^9}, {
  3.771709949707827*^9, 3.771709979053582*^9}, {3.7717100318370247`*^9, 
  3.771710037468348*^9}, {3.771710072871414*^9, 3.77171008261969*^9}, {
  3.771710121138091*^9, 
  3.771710138511047*^9}},ExpressionUUID->"6964a1d8-c1b2-4b85-bb0c-\
1003703bc2c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonPunish", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.77170975502234*^9, 3.7717098026091003`*^9}, {
  3.771831932971521*^9, 3.7718319398829823`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"6dc45a55-12ef-429a-960f-1c76704d945a"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.771709803133582*^9, {3.771831918761807*^9, 3.7718319401215*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"d3ec6fa3-97db-48bd-ae24-a9f229157604"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinAutomatonUpdate", "Code"],
 " takes a state, a state identifier, and a number n such that n \[Element] \
{1, 2} and updates the Tsetlin Automaton by rewarding it if it produced \
output equal output to n, or punishing it if it did not. It then outputs the \
Tsetlin Automaton."
}], "Text",
 CellChangeTimes->{{3.771709355757409*^9, 3.771709390814437*^9}, {
  3.7717094307125673`*^9, 3.771709435316437*^9}, {3.771709492842966*^9, 
  3.771709493884301*^9}, {3.771709643906315*^9, 
  3.771709657912094*^9}},ExpressionUUID->"7cc76468-d9cd-48e5-84df-\
79800aa9a5e7"],

Cell["The TsetlinAutomatonUpdate function definition:", "CodeText",
 CellChangeTimes->{{3.771832266265337*^9, 
  3.771832276093557*^9}},ExpressionUUID->"89d242da-c25c-43b2-b54e-\
d1bd1254e0de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonUpdate", "=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "TsetlinAutomatonCalculateAction", "=", 
       "TsetlinAutomatonCalculateAction"}], ",", "\[IndentingNewLine]", 
      RowBox[{"TsetlinAutomatonPunish", "=", "TsetlinAutomatonPunish"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TsetlinAutomatonReward", "=", "TsetlinAutomatonReward"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"si", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"TsetlinAutomatonCalculateAction", "[", 
          RowBox[{"ta", ",", "si"}], "]"}], "\[Equal]", "n"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonReward", "[", 
         RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonPunish", "[", 
         RowBox[{"ta", ",", "si"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", " ", "->", " ", "True"}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771709570266077*^9, 3.771709571210041*^9}, {
  3.771709631079324*^9, 3.771709632199893*^9}, {3.7717096734509706`*^9, 
  3.771709697503574*^9}, {3.7717109903993692`*^9, 3.771710996314996*^9}, {
  3.7718319592018538`*^9, 3.7718320637651033`*^9}, {3.77183212495536*^9, 
  3.771832151992034*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ae94b64f-539f-47b7-bd5e-610b6bd25dae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Integer"}], 
                    "}"}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Integer"}], 
                    "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si", ",", "n"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", "2", ",", "1"}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Integer], 
                    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
                    4}}, {{2, {2, 0, 2}}, {1, {2, 0, 3}}}, {1, 5, 0, 0, 
                    0}, {{25, 1, 0, 0}, {2, 0, 3}, {6, 2, 4}, {3, 2}, {6, 3, 
                    4}, {1}}, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    If[$CellContext`ta > $CellContext`si, 2, 1]], Evaluate, 
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction0.so", 
                    "compiledFunction0", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}}, Integer]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "si"}], "]"}], "\[Equal]", "n"}], ",", 
                    
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}],
                     ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Integer], 
                    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
                    6}}, {{2, {2, 0, 3}}, {1, {2, 0, 5}}}, {1, 7, 1, 0, 
                    0}, {{25, 1, 0, 0}, {2, 0, 7}, {6, 0, 2}, {15, 3, 1, 4}, {
                    46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$5390 == 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390, 
                    Compile`FunctionVariable$5390 > 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390 - 
                    Compile`FunctionVariable$5392, 
                    Compile`FunctionVariable$5390 < 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390 + 
                    Compile`FunctionVariable$5392]], {
                    Compile`FunctionVariable$5392, 2, 0, 5, Module}, {
                    Compile`FunctionVariable$5391, 2, 0, 4, Module}, {
                    Compile`FunctionVariable$5390, 2, 0, 2, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 4}, {6, 4, 
                    6}, {3, 5}, {6, 0, 2}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$5393 == 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393, 
                    Compile`FunctionVariable$5393 > 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393 - 
                    Compile`FunctionVariable$5395, 
                    Compile`FunctionVariable$5393 < 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393 + 
                    Compile`FunctionVariable$5395]], {
                    Compile`FunctionVariable$5393, 2, 0, 2, Module}, {
                    Compile`FunctionVariable$5394, 2, 0, 5, Module}, {
                    Compile`FunctionVariable$5395, 2, 0, 5, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 
                    6}, {1}}, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    If[$CellContext`ta > $CellContext`si, 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 2 $CellContext`si, 1]], 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 1, 1]]]], Evaluate, 
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction3.so", 
                    "compiledFunction3", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}}, Integer]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "si"}], "]"}], ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Integer], 
                    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
                    4}}, {{2, {2, 0, 5}}, {1, {2, 0, 3}}}, {1, 7, 1, 0, 
                    0}, {{25, 1, 0, 0}, {2, 0, 6}, {6, 0, 2}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$4089 == 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089, 
                    Compile`FunctionVariable$4089 > 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089 - 
                    Compile`FunctionVariable$4091, 
                    Compile`FunctionVariable$4089 < 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089 + 
                    Compile`FunctionVariable$4091]], {
                    Compile`FunctionVariable$4090, 2, 0, 3, Module}, {
                    Compile`FunctionVariable$4089, 2, 0, 2, Module}, {
                    Compile`FunctionVariable$4091, 2, 0, 3, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 
                    4}, {3, 6}, {6, 0, 4}, {15, 5, 1, 6}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$4092 == 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092, 
                    Compile`FunctionVariable$4092 > 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092 - 
                    Compile`FunctionVariable$4094, 
                    Compile`FunctionVariable$4092 < 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092 + 
                    Compile`FunctionVariable$4094]], {
                    Compile`FunctionVariable$4094, 2, 0, 3, Module}, {
                    Compile`FunctionVariable$4093, 2, 0, 6, Module}, {
                    Compile`FunctionVariable$4092, 2, 0, 4, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 6}, {6, 6, 
                    4}, {1}}, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    If[$CellContext`ta > $CellContext`si, 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 1, 1]], 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 2 $CellContext`si, 1]]]], 
                    Evaluate, 
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction2.so", 
                    "compiledFunction2", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}}, Integer]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "si"}], "]"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 
   7}}, {{2, {2, 0, 5}}, {1, {2, 0, 6}}}, {2, 11, 1, 0, 
   0}, {{6, 0, 3}, {6, 1, 4}, {25, 4, 3, 0}, {2, 0, 3}, {6, 5, 7}, {3, 2}, {6,
     6, 7}, {24, 7, 2, 0}, {2, 0, 17}, {6, 0, 7}, {6, 1, 4}, {25, 4, 7, 1}, {
    2, 1, 7}, {6, 7, 3}, {15, 5, 4, 8}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`n}, 
      Which[
      Compile`FunctionVariable$6707 == Compile`FunctionVariable$6708, 
       Compile`FunctionVariable$6707, Compile`FunctionVariable$6707 > 
       Compile`FunctionVariable$6708, Compile`FunctionVariable$6707 - 
       Compile`FunctionVariable$6709, Compile`FunctionVariable$6707 < 
       Compile`FunctionVariable$6708, Compile`FunctionVariable$6707 + 
       Compile`FunctionVariable$6709]], {
     Compile`FunctionVariable$6708, 2, 0, 8, Module}, {
     Compile`FunctionVariable$6707, 2, 0, 3, Module}, {
     Compile`FunctionVariable$6709, 2, 0, 6, Module}, 2, 0, 0, 2, 0, 1, 2, 0, 
     2, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 8}, {6, 8, 9}, {3, 5}, {6, 7, 3}, {
    46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`n}, 
      Which[
      Compile`FunctionVariable$6710 == Compile`FunctionVariable$6711, 
       Compile`FunctionVariable$6710, Compile`FunctionVariable$6710 > 
       Compile`FunctionVariable$6711, Compile`FunctionVariable$6710 - 
       Compile`FunctionVariable$6712, Compile`FunctionVariable$6710 < 
       Compile`FunctionVariable$6711, Compile`FunctionVariable$6710 + 
       Compile`FunctionVariable$6712]], {
     Compile`FunctionVariable$6712, 2, 0, 6, Module}, {
     Compile`FunctionVariable$6711, 2, 0, 6, Module}, {
     Compile`FunctionVariable$6710, 2, 0, 3, Module}, 2, 0, 0, 2, 0, 1, 2, 0, 
     2, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 3}, {6, 3, 9}, {6, 9, 7}, {3, 16}, {
    6, 0, 4}, {6, 1, 7}, {25, 7, 4, 1}, {2, 1, 6}, {6, 4, 8}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`n}, 
      Which[
      Compile`FunctionVariable$6715 == Compile`FunctionVariable$6716, 
       Compile`FunctionVariable$6715, Compile`FunctionVariable$6715 > 
       Compile`FunctionVariable$6716, Compile`FunctionVariable$6715 - 
       Compile`FunctionVariable$6717, Compile`FunctionVariable$6715 < 
       Compile`FunctionVariable$6716, Compile`FunctionVariable$6715 + 
       Compile`FunctionVariable$6717]], {
     Compile`FunctionVariable$6716, 2, 0, 6, Module}, {
     Compile`FunctionVariable$6715, 2, 0, 8, Module}, {
     Compile`FunctionVariable$6717, 2, 0, 6, Module}, 2, 0, 0, 2, 0, 1, 2, 0, 
     2, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 8}, {6, 8, 3}, {3, 6}, {6, 4, 3}, {
    15, 5, 7, 10}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`n}, 
      Which[
      Compile`FunctionVariable$6718 == Compile`FunctionVariable$6719, 
       Compile`FunctionVariable$6718, Compile`FunctionVariable$6718 > 
       Compile`FunctionVariable$6719, Compile`FunctionVariable$6718 - 
       Compile`FunctionVariable$6720, Compile`FunctionVariable$6718 < 
       Compile`FunctionVariable$6719, Compile`FunctionVariable$6718 + 
       Compile`FunctionVariable$6720]], {
     Compile`FunctionVariable$6719, 2, 0, 10, Module}, {
     Compile`FunctionVariable$6720, 2, 0, 6, Module}, {
     Compile`FunctionVariable$6718, 2, 0, 3, Module}, 2, 0, 0, 2, 0, 1, 2, 0, 
     2, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 10}, {6, 10, 3}, {6, 3, 7}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si, $CellContext`n}, 
    If[CompiledFunction[{11, 12., 5468}, {
        Blank[Integer], 
        Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
       4}}, {{2, {2, 0, 2}}, {1, {2, 0, 3}}}, {1, 5, 0, 0, 
       0}, {{25, 1, 0, 0}, {2, 0, 3}, {6, 2, 4}, {3, 2}, {6, 3, 4}, {1}}, 
       Function[{$CellContext`ta, $CellContext`si}, 
        If[$CellContext`ta > $CellContext`si, 2, 1]], Evaluate, 
       LibraryFunction[
       "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction0.so", 
        "compiledFunction0", {{Integer, 0, "Constant"}, {
         Integer, 0, "Constant"}}, 
        Integer]][$CellContext`ta, $CellContext`si] == $CellContext`n, 
     CompiledFunction[{11, 12., 5468}, {
       Blank[Integer], 
       Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
      6}}, {{2, {2, 0, 3}}, {1, {2, 0, 5}}}, {1, 7, 1, 0, 
      0}, {{25, 1, 0, 0}, {2, 0, 7}, {6, 0, 2}, {15, 3, 1, 4}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$5390 == Compile`FunctionVariable$5391, 
          Compile`FunctionVariable$5390, Compile`FunctionVariable$5390 > 
          Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 - 
          Compile`FunctionVariable$5392, Compile`FunctionVariable$5390 < 
          Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 + 
          Compile`FunctionVariable$5392]], {
        Compile`FunctionVariable$5392, 2, 0, 5, Module}, {
        Compile`FunctionVariable$5391, 2, 0, 4, Module}, {
        Compile`FunctionVariable$5390, 2, 0, 2, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 4}, {6, 4, 6}, {3, 5}, {6, 0, 2}, {
       46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$5393 == Compile`FunctionVariable$5394, 
          Compile`FunctionVariable$5393, Compile`FunctionVariable$5393 > 
          Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 - 
          Compile`FunctionVariable$5395, Compile`FunctionVariable$5393 < 
          Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 + 
          Compile`FunctionVariable$5395]], {
        Compile`FunctionVariable$5393, 2, 0, 2, Module}, {
        Compile`FunctionVariable$5394, 2, 0, 5, Module}, {
        Compile`FunctionVariable$5395, 2, 0, 5, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 6}, {1}}, 
      Function[{$CellContext`ta, $CellContext`si}, 
       If[$CellContext`ta > $CellContext`si, 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 2 $CellContext`si, 1]], 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 1, 1]]]], Evaluate, 
      LibraryFunction[
      "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction3.so", 
       "compiledFunction3", {{Integer, 0, "Constant"}, {
        Integer, 0, "Constant"}}, Integer]][$CellContext`ta, $CellContext`si], 
     CompiledFunction[{11, 12., 5468}, {
       Blank[Integer], 
       Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
      4}}, {{2, {2, 0, 5}}, {1, {2, 0, 3}}}, {1, 7, 1, 0, 
      0}, {{25, 1, 0, 0}, {2, 0, 6}, {6, 0, 2}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$4089 == Compile`FunctionVariable$4090, 
          Compile`FunctionVariable$4089, Compile`FunctionVariable$4089 > 
          Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 - 
          Compile`FunctionVariable$4091, Compile`FunctionVariable$4089 < 
          Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 + 
          Compile`FunctionVariable$4091]], {
        Compile`FunctionVariable$4090, 2, 0, 3, Module}, {
        Compile`FunctionVariable$4089, 2, 0, 2, Module}, {
        Compile`FunctionVariable$4091, 2, 0, 3, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 4}, {3, 6}, {6, 0, 4}, {15, 
       5, 1, 6}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$4092 == Compile`FunctionVariable$4093, 
          Compile`FunctionVariable$4092, Compile`FunctionVariable$4092 > 
          Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 - 
          Compile`FunctionVariable$4094, Compile`FunctionVariable$4092 < 
          Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 + 
          Compile`FunctionVariable$4094]], {
        Compile`FunctionVariable$4094, 2, 0, 3, Module}, {
        Compile`FunctionVariable$4093, 2, 0, 6, Module}, {
        Compile`FunctionVariable$4092, 2, 0, 4, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 6}, {6, 6, 4}, {1}}, 
      Function[{$CellContext`ta, $CellContext`si}, 
       If[$CellContext`ta > $CellContext`si, 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 1, 1]], 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 2 $CellContext`si, 1]]]], Evaluate, 
      LibraryFunction[
      "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction2.so", 
       "compiledFunction2", {{Integer, 0, "Constant"}, {
        Integer, 0, "Constant"}}, 
       Integer]][$CellContext`ta, $CellContext`si]]], Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction4.so", 
    "compiledFunction4", {{Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}}, Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771832154121614*^9, 3.771833378028796*^9, 
  3.771833534226492*^9, 3.771838940173657*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"44f79193-a84c-4ee9-803b-02413710b5be"]
}, Closed]],

Cell["Update a Tsetlin Automaton to learn to pick action 2.", "CodeText",
 CellChangeTimes->{{3.77171092426439*^9, 
  3.771710983770575*^9}},ExpressionUUID->"aedf7bf2-795e-4859-9718-\
901f3dcef060"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonUpdate", "[", 
  RowBox[{"3", ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717109121367893`*^9, 3.7717109184331417`*^9}, 
   3.771710987616435*^9, {3.7717110409965*^9, 3.771711070268942*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"8277b1fc-9192-4e56-8a66-4d9c0b62a52c"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.771711070964961*^9, 3.771711083287176*^9}, 
   3.771832158058401*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"bf68965d-a187-4a2c-8b0a-9ccd81566330"]
}, Closed]],

Cell["\<\
By now, we have enough functions to implement a basic learning algorithm. The \
following bit of code learns which of two options gets a better result more \
often.\
\>", "Text",
 CellChangeTimes->{{3.7717096674206743`*^9, 3.771709669561469*^9}, {
  3.771710281858734*^9, 3.771710287541407*^9}, {3.771710398712921*^9, 
  3.7717104663797817`*^9}, {3.771710650723826*^9, 3.771710663156369*^9}, {
  3.771710749689456*^9, 
  3.771710751299251*^9}},ExpressionUUID->"c4c398fa-2cde-4787-8c32-\
67ea2a7fd260"],

Cell["\<\
Train a Tsetlin Automaton via nesting TsetlinAutomatonUpdate:\
\>", "CodeText",
 CellChangeTimes->{{3.771711164643793*^9, 3.7717112118853416`*^9}, {
  3.771745537586196*^9, 
  3.771745539169429*^9}},ExpressionUUID->"d43211ee-c429-495d-8210-\
73c2f7acfece"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ta1", "=", 
  RowBox[{"NestList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TsetlinAutomatonUpdate", "[", "\[IndentingNewLine]", 
      RowBox[{
      "#", ",", "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", "\[IndentingNewLine]", 
            RowBox[{"#", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"TakeLargestBy", "[", 
               RowBox[{"#", ",", 
                RowBox[{"#", "&"}], ",", "1"}], "]"}], "\[LeftDoubleBracket]",
               "1", "\[RightDoubleBracket]"}]}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "&"}], "@", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0.75", ",", ".5"}], "]"}], "]"}], ",", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0.25", ",", ".5"}], "]"}], "]"}]}], "}"}]}]}], "]"}], 
     "&"}], ",", "\[IndentingNewLine]", "4", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771710801165113*^9, 3.771710832415866*^9}, {
  3.7717111302143497`*^9, 3.771711157755282*^9}, {3.771745556059176*^9, 
  3.7717455671057663`*^9}, {3.771745703531788*^9, 3.771745704103929*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"d83a95fd-e6e3-4885-8cb7-8203b9c6c28e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "2", 
   ",", "1", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.771710811967348*^9, 3.7717108331268263`*^9}, 
   3.771711086111533*^9, {3.771711121513871*^9, 3.771711151937304*^9}, {
   3.7717112304326897`*^9, 3.77171123141757*^9}, {3.771745479828618*^9, 
   3.771745483055271*^9}, 3.771745568091288*^9, {3.771745704539002*^9, 
   3.7717457076642447`*^9}, 3.7718321859464693`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"ac3ef739-790d-4e33-b6fc-f35fe6dd27c5"]
}, Closed]],

Cell["\<\
Plot the state of the newly trained Tsetlin Automaton\[CloseCurlyQuote]s over \
time. State 2 is above the straight line in the middle, state 1 is below.\
\>", "CodeText",
 CellChangeTimes->{{3.7717455728528233`*^9, 3.771745632569219*^9}, {
  3.7717457268281507`*^9, 
  3.77174573520398*^9}},ExpressionUUID->"4160f55e-b53b-4dc2-8192-\
c88a3c3341a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"ta1", ",", 
    RowBox[{"Table", "[", 
     RowBox[{"3.5", ",", 
      RowBox[{"Length", "[", "ta1", "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.771745637122699*^9, 3.771745668800967*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"8c0ecd65-66d4-4fdc-966e-401635d65f2f"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 4.}, {2., 3.}, {3., 4.}, {4., 3.}, {5., 2.}, {6., 1.}, {
       7., 1.}, {8., 2.}, {9., 1.}, {10., 2.}, {11., 1.}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 3.5}, {2., 3.5}, {3., 3.5}, {4., 3.5}, {5., 3.5}, {6., 
       3.5}, {7., 3.5}, {8., 3.5}, {9., 3.5}, {10., 3.5}, {11., 3.5}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 11.}, {0, 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.771745669571684*^9, 3.771745737912739*^9, 
  3.771832249902607*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"c40e5dc6-ac6a-49dc-8598-f295964ed8a6"]
}, Closed]],

Cell[TextData[StyleBox["Get the final action of ta1:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771745774418622*^9, 
  3.771745783266561*^9}},ExpressionUUID->"0c1115f7-2ed6-4c1e-9b5b-\
66e17e7df923"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonCalculateAction", "[", 
  RowBox[{
   RowBox[{"ta1", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.771745793936144*^9, 3.771745807956468*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"89bbce15-6b1d-4f7f-abb0-6da8e97ead98"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.771745808700678*^9, 3.771832254013918*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"429802c0-4cc2-41fe-b921-671073351217"]
}, Closed]],

Cell["\<\
TsetlinAutomatonWeightedReward and TsetlinAutomatonWeightedPunish are similar \
to TsetlinAutomatonReward and TsetlinAutomatonPunish, except that they also \
take a third argument. If the third argument is greater than a random real \
number from 0 to 1, then it rewards/punishes the Tsetlin Automaton (otherwise \
it does nothing). This is very important for later.\
\>", "Text",
 CellChangeTimes->{{3.771745883840971*^9, 
  3.771746019067*^9}},ExpressionUUID->"22aa067c-9372-4d12-8774-2f422a630440"],

Cell[TextData[StyleBox["The TsetlinAutomatonWeightedReward function \
definition:", "CodeText"]], "Text",
 CellChangeTimes->{{3.77183228549435*^9, 
  3.771832297265188*^9}},ExpressionUUID->"095666e3-17bd-4354-af87-\
71baec934476"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonWeightedReward", "=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TsetlinAutomatonReward", "=", "TsetlinAutomatonReward"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"si", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pf", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pf"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonReward", "[", 
         RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", "ta"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", " ", "->", " ", "True"}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771746038711165*^9, 3.771746066955467*^9}, {
  3.771746647308765*^9, 3.771746648662224*^9}, {3.771832343325017*^9, 
  3.771832449829114*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a9aeed70-f0e0-4b73-a82c-4d34b05d891e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Real"}], 
                    "}"}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Real"}], 
                    "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si", ",", "pf"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pf"}], 
                    ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]), ImageSizeCache -> {
                    45., {0., 9.}}]}, Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}],
                     ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Integer], 
                    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
                    6}}, {{2, {2, 0, 3}}, {1, {2, 0, 5}}}, {1, 7, 1, 0, 
                    0}, {{25, 1, 0, 0}, {2, 0, 7}, {6, 0, 2}, {15, 3, 1, 4}, {
                    46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$5390 == 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390, 
                    Compile`FunctionVariable$5390 > 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390 - 
                    Compile`FunctionVariable$5392, 
                    Compile`FunctionVariable$5390 < 
                    Compile`FunctionVariable$5391, 
                    Compile`FunctionVariable$5390 + 
                    Compile`FunctionVariable$5392]], {
                    Compile`FunctionVariable$5392, 2, 0, 5, Module}, {
                    Compile`FunctionVariable$5391, 2, 0, 4, Module}, {
                    Compile`FunctionVariable$5390, 2, 0, 2, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 4}, {6, 4, 
                    6}, {3, 5}, {6, 0, 2}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[Compile`FunctionVariable$5393 == 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393, 
                    Compile`FunctionVariable$5393 > 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393 - 
                    Compile`FunctionVariable$5395, 
                    Compile`FunctionVariable$5393 < 
                    Compile`FunctionVariable$5394, 
                    Compile`FunctionVariable$5393 + 
                    Compile`FunctionVariable$5395]], {
                    Compile`FunctionVariable$5393, 2, 0, 2, Module}, {
                    Compile`FunctionVariable$5394, 2, 0, 5, Module}, {
                    Compile`FunctionVariable$5395, 2, 0, 5, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 
                    6}, {1}}, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    If[$CellContext`ta > $CellContext`si, 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 2 $CellContext`si, 1]], 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 1, 1]]]], Evaluate, 
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction3.so", 
                    "compiledFunction3", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}}, Integer]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "si"}], "]"}], ",", "ta"}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer], 
    Blank[Real]}, {{2, 0, 0}, {2, 0, 1}, {3, 0, 0}, {2, 0, 
   3}}, {{1., {3, 0, 2}}, {2, {2, 0, 5}}, {1, {2, 0, 7}}, {7., {3, 0, 4}}, {
    0., {3, 0, 1}}}, {2, 9, 5, 0, 
   0}, {{42, "RandomReal", 3, 0, 1, 3, 0, 2, 3, 0, 3}, {27, 4, 4, 3, 0, 0}, {
    2, 0, 17}, {6, 0, 2}, {6, 1, 3}, {25, 3, 2, 1}, {2, 1, 7}, {6, 2, 4}, {15,
     5, 3, 6}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
      Which[
      Compile`FunctionVariable$9026 == Compile`FunctionVariable$9027, 
       Compile`FunctionVariable$9026, Compile`FunctionVariable$9026 > 
       Compile`FunctionVariable$9027, Compile`FunctionVariable$9026 - 
       Compile`FunctionVariable$9028, Compile`FunctionVariable$9026 < 
       Compile`FunctionVariable$9027, Compile`FunctionVariable$9026 + 
       Compile`FunctionVariable$9028]], {
     Compile`FunctionVariable$9026, 2, 0, 4, Module}, {
     Compile`FunctionVariable$9027, 2, 0, 6, Module}, {
     Compile`FunctionVariable$9028, 2, 0, 7, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0, 3, 0, 3}, {40, 53, 3, 0, 3, 2, 0, 6}, {6, 6, 8}, {3, 5}, {6, 2, 4}, {
    46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
      Which[
      Compile`FunctionVariable$9029 == Compile`FunctionVariable$9030, 
       Compile`FunctionVariable$9029, Compile`FunctionVariable$9029 > 
       Compile`FunctionVariable$9030, Compile`FunctionVariable$9029 - 
       Compile`FunctionVariable$9031, Compile`FunctionVariable$9029 < 
       Compile`FunctionVariable$9030, Compile`FunctionVariable$9029 + 
       Compile`FunctionVariable$9031]], {
     Compile`FunctionVariable$9031, 2, 0, 7, Module}, {
     Compile`FunctionVariable$9030, 2, 0, 7, Module}, {
     Compile`FunctionVariable$9029, 2, 0, 4, Module}, 2, 0, 0, 2, 0, 1, 3, 0, 
     0, 3, 0, 3}, {40, 53, 3, 0, 3, 2, 0, 4}, {6, 4, 8}, {6, 8, 3}, {3, 2}, {
    6, 0, 3}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
    If[RandomReal[] <= $CellContext`pf, 
     CompiledFunction[{11, 12., 5468}, {
       Blank[Integer], 
       Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
      6}}, {{2, {2, 0, 3}}, {1, {2, 0, 5}}}, {1, 7, 1, 0, 
      0}, {{25, 1, 0, 0}, {2, 0, 7}, {6, 0, 2}, {15, 3, 1, 4}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$5390 == Compile`FunctionVariable$5391, 
          Compile`FunctionVariable$5390, Compile`FunctionVariable$5390 > 
          Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 - 
          Compile`FunctionVariable$5392, Compile`FunctionVariable$5390 < 
          Compile`FunctionVariable$5391, Compile`FunctionVariable$5390 + 
          Compile`FunctionVariable$5392]], {
        Compile`FunctionVariable$5392, 2, 0, 5, Module}, {
        Compile`FunctionVariable$5391, 2, 0, 4, Module}, {
        Compile`FunctionVariable$5390, 2, 0, 2, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 4}, {6, 4, 6}, {3, 5}, {6, 0, 2}, {
       46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$5393 == Compile`FunctionVariable$5394, 
          Compile`FunctionVariable$5393, Compile`FunctionVariable$5393 > 
          Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 - 
          Compile`FunctionVariable$5395, Compile`FunctionVariable$5393 < 
          Compile`FunctionVariable$5394, Compile`FunctionVariable$5393 + 
          Compile`FunctionVariable$5395]], {
        Compile`FunctionVariable$5393, 2, 0, 2, Module}, {
        Compile`FunctionVariable$5394, 2, 0, 5, Module}, {
        Compile`FunctionVariable$5395, 2, 0, 5, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 6}, {1}}, 
      Function[{$CellContext`ta, $CellContext`si}, 
       If[$CellContext`ta > $CellContext`si, 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 2 $CellContext`si, 1]], 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 1, 1]]]], Evaluate, 
      LibraryFunction[
      "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction3.so", 
       "compiledFunction3", {{Integer, 0, "Constant"}, {
        Integer, 0, "Constant"}}, 
       Integer]][$CellContext`ta, $CellContext`si], $CellContext`ta]], 
   Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction5.so", 
    "compiledFunction5", {{Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Real, 0, "Constant"}}, Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771832450995269*^9, 3.771833378543559*^9, 
  3.771833534902179*^9, 3.7718389405572653`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"54ccc85a-1ed4-4318-9a3b-4fccdea0fbf4"]
}, Closed]],

Cell[TextData[StyleBox["The TsetlinAutomatonWeightedPunish function \
definition:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7718323089378433`*^9, 
  3.771832321749004*^9}},ExpressionUUID->"cbeca8ab-35b9-4ee9-b2a8-\
66153db15dc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonWeightedPunish", "=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TsetlinAutomatonPunish", "=", "TsetlinAutomatonPunish"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ta", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"si", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pf", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pf"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonPunish", "[", 
         RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", "ta"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", " ", "->", " ", "True"}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717460577761993`*^9, 3.7717460693962307`*^9}, {
  3.771746652952652*^9, 3.771746654131428*^9}, {3.771832458832307*^9, 
  3.77183250294048*^9}, {3.771832607636661*^9, 3.7718326320276537`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"faa6a3d4-9a20-4fed-8e24-89ce594c099e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Real"}], 
                    "}"}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer", ",", "_Real"}], 
                    "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"ta", ",", "si", ",", "pf"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pf"}], 
                    ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "_Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"ta", ",", "si"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ta", ">", "si"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {
                    Center, Center}, ImageSize -> Dynamic[{Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> Dynamic[{
                    Automatic, 3.5 
                    CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"x", "\[Equal]", "y"}], ",", "x", ",", 
                    RowBox[{"x", ">", "y"}], ",", 
                    RowBox[{"x", "-", "t"}], ",", 
                    RowBox[{"x", "<", "y"}], ",", 
                    RowBox[{"x", "+", "t"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{
                    Automatic}}}, BaseStyle -> {ShowStringCharacters -> False,
                     NumberMarks -> False, PrintPrecision -> 3, 
                    ShowSyntaxStyles -> False}]}}, GridBoxAlignment -> {
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, Real]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", 
                    RowBox[{"2", " ", "si"}], ",", "1"}], "]"}], "]"}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Integer], 
                    Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
                    4}}, {{2, {2, 0, 5}}, {1, {2, 0, 3}}}, {1, 7, 1, 0, 
                    0}, {{25, 1, 0, 0}, {2, 0, 6}, {6, 0, 2}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$4089 == 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089, 
                    Compile`FunctionVariable$4089 > 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089 - 
                    Compile`FunctionVariable$4091, 
                    Compile`FunctionVariable$4089 < 
                    Compile`FunctionVariable$4090, 
                    Compile`FunctionVariable$4089 + 
                    Compile`FunctionVariable$4091]], {
                    Compile`FunctionVariable$4090, 2, 0, 3, Module}, {
                    Compile`FunctionVariable$4089, 2, 0, 2, Module}, {
                    Compile`FunctionVariable$4091, 2, 0, 3, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 
                    4}, {3, 6}, {6, 0, 4}, {15, 5, 1, 6}, {46, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    Which[
                    Compile`FunctionVariable$4092 == 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092, 
                    Compile`FunctionVariable$4092 > 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092 - 
                    Compile`FunctionVariable$4094, 
                    Compile`FunctionVariable$4092 < 
                    Compile`FunctionVariable$4093, 
                    Compile`FunctionVariable$4092 + 
                    Compile`FunctionVariable$4094]], {
                    Compile`FunctionVariable$4094, 2, 0, 3, Module}, {
                    Compile`FunctionVariable$4093, 2, 0, 6, Module}, {
                    Compile`FunctionVariable$4092, 2, 0, 4, Module}, 2, 0, 0, 
                    2, 0, 1, 3, 0, 0}, {40, 53, 3, 0, 0, 2, 0, 6}, {6, 6, 
                    4}, {1}}, 
                    Function[{$CellContext`ta, $CellContext`si}, 
                    If[$CellContext`ta > $CellContext`si, 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 1, 1]], 
                    IntegerPart[
                    CompiledFunction[{11, 12., 5468}, {
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
                    3}}, {}, {0, 0, 4, 0, 0}, {{46, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
                    3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
                    Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
                    
                    Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
                    
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
                    "compiledFunction1", {{Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
                    Real]][$CellContext`ta, 2 $CellContext`si, 1]]]], 
                    Evaluate, 
                    LibraryFunction[
                    "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction2.so", 
                    "compiledFunction2", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}}, Integer]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", 
                    RowBox[{"ta", ",", "si"}], "]"}], ",", "ta"}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12., 5468}, {
    Blank[Integer], 
    Blank[Integer], 
    Blank[Real]}, {{2, 0, 0}, {2, 0, 1}, {3, 0, 0}, {2, 0, 
   3}}, {{1., {3, 0, 2}}, {2, {2, 0, 7}}, {1, {2, 0, 5}}, {7., {3, 0, 4}}, {
    0., {3, 0, 1}}}, {2, 9, 5, 0, 
   0}, {{42, "RandomReal", 3, 0, 1, 3, 0, 2, 3, 0, 3}, {27, 4, 4, 3, 0, 0}, {
    2, 0, 17}, {6, 0, 2}, {6, 1, 3}, {25, 3, 2, 1}, {2, 1, 6}, {6, 2, 4}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
      Which[
      Compile`FunctionVariable$10634 == Compile`FunctionVariable$10635, 
       Compile`FunctionVariable$10634, Compile`FunctionVariable$10634 > 
       Compile`FunctionVariable$10635, Compile`FunctionVariable$10634 - 
       Compile`FunctionVariable$10636, Compile`FunctionVariable$10634 < 
       Compile`FunctionVariable$10635, Compile`FunctionVariable$10634 + 
       Compile`FunctionVariable$10636]], {
     Compile`FunctionVariable$10634, 2, 0, 4, Module}, {
     Compile`FunctionVariable$10635, 2, 0, 5, Module}, {
     Compile`FunctionVariable$10636, 2, 0, 5, Module}, 2, 0, 0, 2, 0, 1, 3, 0,
      0, 3, 0, 3}, {40, 53, 3, 0, 3, 2, 0, 4}, {6, 4, 6}, {3, 6}, {6, 2, 6}, {
    15, 7, 3, 8}, {46, 
     Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
      Which[
      Compile`FunctionVariable$10637 == Compile`FunctionVariable$10638, 
       Compile`FunctionVariable$10637, Compile`FunctionVariable$10637 > 
       Compile`FunctionVariable$10638, Compile`FunctionVariable$10637 - 
       Compile`FunctionVariable$10639, Compile`FunctionVariable$10637 < 
       Compile`FunctionVariable$10638, Compile`FunctionVariable$10637 + 
       Compile`FunctionVariable$10639]], {
     Compile`FunctionVariable$10637, 2, 0, 6, Module}, {
     Compile`FunctionVariable$10639, 2, 0, 5, Module}, {
     Compile`FunctionVariable$10638, 2, 0, 8, Module}, 2, 0, 0, 2, 0, 1, 3, 0,
      0, 3, 0, 3}, {40, 53, 3, 0, 3, 2, 0, 8}, {6, 8, 6}, {6, 6, 3}, {3, 2}, {
    6, 0, 3}, {1}}, 
   Function[{$CellContext`ta, $CellContext`si, $CellContext`pf}, 
    If[RandomReal[] <= $CellContext`pf, 
     CompiledFunction[{11, 12., 5468}, {
       Blank[Integer], 
       Blank[Integer]}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 
      4}}, {{2, {2, 0, 5}}, {1, {2, 0, 3}}}, {1, 7, 1, 0, 
      0}, {{25, 1, 0, 0}, {2, 0, 6}, {6, 0, 2}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$4089 == Compile`FunctionVariable$4090, 
          Compile`FunctionVariable$4089, Compile`FunctionVariable$4089 > 
          Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 - 
          Compile`FunctionVariable$4091, Compile`FunctionVariable$4089 < 
          Compile`FunctionVariable$4090, Compile`FunctionVariable$4089 + 
          Compile`FunctionVariable$4091]], {
        Compile`FunctionVariable$4090, 2, 0, 3, Module}, {
        Compile`FunctionVariable$4089, 2, 0, 2, Module}, {
        Compile`FunctionVariable$4091, 2, 0, 3, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 2}, {6, 2, 4}, {3, 6}, {6, 0, 4}, {15, 
       5, 1, 6}, {46, 
        Function[{$CellContext`ta, $CellContext`si}, 
         Which[
         Compile`FunctionVariable$4092 == Compile`FunctionVariable$4093, 
          Compile`FunctionVariable$4092, Compile`FunctionVariable$4092 > 
          Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 - 
          Compile`FunctionVariable$4094, Compile`FunctionVariable$4092 < 
          Compile`FunctionVariable$4093, Compile`FunctionVariable$4092 + 
          Compile`FunctionVariable$4094]], {
        Compile`FunctionVariable$4094, 2, 0, 3, Module}, {
        Compile`FunctionVariable$4093, 2, 0, 6, Module}, {
        Compile`FunctionVariable$4092, 2, 0, 4, Module}, 2, 0, 0, 2, 0, 1, 3, 
        0, 0}, {40, 53, 3, 0, 0, 2, 0, 6}, {6, 6, 4}, {1}}, 
      Function[{$CellContext`ta, $CellContext`si}, 
       If[$CellContext`ta > $CellContext`si, 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 1, 1]], 
        IntegerPart[
         CompiledFunction[{11, 12., 5468}, {
           Blank[Real], 
           Blank[Real], 
           Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}}, {}, {0,
           0, 4, 0, 0}, {{46, 
            Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
             
             Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], 3, 0, 0, 
            3, 0, 1, 3, 0, 2, 3, 0, 3}, {1}}, 
          Function[{$CellContext`x, $CellContext`y, $CellContext`t}, 
           
           Which[$CellContext`x == $CellContext`y, $CellContext`x, \
$CellContext`x > $CellContext`y, $CellContext`x - $CellContext`t, \
$CellContext`x < $CellContext`y, $CellContext`x + $CellContext`t]], Evaluate, 
          
          LibraryFunction[
          "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/\
BuildFolder/cellularautomaton-1131/compiledFunction1.so", 
           "compiledFunction1", {{Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}}, 
           Real]][$CellContext`ta, 2 $CellContext`si, 1]]]], Evaluate, 
      LibraryFunction[
      "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction2.so", 
       "compiledFunction2", {{Integer, 0, "Constant"}, {
        Integer, 0, "Constant"}}, 
       Integer]][$CellContext`ta, $CellContext`si], $CellContext`ta]], 
   Evaluate, 
   LibraryFunction[
   "/home/dv/.WolframDesktop/ApplicationData/CCompilerDriver/BuildFolder/\
cellularautomaton-1131/compiledFunction6.so", 
    "compiledFunction6", {{Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Real, 0, "Constant"}}, Integer]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771832633100153*^9, 3.771833378934347*^9, 
  3.771833535451455*^9, 3.771838940910232*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ca7b2061-8259-4ca2-9acd-d6d6d0cb1916"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinAutomatonListInitialize", "Code"],
 " is a function that, given a state identifier and number of automata, \
randomly initializes a list of Tsetlin Automata."
}], "Text",
 CellChangeTimes->{{3.771753641917004*^9, 
  3.771753747460565*^9}},ExpressionUUID->"8b230e5e-4c8a-4373-ad90-\
9ace69631e5e"],

Cell[TextData[StyleBox["The function definition for \
TsetlinAutomatonListInitialize:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7717540317930527`*^9, 
  3.771754043285432*^9}},ExpressionUUID->"a50cee4d-e469-47ab-9691-\
e14b2443d3c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonListInitialize", "[", 
   RowBox[{"si_Integer", ",", "il_Integer"}], "]"}], ":=", "\n", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", "]"}], "+", "si"}], ",", "il"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771753749258532*^9, 3.771753758631299*^9}, {
  3.771833323833539*^9, 3.771833325187731*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"328c6bbc-0d19-40d0-8213-8187c3ef9682"]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic Structure of a Tsetlin Machine", "Section",
 CellChangeTimes->{{3.771746689565344*^9, 
  3.7717467011813*^9}},ExpressionUUID->"c8ac9de5-5137-42ae-9376-41699953d71b"],

Cell["\<\
The Tsetlin Machine is arranged hierarchically. At the lowest level, there \
are Tsetlin Automata. In a Tsetlin Machine, the Tsetlin Automata are \
responsible for figuring out which input to include and which input to \
exclude. Each Automata corresponds to one input. One level up, there are \
Tsetlin Clauses, which hold two lists-- one that holds the Tsetlin Automata \
that chose whether to include or exclude the input, and another that holds \
another set of Tsetlin Automata that chose whether to include or exclude the \
input negated. The Tsetlin Clause then applies the \[OpenCurlyDoubleQuote]AND\
\[CloseCurlyDoubleQuote] operation to all of the included inputs and outputs \
the result.\
\>", "Text",
 CellChangeTimes->{{3.771746725823481*^9, 3.7717470224421864`*^9}, {
  3.771747611450617*^9, 
  3.771747668906643*^9}},ExpressionUUID->"fc794f4a-82dd-4e0a-aa4b-\
3abb31f8798e"],

Cell["\<\
An input of {True, False, True} would be fed to a Tsetlin Clause like the \
following:\
\>", "CodeText",
 CellChangeTimes->{{3.7717475812630444`*^9, 3.771747587439941*^9}, {
  3.771747687857222*^9, 
  3.771747759328548*^9}},ExpressionUUID->"76e56e50-60f0-4387-b1d4-\
2aac6b38bdf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.771747761391609*^9, 3.771747772403719*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"22591b6a-3c44-491a-8638-54815ff667ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771747772936054*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"603d92ce-076c-4103-bc06-c7eb68c7bbe5"]
}, Closed]],

Cell[TextData[StyleBox["A Tsetlin Clause that includes the positive inputs, \
assuming state identifier 3:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771747800639567*^9, 3.771747901131825*^9}, {
  3.771747979829681*^9, 
  3.77174798085529*^9}},ExpressionUUID->"6649143b-4e11-4c59-8857-\
3fb5af174563"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinClause", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771747885426052*^9, 3.771747921628552*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5863fb0e-0914-4a4e-8050-c48cb1ec6fdf"],

Cell[BoxData[
 RowBox[{"TsetlinClause", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.771747921846884*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5a41b4fe-e4dd-4892-885c-2d6babc90c32"]
}, Closed]],

Cell[TextData[{
 "The ",
 StyleBox["TsetlinClause", "Code"],
 " head has the following 2 helper functions: ",
 StyleBox["TsetlinClauseGetPositive", "Code"],
 " and ",
 StyleBox["TsetlinClauseGetNegative", "Code"],
 ". These return the list of Tsetlin Automata corresponding to the positive \
and negative (negated) inputs, respectively."
}], "Text",
 CellChangeTimes->{{3.771747945508896*^9, 3.7717480508981323`*^9}, {
  3.771748122360785*^9, 3.7717481296755466`*^9}, {3.77175343557998*^9, 
  3.7717534497525063`*^9}},ExpressionUUID->"198fbac6-da1d-4fda-b20b-\
864ad7885f44"],

Cell[TextData[StyleBox["The function definitions for TsetlinClauseGetPositive \
and TsetlinClauseGetNegative:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771751408048253*^9, 
  3.771751424355465*^9}},ExpressionUUID->"ed7ca6d4-fc43-4547-b849-\
5c3c19100863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseGetPositive", "[", "tc_TsetlinClause", "]"}], ":=", 
  RowBox[{"tc", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717480606973257`*^9, 3.771748062105954*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"add84edd-232b-4675-a562-057d478ebac8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseGetNegative", "[", "tc_TsetlinClause", "]"}], ":=", 
  RowBox[{"tc", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771748076999978*^9, 3.771748079184149*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"26739473-1c18-4124-b4fe-0795068d348e"],

Cell[TextData[StyleBox["Getting the list of Tsetlin Automata that correspond \
to negated input:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771751477184801*^9, 
  3.771751492966669*^9}},ExpressionUUID->"d470d5a9-b482-4441-a712-\
35ea65e8ef48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinClauseGetNegative", "[", "\[IndentingNewLine]", 
  RowBox[{"TsetlinClause", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771751399403686*^9, 3.771751404027734*^9}, {
  3.771751452575253*^9, 3.771751465489625*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e8b191b2-881d-4450-aac3-5b8377637e90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.7717514687911167`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0696f101-dca3-43e6-b0d3-4de59d32cbb1"]
}, Closed]],

Cell[TextData[{
 "A ",
 StyleBox["TsetlinClause", "Code"],
 " also has the helper function ",
 StyleBox["TsetlinClauseInitialize", "Code"],
 ", which takes two integer inputs: the state identifier and number of \
inputs. It outputs a randomly initialized ",
 StyleBox["TsetlinClause", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.771753457867177*^9, 
  3.77175356974806*^9}},ExpressionUUID->"28aa213b-68a8-4a36-be30-\
bc9dfe16d046"],

Cell[TextData[StyleBox["The function definition for \
TsetlinClauseInitialize:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7717540317930527`*^9, 3.771754043285432*^9}, {
  3.771754085588231*^9, 
  3.771754088369125*^9}},ExpressionUUID->"1658b007-4a7c-479d-aacb-\
036bf6bba184"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseInitialize", "[", 
   RowBox[{"si_Integer", ",", "il_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"base", "=", 
      RowBox[{"TsetlinAutomatonListInitialize", "[", 
       RowBox[{"si", ",", "il"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"TsetlinClause", "[", 
     RowBox[{"base", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "*", "si"}], ")"}], "-", "base"}], ")"}], "+", "1"}]}],
      "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771753591257313*^9, 3.771753614892223*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9b74e0fd-0853-4b79-b46e-f7f34c4741e4"],

Cell[TextData[{
 "One step up the hierarchy from a Tsetlin Clause is a Tsetlin Output. A ",
 StyleBox["TsetlinOutput", "Code"],
 " head has two arguments: a list of ",
 StyleBox["TsetlinClauses", "Code"],
 " and a function (which should take a list of Booleans as input and output a \
Boolean):"
}], "Text",
 CellChangeTimes->{{3.771748147438315*^9, 3.771748166131137*^9}, {
  3.7717482570774813`*^9, 3.7717482996757927`*^9}, {3.7717484647542353`*^9, 
  3.771748472309546*^9}, {3.7717485712809267`*^9, 
  3.771748597814983*^9}},ExpressionUUID->"dcc0bbd0-fae3-492f-96c8-\
15b3f2cc4ee2"],

Cell[TextData[StyleBox["An example of a TsetlinOutput:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771748477209543*^9, 
  3.7717484990452633`*^9}},ExpressionUUID->"13af37af-1fec-4451-8957-\
f1e531acf45d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TsetlinClause", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TsetlinClause", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717485007595873`*^9, 3.771748559140053*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"9d3c5fde-4699-49e0-8240-f817ce0aff46"],

Cell[BoxData[
 RowBox[{"TsetlinOutput", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TsetlinClause", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
     RowBox[{"TsetlinClause", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}]], "Output",
 CellChangeTimes->{3.771748607603982*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"062da419-433f-4ec3-8f3d-d8b2df330966"]
}, Closed]],

Cell[TextData[{
 "The TsetlinOutput head has the following helper functions: ",
 StyleBox["TsetlinOutputGetClauses", "Code"],
 " and ",
 StyleBox["TsetlinOutputGetFunction", "Code"],
 ". Given a TsetlinOutput, the return the list of clauses or the function, \
respectively."
}], "Text",
 CellChangeTimes->{{3.77174861918671*^9, 3.77174863502185*^9}, {
  3.77175128814069*^9, 3.771751341168044*^9}, {3.7717515482991*^9, 
  3.771751550930399*^9}},ExpressionUUID->"8ae03e4b-d368-49a7-8cf0-\
dd5c0f64d659"],

Cell["\<\
The function definitions for TsetlinOutputGetClauses and \
TsetlinOutputGetFunction:\
\>", "CodeText",
 InitializationCell->True,
 CellChangeTimes->{{3.7717515123555737`*^9, 3.7717515228684464`*^9}, {
  3.771751555247674*^9, 3.771751555925621*^9}, {3.771761368204358*^9, 
  3.771761370825603*^9}},ExpressionUUID->"924d7479-2695-43f4-959c-\
2796f1279bf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinOutputGetClauses", "[", "to_TsetlinOutput", "]"}], ":=", 
  RowBox[{"to", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771751572570507*^9, 3.771751598305881*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cf9c3011-bbf7-4c9e-9f52-8505261cd7a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinOutputGetFunction", "[", "to_TsetlinOutput", "]"}], ":=", 
  RowBox[{"to", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771751600263114*^9, 3.7717516328586073`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d2a08e80-08b5-4297-89da-f54c670484f9"],

Cell[TextData[StyleBox["Getting the clauses of a TsetlinOutput:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771751355829978*^9, 
  3.771751380586591*^9}},ExpressionUUID->"87f8afff-5df8-4e14-9aae-\
fb29f5fe829a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinOutputGetClauses", "[", "\[IndentingNewLine]", 
  RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinClause", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TsetlinClause", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "10", ",", "12"}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717513815519953`*^9, 3.77175138661486*^9}, {
  3.771751636497011*^9, 3.771751718086025*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b5229755-1dc5-4f27-b084-8537c318291b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"TsetlinClause", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"TsetlinClause", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10", ",", "12"}], "}"}]}], "]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.7717516776942253`*^9, 3.771751718619129*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"657816b9-f205-40a0-b5d0-68e200ecc3a8"]
}, Closed]],

Cell["Getting the function of a TsetlinOutput:", "CodeText",
 CellChangeTimes->{{3.7717517223886843`*^9, 
  3.7717517323139153`*^9}},ExpressionUUID->"97d03652-523f-4335-9e2c-\
4713dbff1401"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinOutputGetFunction", "[", "\[IndentingNewLine]", 
  RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinClause", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TsetlinClause", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "10", ",", "12"}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717517703237953`*^9, 3.771751788301519*^9}, 
   3.7717525829383993`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"dc0cc354-418d-4d74-9476-4a592cdb8b4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Or", "@@", "#1"}], "&"}]], "Output",
 CellChangeTimes->{3.771751789646323*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"499c81ea-6bee-4f42-b098-f07696fbc37b"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinOutput", "Code"],
 " has an initializer too: ",
 StyleBox["TsetlinOutputInitialize", "Code"],
 ". It takes 4 arguments: the state identifier, the length of the input, the \
desired number of clauses for the given output, and the output function."
}], "Text",
 CellChangeTimes->{{3.771753807108382*^9, 
  3.771753860283927*^9}},ExpressionUUID->"efa83d67-8772-4fb0-bbf8-\
7e7a89a14cac"],

Cell[TextData[StyleBox["The function definition for \
TsetlinOutputInitialize:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7717540317930527`*^9, 3.771754043285432*^9}, {
  3.771754100360261*^9, 
  3.771754100912945*^9}},ExpressionUUID->"9f2394fa-a16c-4ddb-bdf5-\
5ae0634bbb56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinOutputInitialize", "[", 
   RowBox[{
   "si_Integer", ",", "il_Integer", ",", "nc_Integer", ",", " ", "f_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinClauseInitialize", "[", 
       RowBox[{"si", ",", "il"}], "]"}], ",", "\[IndentingNewLine]", "nc"}], 
     "]"}], ",", "\[IndentingNewLine]", "f"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717539163170853`*^9, 3.7717539207591343`*^9}, {
  3.771768469078351*^9, 3.771768471962253*^9}, {3.7718333322801*^9, 
  3.771833333162672*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cad0c01e-7229-4a7a-8dc6-498cf0f3008c"],

Cell[TextData[{
 "One more step up the hierarchy, and we have a complete Tsetlin Machine! The \
",
 StyleBox["TsetlinMachine", "Code"],
 " head takes 2 arguments: a list of ",
 StyleBox["TsetlinOutputs", "Code"],
 " and a state identifier."
}], "Text",
 CellChangeTimes->{{3.771751812063507*^9, 3.7717518229555273`*^9}, {
  3.7717520575630093`*^9, 3.771752077143825*^9}, {3.771752111540578*^9, 
  3.771752190575727*^9}},ExpressionUUID->"7303d24c-0ee6-4a50-bda3-\
b3b7737cdc69"],

Cell["An example of a complete TsetlinMachine:", "CodeText",
 CellChangeTimes->{{3.7717522934104156`*^9, 
  3.771752300592578*^9}},ExpressionUUID->"cfccdb02-b562-4a6a-99b2-\
3f2ce360b548"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tm1", "=", 
  RowBox[{"TsetlinMachine", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TsetlinClause", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TsetlinClause", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TsetlinClause", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TsetlinClause", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771752215630574*^9, 3.771752314744691*^9}, {
  3.7717530687112703`*^9, 3.771753073434703*^9}, {3.771753390915703*^9, 
  3.771753391058591*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"af351a64-2321-45d5-a80c-1733b49d8b9c"],

Cell[BoxData[
 RowBox[{"TsetlinMachine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TsetlinOutput", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TsetlinClause", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "]"}], ",", 
         RowBox[{"TsetlinClause", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}], ",", 
     RowBox[{"TsetlinOutput", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TsetlinClause", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"TsetlinClause", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}]}], "}"}], ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.771752309498927*^9, 3.771752315364347*^9}, 
   3.771753074310832*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"96f847af-f36e-4759-b3fd-e960d9323624"]
}, Closed]],

Cell[TextData[{
 "The TsetlinMachine head has 2 helper functions: ",
 StyleBox["TsetlinMachineGetOutputs", "Code"],
 " and ",
 StyleBox["TsetlinMachineGetStateIdentifier. ", "Code"],
 "They each take a ",
 StyleBox["TsetlinMachine", "Code"],
 " as input, and return the list of outputs or the state identifier, \
respectively."
}], "Text",
 CellChangeTimes->{{3.7717523464360332`*^9, 3.7717523921557093`*^9}, 
   3.771752565360394*^9, {3.771752830929181*^9, 
   3.771752882912778*^9}},ExpressionUUID->"e464e746-e34c-43f4-a0cb-\
cf6d15aa5ef6"],

Cell[TextData[StyleBox["The function definitions for TsetlinMachineGetOutputs \
and TsetlinMachineStateIdentifier:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771753116471154*^9, 
  3.7717531288095083`*^9}},ExpressionUUID->"4461b223-924d-49c4-816a-\
60930268a85e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineGetOutputs", "[", "tm_TsetlinMachine", "]"}], ":=", 
  RowBox[{"tm", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771752909901857*^9, 3.771752922619461*^9}, {
  3.771753003540781*^9, 3.771753010939063*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"549b2135-06e6-4e2d-b0d6-a06e6a90e3ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm_TsetlinMachine", "]"}],
   ":=", 
  RowBox[{"tm", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771753014744162*^9, 3.7717530350463467`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"fea0ac9d-e456-466a-999b-807410b712d7"],

Cell["Get the outputs of a TsetlinMachine:", "CodeText",
 CellChangeTimes->{{3.7717531619689283`*^9, 
  3.771753171231949*^9}},ExpressionUUID->"03ccbcdf-01be-4298-8c37-\
94f0a8e3f689"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinMachineGetOutputs", "[", "tm1", "]"}]], "Input",
 CellChangeTimes->{{3.7717530766330023`*^9, 3.7717530769518623`*^9}, {
  3.7717531070789433`*^9, 3.771753112285982*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"69e58480-28dc-442d-be05-8e84ef8f6747"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"TsetlinOutput", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TsetlinClause", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"TsetlinClause", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}], ",", 
   RowBox[{"TsetlinOutput", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TsetlinClause", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"TsetlinClause", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7717531125139303`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"40450550-5c64-4d1d-a0aa-0f018835c6bf"]
}, Closed]],

Cell[TextData[StyleBox["Get the state identifier of a TsetlinMachine:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771753159745859*^9, 
  3.771753191064014*^9}},ExpressionUUID->"6d9531d3-ca4b-45a2-a07c-\
aa993480c11d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm1", "]"}]], "Input",
 CellChangeTimes->{{3.771753220794154*^9, 3.771753230170871*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"85691441-2f9a-4d4e-801c-9a057cb56e75"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.771753230329899*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ac6306ba-5b17-45ac-885c-08e1dcc29bd7"]
}, Closed]],

Cell[TextData[{
 "There also is an initializer for ",
 StyleBox["TsetlinMachines", "Code"],
 " which takes 4 inputs: the state identifier integer, the length of the \
inputs, the number of clauses per output, and a list of output functions."
}], "Text",
 CellChangeTimes->{{3.771753417337915*^9, 3.771753420188781*^9}, {
  3.771754013153612*^9, 3.77175402119143*^9}, {3.771754134418324*^9, 
  3.771754226333417*^9}},ExpressionUUID->"d671b877-7ac5-4f38-831a-\
21d26b6ccd64"],

Cell[TextData[StyleBox["The function definition for \
TsetlinMachineInitialize:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7717540317930527`*^9, 3.771754043285432*^9}, {
  3.7717542503239307`*^9, 
  3.771754252976071*^9}},ExpressionUUID->"630efdde-8413-4698-9a5e-\
efee5de05e8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineInitialize", "[", 
   RowBox[{
   "si_Integer", ",", "il_Integer", ",", "nc_Integer", ",", "lf_List"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"TsetlinMachine", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TsetlinOutputInitialize", "[", "\[IndentingNewLine]", 
        RowBox[{
        "si", ",", "\[IndentingNewLine]", "il", ",", "\[IndentingNewLine]", 
         "nc", ",", "\[IndentingNewLine]", "#"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", "lf"}], "]"}], ",", "\[IndentingNewLine]", 
    "si"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771754261695114*^9, 3.7717542668820744`*^9}, 
   3.771754298350573*^9, {3.7717684487089243`*^9, 3.771768450492749*^9}, {
   3.7718332334411917`*^9, 3.77183325629349*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"37f1cc1a-56b0-49da-a310-35037ccdb946"]
}, Closed]],

Cell[CellGroupData[{

Cell["Using a Tsetlin Machine", "Section",
 CellChangeTimes->{{3.771754308573677*^9, 
  3.771754314140534*^9}},ExpressionUUID->"bde74e34-f82a-4d90-a89f-\
36099a8bc73d"],

Cell[TextData[{
 "Before a ",
 StyleBox["TsetlinMachine ", "Code"],
 "can be trained, it needs to be able to be used. For the purposes of \
developing functions that apply a TsetlinMachine, we still can use one that \
is already trained. Take the following ",
 StyleBox["TsetlinMachine", "Code"],
 " which has been trained to the XOR operation:"
}], "Text",
 CellChangeTimes->{{3.771754424140415*^9, 3.771754508699398*^9}, {
  3.771754671993177*^9, 
  3.7717547140684853`*^9}},ExpressionUUID->"3f385c26-598d-4cea-93de-\
befbdae6bc9b"],

Cell["Create a Tsetlin machine that calculates XOR with 2 inputs:", "CodeText",
 CellChangeTimes->{{3.7717551642749968`*^9, 
  3.771755182160104*^9}},ExpressionUUID->"d261bcf5-9381-40c3-bb52-\
f4a450b38c92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tm2", "=", 
  RowBox[{"TsetlinMachine", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TsetlinClause", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TsetlinClause", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Or", "@@", "#"}], "&"}]}], "]"}], "}"}], ",", 
    "\[IndentingNewLine]", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7717545906820183`*^9, 3.771754646694243*^9}, {
  3.771754725721027*^9, 3.771754792572274*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"877b0c53-c993-4565-8700-d1236b370c1c"],

Cell[BoxData[
 RowBox[{"TsetlinMachine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TsetlinOutput", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}], "}"}], ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7717547940567713`*^9, 3.7717855030072536`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e5c88a0a-1e9c-4037-8ee2-c1dea4a142ab"]
}, Closed]],

Cell[TextData[{
 "Let's again work from the bottom up. ",
 StyleBox["TsetlinClauseCalculateIncludedInputs", "Code"],
 " takes a TsetlinClause, state identifier, and list of inputs, figures which \
ones are included based on their respective Tsetlin Automaton, and outputs a \
list of the included inputs."
}], "Text",
 CellChangeTimes->{{3.7717548558998547`*^9, 3.7717548677887278`*^9}, {
  3.771755020485037*^9, 
  3.77175512500323*^9}},ExpressionUUID->"ed521a65-7ec1-463a-89fb-\
723ad67f7a00"],

Cell[TextData[StyleBox["The function definition for \
TsetlinClauseCalculateIncludedInputs:", "CodeText"]], "Text",
 CellChangeTimes->{{3.77175522528608*^9, 
  3.7717552443394613`*^9}},ExpressionUUID->"42be0f7a-7091-4fc6-92d0-\
8158b4bdc5c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseCalculateIncludedInputs", "[", 
   RowBox[{"tc_TsetlinClause", ",", "si_Integer", ",", "li_List"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Last", "/@", "\[IndentingNewLine]", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"TsetlinAutomatonCalculateAction", "[", 
              RowBox[{"#", ",", "si"}], "]"}], "&"}], "/@", 
            RowBox[{"TsetlinClauseGetPositive", "[", "tc", "]"}]}], ")"}], 
          ",", "\[IndentingNewLine]", "li"}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"TsetlinAutomatonCalculateAction", "[", 
              RowBox[{"#", ",", "si"}], "]"}], "&"}], "/@", 
            RowBox[{"TsetlinClauseGetNegative", "[", "tc", "]"}]}], ")"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Not", "/@", "li"}]}], "}"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], "&"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771755143820265*^9, 3.7717551484356403`*^9}, {
  3.771755437267757*^9, 3.771755486244124*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"dad0ce6e-b81e-4b38-b5b1-4e008ee81a0e"],

Cell[TextData[StyleBox["Applying TsetlinClauseCalculateIncludedInputs to the \
first clause in the XOR TsetlinMachine above, with input {True, False}:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771755275893919*^9, 3.7717553157832747`*^9}, {
  3.771755732658454*^9, 
  3.771755739033443*^9}},ExpressionUUID->"2873cd71-bbc2-415d-835c-\
561939986746"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinClauseCalculateIncludedInputs", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TsetlinOutputGetClauses", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinMachineGetOutputs", "[", "tm2", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm2", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771755327865733*^9, 3.7717554254100313`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"8b829157-5ccc-42aa-96f5-750f9eccd261"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.771755426148378*^9, 3.771755488729891*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a9dc1484-f65c-4ac7-bc74-4075e8b5dd15"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinClauseCalculateResult", "Code"],
 " takes a ",
 StyleBox["TsetlinClause", "Code"],
 ", state identifier, and a list of inputs and figures out the output of the ",
 StyleBox["TsetlinClause", "Code"],
 " (it ANDs the included inputs)."
}], "Text",
 CellChangeTimes->{{3.771755504003789*^9, 3.771755561194414*^9}, {
  3.771755595770773*^9, 
  3.771755612475753*^9}},ExpressionUUID->"c2a1a465-6802-41a0-b1ea-\
b91aa60253bc"],

Cell["The function definition for TsetlinClauseCalculateResult.", "CodeText",
 CellChangeTimes->{{3.771755651947515*^9, 
  3.771755662039731*^9}},ExpressionUUID->"0938c48e-7485-45b8-b2ab-\
74e3ce27a1a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseCalculateResult", "[", 
   RowBox[{"tc_TsetlinClause", ",", "si_Integer", ",", "li_List"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Fold", "[", "\[IndentingNewLine]", 
   RowBox[{
   "And", ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
    RowBox[{"TsetlinClauseCalculateIncludedInputs", "[", 
     RowBox[{"tc", ",", "si", ",", "li"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771755635220421*^9, 3.771755642537225*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"15e2c580-2471-4aed-bce1-343bf07ae510"],

Cell["\<\
Applying TsetlinClauseCalculateResult to the first clause in the XOR \
TsetlinMachine above, with input {True, False} :\
\>", "CodeText",
 CellChangeTimes->{{3.771755695813221*^9, 
  3.771755728194004*^9}},ExpressionUUID->"55e455ca-a287-40ee-a95a-\
0372ba6d1f34"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinClauseCalculateResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TsetlinOutputGetClauses", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TsetlinMachineGetOutputs", "[", "tm2", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm2", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717557483201027`*^9, 3.7717557494264812`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"06fd98a9-4529-4e0d-adcd-64dbe7b44885"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.771755742764138*^9, 3.7717557498172827`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"244f5ac3-a708-46e3-bb62-29d9837f67a1"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinOutputCalculateResult", "Code"],
 " takes a ",
 StyleBox["TsetlinOutput", "Code"],
 ", state identifier, and list of inputs as it\[CloseCurlyQuote]s arguments. \
It returns the result of fold-applying the function of the ",
 StyleBox["TsetlinOutput", "Code"],
 " to the ",
 StyleBox["TsetlinClause", "Code"],
 " outputs calculated with the given state identifier and input."
}], "Text",
 CellChangeTimes->{{3.771756057104508*^9, 
  3.771756102646113*^9}},ExpressionUUID->"6b816366-91df-483c-8ba0-\
2cb0d054f178"],

Cell["The function definition for TsetlinOutputCalculateResult:", "CodeText",
 CellChangeTimes->{{3.771756155312324*^9, 
  3.77175617695852*^9}},ExpressionUUID->"0d5db395-1f46-46de-93d9-\
9577c9279872"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinOutputCalculateResult", "[", 
   RowBox[{"to_TsetlinOutput", ",", "si_Integer", ",", "li_List"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TsetlinOutputGetFunction", "[", "to", "]"}], "[", 
   "\[IndentingNewLine]", 
   RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TsetlinClauseCalculateResult", "[", 
       RowBox[{"#", ",", "si", ",", "li"}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}]}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771756111486589*^9, 3.77175614805028*^9}, 
   3.771768954647094*^9, {3.77183326782817*^9, 3.771833269347117*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d6a1e962-f8c5-42d6-863f-1977053011f1"],

Cell["\<\
Applying TsetlinOutputCalculateResult to the first output in the XOR \
TsetlinMachine above, with input {True, False} :\
\>", "CodeText",
 CellChangeTimes->{{3.771756183492167*^9, 
  3.771756203887803*^9}},ExpressionUUID->"63b5b756-7e9a-4bb7-be10-\
dc5e11263c63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinOutputCalculateResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TsetlinMachineGetOutputs", "[", "tm2", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm2", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717562127248497`*^9, 3.771756283178495*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"f4b43eb6-29e8-4354-8bde-d8747089e692"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7717562591305857`*^9, 3.771756283732375*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"ccc8ef0e-a930-4ab8-bde9-bbf2f8ee6da7"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinMachineCalculateResult", "Code"],
 " takes a TsetlinMachine and a list of inputs as input, and outputs a list \
of the outputs. This is the way to apply trained Tsetlin machines."
}], "Text",
 CellChangeTimes->{{3.77175682833853*^9, 
  3.771756878351267*^9}},ExpressionUUID->"87ab3784-dca9-48d2-8700-\
68ab674cddf8"],

Cell["The function definition for TsetlinMachineCalculateResult:", "CodeText",
 CellChangeTimes->{{3.771756865341433*^9, 
  3.771756879742896*^9}},ExpressionUUID->"418e48ab-19bd-4b02-ade8-\
0b1ab3195387"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineCalculateResult", "[", 
   RowBox[{"tm_TsetlinMachine", ",", "li_List"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TsetlinOutputCalculateResult", "[", "\[IndentingNewLine]", 
      RowBox[{"#", ",", "\[IndentingNewLine]", 
       RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm", "]"}], ",", 
       "\[IndentingNewLine]", "li"}], "]"}], "&"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TsetlinMachineGetOutputs", "[", "tm", "]"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.7717569355501537`*^9, 3.771756955485031*^9}, {
  3.771785377075938*^9, 3.7717853831401663`*^9}, {3.771833276144273*^9, 
  3.771833277201983*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"6efc10dd-4011-45d9-858c-f05017421fc1"],

Cell["\<\
Applying TsetlinMachineCalculateResult to the first output in the XOR \
TsetlinMachine above, with input {True, False} :\
\>", "CodeText",
 CellChangeTimes->{{3.7717569612102413`*^9, 
  3.771756977533861*^9}},ExpressionUUID->"7757885e-98a8-4c71-9c2b-\
ec5b557916b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinMachineCalculateResult", "[", "\[IndentingNewLine]", 
  RowBox[{"tm2", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771756984263546*^9, 3.771757016466015*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"249a0a4e-b4e9-4296-ac04-1925fc167429"],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.77175701714366*^9, 3.771785359388033*^9, 
  3.771785395019252*^9, 3.771785510470379*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"e4844770-b8a5-4d62-81d9-92c6df5b3a2e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Providing Feedback to a Tsetlin Machine", "Section",
 CellChangeTimes->{{3.7717570800192947`*^9, 3.7717570984700727`*^9}, {
  3.7717617355453777`*^9, 
  3.77176173579198*^9}},ExpressionUUID->"d51d02d7-2614-4ec8-a5b7-\
e433747f05a3"],

Cell["\<\
This is where things begin to get more difficult, and as of the writing of \
this, there is probably something wrong with my code in this section. So, how \
Tsetlin Machines train is via feedback (similar in idea but very different in \
implementation to backpropagation in Neural Nets). There are two types of \
feedback for Tsetlin Machines, called type 1 and type 2. The best way I can \
describe the difference between the difference between the two is as follows: \
Type 1 feedback does most of the work, and type 2 cleans up what type 1 could \
not. Very vague, I know. This learning algorithm was derived from \
propositional formulas, which can be found in the original Tsetlin Machine \
paper.\
\>", "Text",
 CellChangeTimes->{{3.7717574954282093`*^9, 3.7717575014405317`*^9}, {
  3.771757531909958*^9, 3.771757568168168*^9}, {3.771757812855927*^9, 
  3.7717579225852413`*^9}, {3.771758062599468*^9, 3.771758092646326*^9}, {
  3.771758134226214*^9, 3.7717582539122868`*^9}, {3.771758452818207*^9, 
  3.7717585344132557`*^9}, {3.771758590063533*^9, 
  3.771758684924918*^9}},ExpressionUUID->"d826bc54-04f7-441a-a5b7-\
8fef01f7c79a"],

Cell["\<\
I use 5 different feedback functions, again working from the bottom up. The \
first two apply type 1 or type 2 feedback to an individual Tsetlin Automaton. \
The first four inputs for each function is the same: an integer representing \
a Tsetlin Automaton, the state identifier, the input that corresponds to the \
automaton, and the output of the clause that the automaton is a member of. \
Type 1 feedback\[CloseCurlyQuote]s 5th argument is an s-value (in other \
words, the precision). Type 2 feedback\[CloseCurlyQuote]s 5th argument is a \
Boolean that is True if the automaton corresponds to an original input, or \
False for a negated one.\
\>", "Text",
 CellChangeTimes->{{3.7717585137033157`*^9, 3.771758514529814*^9}, {
  3.77175869492835*^9, 
  3.771758962693618*^9}},ExpressionUUID->"995bfbcd-56e7-4d50-9cf2-\
f34623c08bcf"],

Cell["The function definition for TsetlinAutomatonType1Feedback:", "CodeText",
 CellChangeTimes->{{3.77175896436071*^9, 
  3.7717589782895393`*^9}},ExpressionUUID->"177584c0-5928-498f-b6ec-\
b3a0e8978253"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonType1Feedback", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer", ",", 
    RowBox[{"i_", "?", "BooleanQ"}], ",", 
    RowBox[{"co_", "?", "BooleanQ"}], ",", 
    RowBox[{"s_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{"co", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"clause", " ", "output", " ", "is", " ", "1", " ", "or", " ", 
      RowBox[{"0", "?"}]}], " ", "*)"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{"i", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"input", " ", "is", " ", "1", " ", "or", " ", "0"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ta", ">", "si"}], ")"}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "input", " ", "is", " ", "included", " ", "or", " ", "excluded"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonWeightedReward", "[", 
         RowBox[{"ta", ",", "si", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"s", "-", "1"}], ")"}], "/", "s"}], ")"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonWeightedPunish", "[", 
         RowBox[{"ta", ",", "si", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"s", "-", "1"}], ")"}], "/", "s"}], ")"}]}], "]"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ta", ">", "si"}], ")"}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "innput", " ", "is", " ", "included", " ", "ot", " ", "excluded"}], 
         " ", "*)"}], "\[IndentingNewLine]", "ta", ",", "\[IndentingNewLine]", 
        RowBox[{"TsetlinAutomatonWeightedReward", "[", 
         RowBox[{"ta", ",", "si", ",", 
          RowBox[{"(", 
           RowBox[{"1", "/", "s"}], ")"}]}], "]"}]}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ta", ">", "si"}], ")"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "input", " ", "is", " ", "included", " ", "or", " ", "excluded"}], " ",
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"TsetlinAutomatonWeightedPunish", "[", 
       RowBox[{"ta", ",", "si", ",", 
        RowBox[{"(", 
         RowBox[{"1", "/", "s"}], ")"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"TsetlinAutomatonWeightedReward", "[", 
       RowBox[{"ta", ",", "si", ",", 
        RowBox[{"(", 
         RowBox[{"1", "/", "s"}], ")"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.771758998371974*^9, 3.771759012873104*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a716d2be-3fd7-443d-8ca8-f97ce8f571b0"],

Cell["The function definition for TsetlinAutomatonType2Feedback:", "CodeText",
 CellChangeTimes->{{3.77175896436071*^9, 3.7717589782895393`*^9}, {
  3.7717590222432823`*^9, 
  3.771759022302567*^9}},ExpressionUUID->"1e1834e1-9a6a-4e4f-a57b-\
9d5acf6520cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinAutomatonType2Feedback", "[", 
   RowBox[{"ta_Integer", ",", "si_Integer", ",", 
    RowBox[{"i_", "?", "BooleanQ"}], ",", 
    RowBox[{"co_", "?", "BooleanQ"}], ",", 
    RowBox[{"it_", "?", "BooleanQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"co", "\[Equal]", "True"}], ")"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Not", "[", "i", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"TsetlinAutomatonCalculateAction", "[", 
            RowBox[{"ta", ",", "si"}], "]"}], "\[Equal]", "2"}], ")"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{"it", ",", "\[IndentingNewLine]", 
          RowBox[{"TsetlinAutomatonPunish", "[", 
           RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", 
          "ta"}], "]"}], ",", "\[IndentingNewLine]", "ta"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"TsetlinAutomatonCalculateAction", "[", 
            RowBox[{"ta", ",", "si"}], "]"}], "\[Equal]", "2"}], ")"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Not", "[", "it", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TsetlinAutomatonPunish", "[", 
           RowBox[{"ta", ",", "si"}], "]"}], ",", "\[IndentingNewLine]", 
          "ta"}], "]"}], ",", "\[IndentingNewLine]", "ta"}], "]"}], ",", 
      "\[IndentingNewLine]", "ta"}], "]"}], ",", "\[IndentingNewLine]", 
    "ta"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717590363842373`*^9, 3.771759049853052*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3bc02c8b-3b11-4d7e-a1a0-9a670afb3896"],

Cell["\<\
Apply TsetlinAutomatonType1Feedback to an arbitrary automaton:\
\>", "CodeText",
 CellChangeTimes->{{3.771759081371976*^9, 
  3.7717590982797737`*^9}},ExpressionUUID->"a95c612c-0b8e-431e-9030-\
6701f1f1787f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonType1Feedback", "[", "\[IndentingNewLine]", 
  RowBox[{
  "3", ",", "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", "True", 
   ",", "\[IndentingNewLine]", "False", ",", "\[IndentingNewLine]", "3.6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771759113563905*^9, 3.77175914698746*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"d0b2d902-08cd-42d5-b80e-e82b1ecbae2f"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.77175914764428*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d8b4a289-fb43-4d65-80e6-e79709735384"]
}, Closed]],

Cell["\<\
Apply TsetlinAutomatonType2Feedback to an arbitrary automaton:\
\>", "CodeText",
 CellChangeTimes->{{3.771759081371976*^9, 3.7717590982797737`*^9}, {
  3.771759158158518*^9, 
  3.7717591582303333`*^9}},ExpressionUUID->"ec90c70e-3dff-44e6-a9ec-\
6e8309c4aed5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinAutomatonType2Feedback", "[", "\[IndentingNewLine]", 
  RowBox[{
  "5", ",", "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", "False", 
   ",", "\[IndentingNewLine]", "False", ",", "\[IndentingNewLine]", "False"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.771759163342651*^9, 3.771759173003599*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f8acd7c8-c051-490f-938e-c4a6a32e717d"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.7717591741218023`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"8c75b400-66d4-4824-ae77-f1707e9c1096"]
}, Closed]],

Cell[TextData[{
 "You can also apply Type 1 and Type 2 feedback to a clause at a time. The \
type 1 feedback function takes a ",
 StyleBox["TsetlinClause", "Code"],
 ", state identifier, input list, and s-value. The type 2 feedback function \
has all the same arguments except for the s-value."
}], "Text",
 CellChangeTimes->{{3.771759191949544*^9, 3.7717591939907627`*^9}, {
  3.7717592369069977`*^9, 
  3.771759336676157*^9}},ExpressionUUID->"c6d61a3d-c15b-4988-9b1e-\
a548a336faaa"],

Cell["The function definition for TsetlinClauseType1Feedback:", "CodeText",
 CellChangeTimes->{{3.77175896436071*^9, 3.7717589782895393`*^9}, {
  3.771759800411764*^9, 
  3.77175980146045*^9}},ExpressionUUID->"1900943e-c48c-40cd-8358-\
f2152a169c2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseType1Feedback", "[", 
   RowBox[{"tc_TsetlinClause", ",", "si_Integer", ",", "il_List", ",", 
    RowBox[{"s_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"TsetlinClause", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TsetlinAutomatonType1Feedback", "[", "\[IndentingNewLine]", 
        RowBox[{
        "#1", ",", "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", 
         "#2", ",", "\[IndentingNewLine]", 
         RowBox[{"TsetlinClauseCalculateResult", "[", 
          RowBox[{"tc", ",", "si", ",", "il"}], "]"}], ",", 
         "\[IndentingNewLine]", "s"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClauseGetPositive", "[", "tc", "]"}], ",", 
        "\[IndentingNewLine]", "il"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TsetlinAutomatonType1Feedback", "[", "\[IndentingNewLine]", 
        RowBox[{
        "#1", ",", "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", 
         "#2", ",", "\[IndentingNewLine]", 
         RowBox[{"TsetlinClauseCalculateResult", "[", 
          RowBox[{"tc", ",", "si", ",", "il"}], "]"}], ",", 
         "\[IndentingNewLine]", "s"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClauseGetNegative", "[", "tc", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Not", "/@", "il"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.77175936022468*^9, 3.7717593864411297`*^9}, {
  3.771759442112719*^9, 3.77175944877453*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5c435e46-fe97-448f-952b-cef20a8d101d"],

Cell["The function definition for TsetlinClauseType2Feedback:", "CodeText",
 CellChangeTimes->{{3.771759788656448*^9, 
  3.7717598088672743`*^9}},ExpressionUUID->"3423c5a0-a355-440b-a7a6-\
c06c58bada3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinClauseType2Feedback", "[", 
   RowBox[{"tc_TsetlinClause", ",", "si_Integer", ",", "il_List"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"TsetlinClause", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TsetlinAutomatonType2Feedback", "[", "\[IndentingNewLine]", 
        RowBox[{
        "#1", ",", "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", 
         "#2", ",", "\[IndentingNewLine]", 
         RowBox[{"TsetlinClauseCalculateResult", "[", 
          RowBox[{"tc", ",", "si", ",", "il"}], "]"}], ",", 
         "\[IndentingNewLine]", "True"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClauseGetPositive", "[", "tc", "]"}], ",", 
        "\[IndentingNewLine]", "il"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TsetlinAutomatonType2Feedback", "[", "\[IndentingNewLine]", 
        RowBox[{
        "#1", ",", "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", 
         "#2", ",", "\[IndentingNewLine]", 
         RowBox[{"TsetlinClauseCalculateResult", "[", 
          RowBox[{"tc", ",", "si", ",", "il"}], "]"}], ",", 
         "\[IndentingNewLine]", "False"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClauseGetNegative", "[", "tc", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Not", "/@", "il"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717598622771893`*^9, 3.771759888475671*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"0b4656f7-684c-41c8-bc6e-a24134fd9d3e"],

Cell[TextData[{
 StyleBox["TsetlinOutputFeedback", "Code"],
 " applies both kinds of feedback to the TsetlinClauses of a TsetlinOutput, \
according to some function (called a feedbackDecider). It takes 6 arguments: \
a TsetlinOutput,  a state identifier, the input list, the desired output of \
the TsetlinOutput, an s-value, and a feedbackDecider function. The \
feedbackDecider is written by the user and should accept 6 arguments: the \
TsetlinOutput currently being processed, the index of the clause being \
trained (in the list of TsetlinClauses in the output), the state identifier, \
the input list, the desired output, and the s-value. The feedbackDecider \
should return a value from 0 to 2, denoting the type of feedback the clause \
at the given index in the TsetlinOutput should receive (0 means no \
feedback)."
}], "Text",
 CellChangeTimes->{{3.771760613643915*^9, 3.7717606473048563`*^9}, {
  3.771760711255857*^9, 3.771760743893168*^9}, {3.771760774132338*^9, 
  3.7717609219109793`*^9}, {3.771760998673601*^9, 3.7717610218981133`*^9}, {
  3.771761225030553*^9, 
  3.771761309518118*^9}},ExpressionUUID->"f031f0c3-06d6-4234-aa32-\
ae199b2f60f3"],

Cell["The function definition for TsetlinOutputFeedback:", "CodeText",
 CellChangeTimes->{{3.771759788656448*^9, 3.7717598088672743`*^9}, {
  3.771761451972518*^9, 
  3.7717614526187077`*^9}},ExpressionUUID->"3d68d74a-0655-472e-8039-\
96ead568d308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinOutputFeedback", "[", 
   RowBox[{"to_TsetlinOutput", ",", "si_Integer", ",", "il_List", ",", 
    RowBox[{"do_", "?", "BooleanQ"}], ",", 
    RowBox[{"s_", "?", "NumericQ"}], ",", "fd_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"TsetlinOutput", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}], "[", 
            RowBox[{"[", "#", "]"}], "]"}], ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TsetlinClauseType1Feedback", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}], "[", 
              RowBox[{"[", "#", "]"}], "]"}], ")"}], ",", 
            "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", "il", 
            ",", "\[IndentingNewLine]", "s"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TsetlinClauseType2Feedback", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}], "[", 
              RowBox[{"[", "#", "]"}], "]"}], ")"}], ",", 
            "\[IndentingNewLine]", "si", ",", "\[IndentingNewLine]", "il"}], 
           "]"}]}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"fd", "[", 
            RowBox[{
            "to", ",", "#", ",", "si", ",", "il", ",", "do", ",", "s"}], 
            "]"}], "+", "1"}], ")"}], "]"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", 
        RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TsetlinOutputGetFunction", "[", "to", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfXsLc7iA1BvHY4pKYPrVWaUYEG2TGhkLopd8sPgv
DKTXZrmBabG/9uwiQLrDMwRMG3ie5JIC0kytttwgOubKC34QvSzpA5j+sLTG
HkQXcM4B00yRGwJANMsCkQgQPev72jQQHbH3JJg24X9YDaJ1mIxrQPS6veeX
gejdBayrQLTBqaaTIFrBPe4MiDaqZ+WVBdL+QlVg+tkSRm0QbbNQAUwLzEhO
AtEJ/JLJILqnnqMTRPt0Xu8C0Z/MRbLkQO6cbQWm1+yxmgai8474gekzb4Ir
jYG03s5mMA0ANZd4Sg==
  "],
 CellLabel->"In[26]:=",ExpressionUUID->"cafa3cb4-df68-4a9c-a7b7-67335ee7bcca"],

Cell[TextData[{
 StyleBox["TsetlinMachineFeedback", "Code"],
 " takes 5 arguments : a ",
 StyleBox["TsetlinMachine", "Code"],
 ", a list of inputs, the corresponding list of outputs, an s - value, and a \
feedbackDecider. Output is a ",
 StyleBox["TsetlinMachine", "Code"],
 " that has been trained on the given input list and output list."
}], "Text",
 CellChangeTimes->{{3.771761429671941*^9, 3.771761438578589*^9}, {
  3.771761491841339*^9, 
  3.77176150995688*^9}},ExpressionUUID->"e21009be-76b2-40f7-b558-\
d2a1fa9609fa"],

Cell["The function definition for TsetlinMachineFeedback:", "CodeText",
 CellChangeTimes->{{3.771759788656448*^9, 3.7717598088672743`*^9}, {
  3.771761451972518*^9, 3.7717614526187077`*^9}, {3.7717615795559483`*^9, 
  3.771761581416108*^9}},ExpressionUUID->"875fe7a5-eaf7-4724-95f9-\
98ec30bff528"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TsetlinMachineFeedback", "[", 
    RowBox[{"tm_TsetlinMachine", ",", "il_List", ",", "ol_List", ",", 
     RowBox[{"s_", "?", "NumericQ"}], ",", "fd_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"TsetlinMachine", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TsetlinOutputFeedback", "[", "\[IndentingNewLine]", 
         RowBox[{"#1", ",", "\[IndentingNewLine]", 
          RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm", "]"}], ",", 
          "\[IndentingNewLine]", "il", ",", "\[IndentingNewLine]", "#2", ",", 
          "\[IndentingNewLine]", "s", ",", "\[IndentingNewLine]", "fd"}], 
         "]"}], "&"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TsetlinMachineGetOutputs", "[", "tm", "]"}], ",", 
         "\[IndentingNewLine]", "ol"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TsetlinMachineGetStateIdentifier", "[", "tm", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717615218797894`*^9, 3.771761534998147*^9}, {
  3.771781254768051*^9, 3.771781308133917*^9}, {3.7717813419270277`*^9, 
  3.771781376719553*^9}, {3.771781470802161*^9, 3.771781498175343*^9}, {
  3.771781674782856*^9, 3.771781685641992*^9}, {3.771781751099554*^9, 
  3.771781752994546*^9}, {3.771795457400272*^9, 3.771795475908942*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a564aa72-382d-465f-9ad1-6fe072556030"],

Cell["\<\
Applying TsetlinMachineFeedback to try to train a TsetlinMachine to learn XOR:\
\>", "CodeText",
 CellChangeTimes->{{3.771759788656448*^9, 3.7717598088672743`*^9}, {
  3.771761451972518*^9, 3.7717614526187077`*^9}, {3.771761587904735*^9, 
  3.771761610136738*^9}},ExpressionUUID->"6d618ccf-e8f9-4f9f-a90e-\
1d52f101e544"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinMachineFeedback", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TsetlinMachineInitialize", "[", "\[IndentingNewLine]", 
    RowBox[{
    "3", ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", "2", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Or", "@@", "#"}], "&"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "True", "}"}], ",", "\[IndentingNewLine]", "3.5", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", "]"}], "+", "1"}], "&"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.771761623179935*^9, 3.771761627691924*^9}, {
  3.7717616697433453`*^9, 3.771761702379157*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"00f086ba-6624-43bd-bb42-ed7ddf56ea3c"],

Cell[BoxData[
 RowBox[{"TsetlinMachine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TsetlinOutput", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Or", "@@", "#1"}], "&"}]}], "]"}], "}"}], ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7717617046276197`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"10197f72-9e0f-43d3-89cd-058567c8bd89"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tsetlin Machine Utility Functions", "Section",
 CellChangeTimes->{{3.771761748343359*^9, 
  3.771761758173071*^9}},ExpressionUUID->"5e7ec47b-a1a9-444b-abae-\
62ead37b240b"],

Cell["\<\
These functions, while not strictly necessary for a functional Tsetlin \
Machine, are convenient to use when actually training a machine. They are \
used later, but will be defined and explained here.\
\>", "Text",
 CellChangeTimes->{{3.771762086089882*^9, 
  3.77176215678409*^9}},ExpressionUUID->"aa1ca314-220d-4e1e-b5f3-\
7a2c400826f0"],

Cell[TextData[{
 StyleBox["TsetlinUtilityAlternatingSum", "Code"],
 " takes a single list of numbers as its argument. Say the list is {1, 2, 3, \
4, 5}. ",
 StyleBox["TsetlinUtilityAlternatingSum", "Code"],
 " would turn the list into the following series: 1 - 2 + 3 - 4 + 5. It would \
then evaluate that series for a result of 3."
}], "Text",
 CellChangeTimes->{{3.7717621638960867`*^9, 
  3.771762295649581*^9}},ExpressionUUID->"0f4e3c1b-508e-42c2-a86d-\
afe5142d4646"],

Cell["The function definition for TsetlinUtilityAlternatingSum:", "CodeText",
 CellChangeTimes->{{3.771762390456575*^9, 
  3.771762411038433*^9}},ExpressionUUID->"cff31325-0f19-4251-af3a-\
8dbf11caae1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinUtilityAlternatingSum", "[", "lc_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"lc", "[", 
     RowBox[{"[", 
      RowBox[{";;", ";;", "2"}], "]"}], "]"}], "]"}], "-", 
   RowBox[{"Total", "[", 
    RowBox[{"lc", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", ";;", "2"}], "]"}], "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771762308576559*^9, 3.7717623116609497`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"76a1abcb-ee9f-4caf-89d2-e09fead44630"],

Cell["\<\
Apply TsetlunUtilityAlternatingSum to the list {1, 2, 3, 4, 5}:\
\>", "CodeText",
 CellChangeTimes->{{3.771762390456575*^9, 3.771762411038433*^9}, {
  3.77176244302873*^9, 
  3.771762460563652*^9}},ExpressionUUID->"898ff0d9-2603-45f2-b151-\
85b68fc14719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinUtilityAlternatingSum", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771762331670236*^9, 3.771762339640009*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"ff392c5c-0d73-4019-98ec-8fdc2baae23c"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7717623400711193`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"7ff60bf8-70e3-4dc5-9aa8-b4a14f034f9f"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinUtilityOutputFunction", "Code"],
 " can be used as an output function for ",
 StyleBox["TsetlinOutput", "Code"],
 "s. It replaces True and False with 1s and 0s, then finds the alternating \
sum. It then returns True if this value is greater than or equal to 0, and \
False otherwise."
}], "Text",
 CellChangeTimes->{{3.771762482668439*^9, 
  3.7717625644509573`*^9}},ExpressionUUID->"d0842548-0d89-48a6-a3ff-\
61c31cdc4b1c"],

Cell["The function definition for TsetlinUtilityOutputFunction:", "CodeText",
 CellChangeTimes->{{3.771762390456575*^9, 3.771762411038433*^9}, {
  3.771762577052511*^9, 
  3.771762582066259*^9}},ExpressionUUID->"ac47e342-0ea2-483d-9643-\
d0ccc8557776"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinUtilityOutputFunction", "[", "lc_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TsetlinUtilityAlternatingSum", "[", 
     RowBox[{"lc", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"True", "\[Rule]", "1"}], ",", 
        RowBox[{"False", "\[Rule]", "0"}]}], "}"}]}], "]"}], 
    "\[GreaterEqual]", "0"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771762593973916*^9, 3.771762601198937*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0efe3301-60a1-42bb-b44f-6b6768c2cac2"],

Cell["\<\
Apply TsetlunUtilityOutputFunction to the list {True, True, False, True}, \
which should output False:\
\>", "CodeText",
 CellChangeTimes->{{3.771762390456575*^9, 3.771762411038433*^9}, {
  3.77176244302873*^9, 3.771762460563652*^9}, {3.771762650658049*^9, 
  3.7717626850275784`*^9}},ExpressionUUID->"395f9677-832b-4bf3-8172-\
abbf49608365"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinUtilityOutputFunction", "[", 
  RowBox[{"{", 
   RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7717626727130823`*^9, 3.7717626816518393`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"d745f141-eabe-4318-88d5-a2a7d690fcc7"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7717626819822807`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"7c09637c-194b-4814-8d74-edb38315dc7f"]
}, Closed]],

Cell[TextData[{
 "TsetlinUtilityFeedbackDecider is the base for a feedbackDecider. It takes 7 \
inputs: the ",
 StyleBox["TsetlinOutput", "Code"],
 " currently being trained, the index of the clause being currently \
processed, the state identifier, the list of inputs currently being trained \
on, the desired output, the s-value (precision), and a T-value (threshold). \
In practical use, it\[CloseCurlyQuote]s first 6 arguments are filled with \
slots 1 through 6 (",
 StyleBox["#1", "Code"],
 ",",
 StyleBox["#2", "Code"],
 ",...) and it\[CloseCurlyQuote]s 7th argument is the T-value (and it is \
followed by a ",
 StyleBox["&", "Code"],
 ")."
}], "Text",
 CellChangeTimes->{{3.771762691567894*^9, 3.771762729151175*^9}, {
  3.771762849478911*^9, 
  3.771762949208325*^9}},ExpressionUUID->"7d12d62e-d5bf-4ea7-9ab9-\
878ccdd30214"],

Cell["The function definition for TsetlinUtilityFeedbackDecider:", "CodeText",
 CellChangeTimes->{{3.771762390456575*^9, 3.771762411038433*^9}, {
  3.771762577052511*^9, 3.771762582066259*^9}, {3.7717629701741743`*^9, 
  3.771762973262813*^9}},ExpressionUUID->"06c6b802-bbe1-4e2c-9e00-\
dd0c3b04bfb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinUtilityFeedbackDecider", "[", 
   RowBox[{
   "to_TsetlinOutput", ",", "ci_Integer", ",", "si_Integer", ",", "il_List", 
    ",", 
    RowBox[{"do_", "?", "BooleanQ"}], ",", 
    RowBox[{"s_", "?", "NumericQ"}], ",", "t_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"do", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"Max", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"-", "t"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Min", "[", "\[IndentingNewLine]", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                "TsetlinUtilityAlternatingSum", "[", "\[IndentingNewLine]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "TsetlinClauseCalculateResult", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "#", ",", "\[IndentingNewLine]", "si", ",", 
                    "\[IndentingNewLine]", "il"}], "\[IndentingNewLine]", 
                    "]"}], "&"}], "/@", "\[IndentingNewLine]", 
                    RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}]}], 
                    ")"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"True", "\[Rule]", "1"}], ",", 
                    RowBox[{"False", "\[Rule]", "0"}]}], "}"}]}], ")"}], 
                 "]"}]}], "]"}]}], "]"}]}], ")"}], "/", "\[IndentingNewLine]",
           "2"}], "t"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"2", "-", 
       RowBox[{"Mod", "[", 
        RowBox[{"ci", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", "0"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"Max", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"-", "t"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Min", "[", "\[IndentingNewLine]", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                "TsetlinUtilityAlternatingSum", "[", "\[IndentingNewLine]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "TsetlinClauseCalculateResult", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "#", ",", "\[IndentingNewLine]", "si", ",", 
                    "\[IndentingNewLine]", "il"}], "\[IndentingNewLine]", 
                    "]"}], "&"}], "/@", "\[IndentingNewLine]", 
                    RowBox[{"TsetlinOutputGetClauses", "[", "to", "]"}]}], 
                    ")"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"True", "\[Rule]", "1"}], ",", 
                    RowBox[{"False", "\[Rule]", "0"}]}], "}"}]}], ")"}], 
                 "]"}]}], "]"}]}], "]"}]}], ")"}], "/", "\[IndentingNewLine]",
           "2"}], "t"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"2", "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"ci", "+", "1"}], ",", "2"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "0"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771762996776987*^9, 3.771763074249111*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"a6f0ca29-e4b1-4e60-acae-50cadea3dcee"],

Cell[TextData[{
 StyleBox["TsetlinUtilityOr", "Code"],
 " applies the Or function to a list (normally it can only be applied to a \
sequence)."
}], "Text",
 CellChangeTimes->{{3.771791234558597*^9, 
  3.771791281348287*^9}},ExpressionUUID->"b609909f-b6a2-461f-a84e-\
5e1ca97adc9a"],

Cell[TextData[StyleBox["The function definition for TsetlinUtilityOr:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.7717912837432203`*^9, 
  3.771791291735746*^9}},ExpressionUUID->"569e3527-fbb4-45e9-b6e3-\
2baa9c47762f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinUtilityOr", "[", "l_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Or", "@@", "l"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771791303086375*^9, 3.7717913205227833`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"2c0ed26b-1b40-4acb-b8c8-115d267fce5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]Tset\[CloseCurlyDoubleQuote]ing and Training a \
Tsetlin Machine", "Section",
 CellChangeTimes->{{3.771763168736566*^9, 3.7717631846840343`*^9}, 
   3.7717644869264*^9, {3.7717912652214117`*^9, 3.7717912656108093`*^9}, {
   3.771838829968144*^9, 
   3.771838830216175*^9}},ExpressionUUID->"eacbe695-ec98-4f10-8904-\
c05373e61eaa"],

Cell["\<\
\[OpenCurlyDoubleQuote]Tset\[CloseCurlyDoubleQuote] is the beginning of \
\[OpenCurlyDoubleQuote]Tsetlin\[CloseCurlyDoubleQuote] and is just \
\[OpenCurlyDoubleQuote]test\[CloseCurlyDoubleQuote] with the middle two \
letters swapped, get it?
Sorry.\
\>", "Text",
 CellChangeTimes->{{3.7717632018706903`*^9, 3.771763244146654*^9}, {
  3.7717633226425457`*^9, 
  3.771763361072*^9}},ExpressionUUID->"f084930e-5480-4fd7-8b59-e2e827b9668c"],

Cell[TextData[{
 "Being able to test a Tsetlin Machine is important when training, to make \
sure that the Tsetlin Machine is actually learning. ",
 StyleBox["TsetlinMachineTest", "Code"],
 " takes a ",
 StyleBox["TsetlinMachine", "Code"],
 ", list of input lists, and list of output lists as its arguments. It \
returns the percentage of input-output pairs that the ",
 StyleBox["TsetlinMachine", "Code"],
 " correctly predicted. It has three options: ",
 StyleBox["EchoTestResults", "Code"],
 " (False by default, but will echo the test results if made true), ",
 StyleBox["ReturnTestResults", "Code"],
 " (True by default, but if false will return the ",
 StyleBox["TsetlinMachine", "Code"],
 " it was given as an argument instead), and ",
 StyleBox["SowTestResults", "Code"],
 " (False by default, bu if true it will ",
 StyleBox["Sow", "Code"],
 " the test results)."
}], "Text",
 CellChangeTimes->{{3.771763423956224*^9, 3.771763685814063*^9}, {
  3.7717637335483913`*^9, 3.771763756835689*^9}, {3.771840287532628*^9, 
  3.7718402920744953`*^9}},ExpressionUUID->"f8b6bc77-1e5a-4ffa-90d9-\
edf26c59889c"],

Cell[TextData[StyleBox["The function definition for TsetlinMachineTest:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771763771444745*^9, 
  3.771763785052719*^9}},ExpressionUUID->"97bcd7c3-fba4-42ae-bcc3-\
d4093426927d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineTest", "[", 
   RowBox[{"tm_TsetlinMachine", ",", "ill_List", ",", "oll_List", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EchoTestResults", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"ReturnTestResults", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"SowTestResults", "\[Rule]", " ", "False"}]}], "}"}], "]"}]}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N", "[", 
         RowBox[{"Total", "@", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "TsetlinMachineCalculateResult", "[", "\[IndentingNewLine]", 
                  
                  RowBox[{"tm", ",", "\[IndentingNewLine]", "#1"}], "]"}], 
                 "\[Equal]", "#2"}], ")"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"ill", ",", "oll"}], "}"}]}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"False", "\[Rule]", "0"}], ",", 
              RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], ")"}]}], "]"}], 
        ")"}], "/", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"Length", "@", "ill"}], ")"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "EchoTestResults", "]"}], "\[Equal]", 
         "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"f", ",", "\"\<Percent correct:\>\""}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "SowTestResults", "]"}], " ", "\[Equal]",
          " ", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "f", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "ReturnTestResults", "]"}], " ", 
         "\[Equal]", " ", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "f", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "tm", "]"}]}], "]"}]}], ")"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7717638197111473`*^9, 3.7717638215279703`*^9}, {
   3.771768659817625*^9, 3.771768663890441*^9}, {3.771769015752117*^9, 
   3.771769018373296*^9}, 3.771780846799754*^9, 3.771780907805266*^9, {
   3.771785850405356*^9, 3.771785851333949*^9}, {3.771786576558968*^9, 
   3.771786578143426*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1377c33c-8887-4a72-b404-7024e8579fde"],

Cell[TextData[StyleBox["Testing a newly-initialized Tsetlin Machine on XOR:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771763771444745*^9, 3.771763785052719*^9}, {
  3.77176383986268*^9, 
  3.771763874027062*^9}},ExpressionUUID->"bd49fcda-7503-43f7-9ff6-\
b45b7d0f795c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TsetlinMachineTest", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TsetlinMachineInitialize", "[", "\[IndentingNewLine]", 
    RowBox[{
    "3", ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", "2", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Or", "@@", "#"}], "&"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "False", "}"}], ",", 
     RowBox[{"{", "True", "}"}]}], "}"}], ",", 
   RowBox[{"EchoTestResults", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717809420307198`*^9, 3.771780985581956*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"438e8e2e-1006-4233-a9ee-3acf19f1c509"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "1.`"}]], "Echo",
 CellChangeTimes->{
  3.771786596310261*^9},ExpressionUUID->"5cc601a2-ab6f-4177-bde6-\
2bb4d25fe14b"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.771763882695972*^9, {3.7717808620823193`*^9, 3.771780866712637*^9}, {
   3.771780910523666*^9, 3.771780985902687*^9}, 3.7717865963324003`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"049caa04-8b31-4f33-9df6-8446f695633f"]
}, Closed]],

Cell[TextData[{
 StyleBox["TsetlinMachineTrain", "Code"],
 " takes 8 inputs: a ",
 StyleBox["TsetlinMachine", "Code"],
 ", a list of training input lists, a list of training output lists, a list \
of testing input lists, a list of testing output lists, an s-value, a \
feedbackDecider, and a stop criteria. Output is a trained TsetlinMachine. A \
stop criteria  can be one of the following: a real number less than or equal \
to 1 (representing goal accuracy), an integer 1 or greater (representing \
number of times to train), a real number 1 or greater (representing seconds \
to train). It has the same options as TsetlinMachineTest."
}], "Text",
 CellChangeTimes->{{3.771603967423667*^9, 3.771604314510343*^9}, {
   3.7716055284486628`*^9, 3.771605546868547*^9}, {3.7716058163087606`*^9, 
   3.771605846135181*^9}, 3.771764233791367*^9, {3.771764268158772*^9, 
   3.771764299868841*^9}},ExpressionUUID->"b4ae8b4e-77fd-4a7e-9c4d-\
24ea114ca28f"],

Cell[TextData[StyleBox["The function definition for TsetlinMachineTrain:", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.771763771444745*^9, 3.771763785052719*^9}, {
  3.77176383986268*^9, 3.771763874027062*^9}, {3.7717644574129677`*^9, 
  3.771764478282134*^9}},ExpressionUUID->"b543c5c9-7b0f-4875-b6bb-\
01a3f3f101b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TsetlinMachineTrain", "[", 
   RowBox[{
   "tm_TsetlinMachine", ",", "ill_List", ",", "oll_List", ",", "till_List", 
    ",", "toll_List", ",", 
    RowBox[{"s_", "?", "NumericQ"}], ",", "fd_", ",", 
    RowBox[{"sc_", "?", "NumericQ"}], ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EchoTestResults", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"ReturnTestResults", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"SowTestResults", "\[Rule]", " ", "False"}]}], "}"}], "]"}]}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"looper", "=", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "sc", "]"}], ",", "0", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sc", ">", "1"}], ",", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"trainInput", ",", "trainOutput"}], "}"}], "=", 
          RowBox[{"RandomChoice", "@", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"ill", ",", "oll"}], "}"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"TsetlinMachineFeedback", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TsetlinMachineTest", "[", 
            RowBox[{"#1", ",", "till", ",", "toll", ",", 
             RowBox[{"ReturnTestResults", "\[Rule]", "False"}], ",", 
             RowBox[{"EchoTestResults", "\[Rule]", 
              RowBox[{"OptionValue", "[", "EchoTestResults", "]"}]}], ",", 
             RowBox[{"SowTestResults", "\[Rule]", 
              RowBox[{"OptionValue", "[", "SowTestResults", "]"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", "trainInput", ",", 
           "\[IndentingNewLine]", "trainOutput", ",", "\[IndentingNewLine]", 
           "s", ",", "\[IndentingNewLine]", "fd"}], "]"}]}], ")"}], "&"}], 
      ",", "\[IndentingNewLine]", "tm", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "sc", "]"}], ",", 
         RowBox[{
          RowBox[{"looper", "++"}], "<", "sc"}], ",", "\[IndentingNewLine]", 
         RowBox[{"sc", ">", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"AbsoluteTime", "[", "]"}], "-", "looper"}], "<", "sc"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"sc", "\[LessEqual]", "1"}], ",", 
         RowBox[{
          RowBox[{"TsetlinMachineTest", "[", 
           RowBox[{"#", ",", "till", ",", "toll"}], "]"}], "<", "sc"}]}], 
        "]"}], "&"}]}], "]"}]}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.771604317850209*^9, 3.771604345663355*^9}, {
   3.771604380383958*^9, 3.77160450958309*^9}, 3.771604751559757*^9, {
   3.771604849960231*^9, 3.771604897265098*^9}, {3.771604927630739*^9, 
   3.7716050815937853`*^9}, {3.771605112688603*^9, 3.7716051206493692`*^9}, 
   3.771605186743938*^9, {3.771605229063554*^9, 3.771605263586849*^9}, {
   3.77160533343417*^9, 3.771605518495182*^9}, {3.7716055566286182`*^9, 
   3.771605695601098*^9}, {3.771605771981337*^9, 3.771605803423757*^9}, {
   3.771605850010323*^9, 3.7716058753930273`*^9}, {3.771606062816777*^9, 
   3.771606062904674*^9}, {3.771606181404222*^9, 3.77160637978647*^9}, {
   3.7716065602864513`*^9, 3.771606561307988*^9}, {3.771606599861363*^9, 
   3.7716066362294083`*^9}, {3.771606684491403*^9, 3.77160668539161*^9}, {
   3.771606746946521*^9, 3.771606753514368*^9}, {3.771606936409072*^9, 
   3.771606937083035*^9}, {3.771607009248671*^9, 3.771607013349587*^9}, {
   3.7716070464046793`*^9, 3.771607085862397*^9}, {3.771778436574833*^9, 
   3.771778445212631*^9}, {3.771778495465269*^9, 3.771778504130547*^9}, {
   3.771778566771905*^9, 3.771778569539116*^9}, {3.771778637403863*^9, 
   3.771778777609077*^9}, {3.771778814727591*^9, 3.771778832942876*^9}, {
   3.771778907108436*^9, 3.7717789666123333`*^9}, {3.771779055677984*^9, 
   3.771779067565568*^9}, {3.771779104466433*^9, 3.7717791973814707`*^9}, {
   3.771779463751018*^9, 3.771779465471088*^9}, {3.771779634851561*^9, 
   3.771779635040629*^9}, {3.771780004139699*^9, 3.771780004272416*^9}, {
   3.771780063937969*^9, 3.771780091259585*^9}, {3.771780155427836*^9, 
   3.7717802010885973`*^9}, 3.771780494654212*^9, {3.771780579967106*^9, 
   3.77178063003437*^9}, {3.7717806760404778`*^9, 3.771780676876171*^9}, {
   3.7717807436391783`*^9, 3.7717807483424063`*^9}, 3.771780784904807*^9, {
   3.771780821148937*^9, 3.771780821991885*^9}, {3.7717810087338533`*^9, 
   3.7717810307811317`*^9}, {3.7717810755509872`*^9, 3.77178108426731*^9}, {
   3.771781139691216*^9, 3.771781166787631*^9}, {3.771786044682272*^9, 
   3.771786047743617*^9}, {3.771786557466782*^9, 3.771786558083107*^9}, {
   3.771787112372024*^9, 3.7717871179585953`*^9}, {3.771788465061365*^9, 
   3.771788468096074*^9}, {3.771788592628887*^9, 3.771788593225092*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"28cf4741-a7ce-4572-a7ec-62e471b398d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Actually Training a Tsetlin Machine", "Section",
 CellChangeTimes->{{3.7717645042379208`*^9, 
  3.771764512401257*^9}},ExpressionUUID->"a8b20280-d626-4010-96f6-\
13b355ef997c"],

Cell[TextData[{
 "The first demonstration of the use of a ",
 StyleBox["TsetlinMachine", "Code"],
 " will be on the simple 2-input XOR function."
}], "Text",
 CellChangeTimes->{{3.7717917483242292`*^9, 3.7717917919500437`*^9}, {
  3.771791840296957*^9, 
  3.771791841453326*^9}},ExpressionUUID->"35002a42-bff1-4d2f-9986-\
bba917a62205"],

Cell[TextData[StyleBox["Train a TsetlinMachine on XOR:", "CodeText"]], "Text",
 CellChangeTimes->{{3.7717757793744593`*^9, 
  3.7717757958503017`*^9}},ExpressionUUID->"28383f09-5f02-4b47-9be8-\
ded1200dbef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmXor", "=", 
  RowBox[{"TsetlinMachineTrain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TsetlinMachineInitialize", "[", "\[IndentingNewLine]", 
     RowBox[{
     "3", ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", "4", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", "TsetlinUtilityOutputFunction", "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "False", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "False", "}"}]}], "}"}], ",", "\[IndentingNewLine]", "9", 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TsetlinUtilityFeedbackDecider", "[", 
      RowBox[{
      "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "2"}],
       "]"}], "&"}], ",", "\[IndentingNewLine]", "1.00", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"EchoTestResults", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7717827950785313`*^9, 3.771782804449602*^9}, {
   3.771782850452669*^9, 3.771782864036707*^9}, {3.771785321464493*^9, 
   3.771785336627534*^9}, 3.7717855344666348`*^9, {3.7717855725325413`*^9, 
   3.7717855776060963`*^9}, {3.771785876445043*^9, 3.77178588985954*^9}, {
   3.771786112797616*^9, 3.771786140176342*^9}, {3.771786331061002*^9, 
   3.771786345164383*^9}, {3.77178660819039*^9, 3.771786732447201*^9}, {
   3.771786774906741*^9, 3.771786820389759*^9}, {3.771788254517399*^9, 
   3.771788255590695*^9}, {3.771788546065597*^9, 3.771788546702778*^9}, {
   3.771788643465386*^9, 3.771788658985816*^9}, {3.771788869982139*^9, 
   3.771788870049505*^9}, {3.771788913681975*^9, 3.771788936463025*^9}, {
   3.771788993981069*^9, 3.771788995508346*^9}, {3.771790359974729*^9, 
   3.7717903866183643`*^9}, {3.7717913371584473`*^9, 3.771791381734928*^9}, {
   3.771791423913015*^9, 3.771791428304675*^9}, {3.771832748584519*^9, 
   3.771832750113904*^9}, {3.771833426238181*^9, 3.771833427711438*^9}, {
   3.771839127422782*^9, 3.771839148035459*^9}, {3.771839204000736*^9, 
   3.771839205214567*^9}, {3.7718403178565283`*^9, 3.771840325792389*^9}, {
   3.771841484342401*^9, 3.771841484444366*^9}, {3.771841614080978*^9, 
   3.7718416224710484`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"46f57f5b-04f6-4df8-ae59-3a9295b8e077"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,73,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.7718416235863657`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"c235c29b-020a-479d-beb6-4f399e909138"],

Cell[BoxData[
 TemplateBox[{
  "ParallelTable","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,74,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.771841623597286*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"e76a3227-4916-46dc-9c47-edce859b9b27"],

Cell[BoxData[
 TemplateBox[{
  "ParallelTable","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,75,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.77184162365422*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"35ed19b8-8a52-4b2c-b70d-08cc21e1b6b3"],

Cell[BoxData[
 TemplateBox[{
  "ParallelTable","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,76,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.771841623703219*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"0c90823c-3771-40e3-b945-88bb879b4434"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ParallelTable\\\", \
\\\"::\\\", \\\"nopar\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,48,77,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.771841623760098*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"4d1b1006-9f6b-493d-8222-7f32921107ed"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,78,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.771841623812771*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"6b1c0a9a-401d-4fc7-91b0-30e3be741f82"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,48,79,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.771841623865149*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"2ceb52ef-8259-4f3a-8936-3790d3640958"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ParallelCombine\\\", \\\
\"::\\\", \\\"nopar\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,48,80,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.77183338484837*^9, 3.7718334280569363`*^9}, {
   3.7718335414343367`*^9, 3.7718335531531477`*^9}, 3.771833774307379*^9, 
   3.7718391538700743`*^9, 3.77183920774043*^9, 3.771840196287573*^9, 
   3.77184081912385*^9, 3.771840909132147*^9, 3.771841156156728*^9, 
   3.77184144443673*^9, 3.7718414850648193`*^9, 3.7718416239165497`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"0d68b75b-e5dd-46a1-a731-16d306ff725b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.5`"}]], "Echo",
 CellChangeTimes->{
  3.771841623975794*^9},ExpressionUUID->"85268ffc-9807-4778-9b44-\
1a0d2495bbc4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.5`"}]], "Echo",
 CellChangeTimes->{
  3.7718416240135803`*^9},ExpressionUUID->"443f2ee1-6df4-4f55-abbb-\
5c2003b966ec"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.5`"}]], "Echo",
 CellChangeTimes->{
  3.771841624056057*^9},ExpressionUUID->"274300b7-947a-481e-a1c4-\
0862b9caec4f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.75`"}]], "Echo",
 CellChangeTimes->{
  3.771841624097645*^9},ExpressionUUID->"1d26fcdb-4705-4924-a5cc-\
5f8f03174b63"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.75`"}]], "Echo",
 CellChangeTimes->{
  3.771841624143015*^9},ExpressionUUID->"5c263112-2753-4116-8bda-\
b9a088497c17"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Percent correct:\"\>",
   "EchoLabel"], " ", "0.75`"}]], "Echo",
 CellChangeTimes->{
  3.771841624189258*^9},ExpressionUUID->"4dabd161-a5f0-487a-a987-\
a26099f185f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"TsetlinMachine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TsetlinOutput", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"TsetlinClause", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "6"}], "}"}]}], "]"}]}], "}"}], ",", 
      "TsetlinUtilityOutputFunction"}], "]"}], "}"}], ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7717867578355417`*^9, {3.7717867955743847`*^9, 3.77178682163372*^9}, {
   3.771787005393022*^9, 3.771787018559845*^9}, {3.7717870765125504`*^9, 
   3.771787088915031*^9}, {3.7717871217211847`*^9, 3.771787140786628*^9}, 
   3.771787191196815*^9, 3.7717873296459103`*^9, 3.7717873836235113`*^9, 
   3.771787487894787*^9, 3.771787669703622*^9, 3.771788096871526*^9, 
   3.771788261847642*^9, 3.771788318000649*^9, 3.771788385172673*^9, 
   3.771788426056202*^9, {3.771788647665434*^9, 3.771788679530054*^9}, {
   3.771788736300537*^9, 3.771788738863056*^9}, {3.771788810712269*^9, 
   3.771788823119075*^9}, {3.771788877433511*^9, 3.771789027955346*^9}, 
   3.771790175105405*^9, {3.771790363149611*^9, 3.771790382915193*^9}, 
   3.771790421422523*^9, {3.771790605773781*^9, 3.7717906104997463`*^9}, 
   3.771791182342173*^9, {3.771791400901167*^9, 3.771791440661139*^9}, 
   3.771795493907857*^9, {3.771795563134673*^9, 3.771795588168168*^9}, 
   3.771832704455536*^9, {3.771832736001639*^9, 3.771832755869615*^9}, {
   3.771833391026325*^9, 3.7718334291032047`*^9}, {3.771833551890848*^9, 
   3.771833553730184*^9}, 3.77183377511769*^9, 3.7718391954384937`*^9, 
   3.77183925287296*^9, 3.771840203435326*^9, 3.771840819536007*^9, 
   3.7718410225647783`*^9, 3.771841180326694*^9, {3.771841475805018*^9, 
   3.771841493389402*^9}, 3.771841624224481*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"89485e89-6c8c-4a3e-b1b3-13354a2bc11a"]
}, Open  ]],

Cell[TextData[StyleBox["View the output of the TsetlinAutomaton for each of \
the four possible inputs:", "CodeText"]], "Text",
 CellChangeTimes->{{3.771791628333741*^9, 3.7717916603447866`*^9}, {
  3.7717917159887533`*^9, 
  3.77179172887288*^9}},ExpressionUUID->"8989e3fa-0649-4844-b7ef-\
215cf9a9a915"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TsetlinMachineCalculateResult", "[", 
    RowBox[{"tmXor", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77178683083008*^9, 3.771786858827221*^9}, {
  3.771788390099702*^9, 3.771788420162387*^9}, {3.771791467097144*^9, 
  3.771791494116878*^9}, {3.771791597183852*^9, 3.771791618091329*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b2c943d5-8f58-4be1-af28-ac9d4dcb701d"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,50,85,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771841632052462*^9, 3.771841780456719*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"2b2f82ff-e5ca-45da-8f64-f65cf3d9d270"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,50,86,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771841632052462*^9, 3.77184178046417*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"751e3371-0522-4728-82f9-6f680db2bb92"],

Cell[BoxData[
 TemplateBox[{
  "ParallelCombine","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,50,87,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771841632052462*^9, 3.7718417804706583`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"19c11102-6a91-482e-ae2c-d7e071f2e1fb"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ParallelCombine\\\", \\\
\"::\\\", \\\"nopar\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,50,88,18297922198184990461,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771841632052462*^9, 3.771841780476215*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"41756fbb-b95f-48d5-b343-00d71e2c1536"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "False", "}"}], ",", 
   RowBox[{"{", "True", "}"}], ",", 
   RowBox[{"{", "True", "}"}], ",", 
   RowBox[{"{", "False", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7717868447143097`*^9, 3.771786859280396*^9}, {
   3.7717883969420156`*^9, 3.771788420441073*^9}, 3.771791619429618*^9, 
   3.7717955954785233`*^9, 3.7718416320792217`*^9, 3.7718417804826403`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"a23d85c2-a9ad-4321-b53f-7196e2606061"]
}, Open  ]],

Cell["\<\
Next, I will attempt to train a TsetlinMachine to recognize written digits.\
\>", "Text",
 CellChangeTimes->{{3.771841781539624*^9, 3.7718417980519257`*^9}, 
   3.771841834212915*^9},ExpressionUUID->"af95ddcc-c5bc-4c5d-bf56-\
6e26a7754f97"],

Cell["Import the data:", "CodeText",
 CellChangeTimes->{{3.771841839505888*^9, 
  3.77184184168762*^9}},ExpressionUUID->"488fad62-c4fd-46fa-8356-\
13f879415aa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnist", "=", 
  RowBox[{"ResourceObject", "[", "\"\<MNIST\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.771841843271289*^9, 3.7718418535387506`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"ab9b6e75-ef86-47f5-ac72-df3ebbcdfe0e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, 
               FaceForm[
                RGBColor[0.648987, 0.648987, 0.648987, 1.]], StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, 
               FaceForm[
                RGBColor[0.274612, 0.618881, 0.810913, 1.]], StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}, 
               FaceForm[
                RGBColor[0.648987, 0.648987, 0.648987, 1.]], StripOnInput -> 
               False]}, AspectRatio -> 1, Axes -> False, Background -> None, 
             Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"MNIST\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/MNIST"}\
, "HyperlinkURL"]}, "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Database of handwritten digits commonly used for \
training image processing systems", ResourceSystemClient`Private`len$$], 
                    Except[
                    Blank[String]] -> 
                    Snippet[
                    "Database of handwritten digits commonly used for \
training image processing systems", ResourceSystemClient`Private`len$$], {0}],
                     StandardForm]], 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], "SummaryItem"]}], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, 
               FaceForm[
                RGBColor[0.648987, 0.648987, 0.648987, 1.]], StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, 
               FaceForm[
                RGBColor[0.274612, 0.618881, 0.810913, 1.]], StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}, 
               FaceForm[
                RGBColor[0.648987, 0.648987, 0.648987, 1.]], StripOnInput -> 
               False]}, AspectRatio -> 1, Axes -> False, Background -> None, 
             Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"MNIST\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/MNIST"}\
, "HyperlinkURL"]}, "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Database of handwritten digits commonly used for \
training image processing systems", ResourceSystemClient`Private`len$$], 
                    Except[
                    Blank[String]] -> 
                    Snippet[
                    "Database of handwritten digits commonly used for \
training image processing systems", ResourceSystemClient`Private`len$$], {0}],
                     StandardForm]], 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], "SummaryItem"]}], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Machine Learning\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Image\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"image processing\"", 
                    "\"machine learning\"", "\"classification\"", 
                    "\"computer vision\""}, "RowWithSeparators"], Short], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://datarepository.wolframcloud.com/resources/MNIST\
\"", "https://datarepository.wolframcloud.com/resources/MNIST"}, 
                   "HyperlinkURL"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "16ff8400-2ffb-4642-b626-8e583258924e"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"16ff8400-2ffb-4642-b626-8e583258924e\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "70.08008`", "\"MB\"", "megabytes", "\"Megabytes\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"TestData\"", "\"TestDataset\"", 
                    "\"TrainingData\"", "\"TrainingDataset\""}, 
                    "RowWithSeparators"], Short[#, 2]& ], "SummaryItem"]}], 
               ""}}, GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[
   Association[
   "Name" -> "MNIST", "UUID" -> "16ff8400-2ffb-4642-b626-8e583258924e", 
    "ResourceType" -> "DataResource", "Version" -> "1.0.0", "Description" -> 
    "Database of handwritten digits commonly used for training image \
processing systems", "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
    "ContentSize" -> Quantity[70.08008, "Megabytes"], 
    "ContentElements" -> {
     "TestData", "TestDataset", "TrainingData", "TrainingDataset"}], {
   ResourceSystemBase -> Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771841861356776*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"044a2f59-955a-4c4d-9de4-ba1c36348e5b"]
}, Open  ]],

Cell["Extract and format the training data:", "CodeText",
 CellChangeTimes->{{3.771842233696167*^9, 3.771842241209077*^9}, {
  3.771843261930955*^9, 
  3.7718432628691263`*^9}},ExpressionUUID->"4a0cded8-cf7a-4dec-860e-\
8f1fef16dabb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistTrainData", "=", 
  RowBox[{
   RowBox[{"ResourceData", "[", 
    RowBox[{"mnist", ",", "\"\<TrainingData\>\""}], "]"}], "//", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"ImageData", "@", 
            RowBox[{"Binarize", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "False"}], ",", 
            RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], ")"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "2", ",", "4"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "False"}], ",", 
            RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], ")"}]}], "&"}], ",", 
      "#"}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.771841869597444*^9, 3.771842153100224*^9}, 
   3.771842616987616*^9, 3.7718429599834423`*^9, {3.771843127318349*^9, 
   3.7718431530551453`*^9}, 3.771843260562948*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"50a6ad71-2bb0-4cae-8a50-a0cf5be0be3f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{61., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 18297922198184990461, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 18297922198184990461, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{46., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 18297922198184990461, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{83., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[18297922198184990461 === $SessionID, 
   Out[66], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771842208908184*^9, 3.771842703590487*^9, 
  3.771843042015338*^9, 3.7718433495845833`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"0d535fce-25b3-4c93-b32e-3bfe8142ac28"]
}, Open  ]],

Cell["Extract and format the testing data:", "CodeText",
 CellChangeTimes->{{3.7718423152208977`*^9, 3.771842320504122*^9}, {
  3.7718432648022738`*^9, 
  3.771843266128141*^9}},ExpressionUUID->"dc3421ce-2826-431b-ac64-\
1b6a7e896baf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistTestData", "=", 
  RowBox[{
   RowBox[{"ResourceData", "[", 
    RowBox[{"mnist", ",", "\"\<TestData\>\""}], "]"}], "//", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"ImageData", "@", 
            RowBox[{"Binarize", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "False"}], ",", 
            RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], ")"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "2", ",", "4"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "False"}], ",", 
            RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], ")"}]}], "&"}], ",", 
      "#"}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.771842328703794*^9, 3.771842358933484*^9}, {
   3.7718425263856688`*^9, 3.771842571466367*^9}, {3.7718427859636917`*^9, 
   3.771842791249048*^9}, {3.771842837846627*^9, 3.771842853107242*^9}, 
   3.771843161503415*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"1177bae3-f4dc-44df-a3f0-dcb13944e63b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{61., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 18297922198184990461, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 18297922198184990461, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{46., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{46., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 18297922198184990461, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{83., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{83., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[18297922198184990461 === $SessionID, 
   Out[64], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771842333891943*^9, 3.771842376416355*^9, 
  3.771842586890205*^9, 3.771842872986805*^9, 3.77184317509446*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"8426b5d7-8a16-498c-801c-4738ba91cdc1"]
}, Open  ]],

Cell["Train the TsetlinMachine:", "CodeText",
 CellChangeTimes->{{3.771842413192946*^9, 
  3.771842436115904*^9}},ExpressionUUID->"5cd7ed64-5535-4675-a9bc-\
7da8ce655783"],

Cell[BoxData[
 RowBox[{"TsetlinMachineTrain", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TsetlinMachineInitialize", "[", "\[IndentingNewLine]", 
    RowBox[{
    "128", ",", "\[IndentingNewLine]", "784", ",", "\[IndentingNewLine]", 
     "2000", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "TsetlinUtilityFeedbackDecider", ",", "TsetlinUtilityFeedbackDecider", 
       ",", "TsetlinUtilityFeedbackDecider", ",", 
       "TsetlinUtilityFeedbackDecider"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "mnistTrainData"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "mnistTrainData"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "mnistTestData"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "mnistTestData"}], ",", "\[IndentingNewLine]", "10.0", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TsetlinUtilityFeedbackDecider", "[", 
     RowBox[{
     "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "50"}],
      "]"}], "&"}], ",", "\[IndentingNewLine]", "400"}], "]"}]], "Input",
 CellChangeTimes->{{3.7718424413687267`*^9, 3.771842455842749*^9}, {
   3.771842493222866*^9, 3.771842495072744*^9}, 3.771842654397225*^9, {
   3.7718427141273737`*^9, 3.771842715580373*^9}, {3.7718427502743177`*^9, 
   3.771842761534693*^9}, {3.771842918664612*^9, 3.77184294748116*^9}, 
   3.771843115386499*^9, {3.771843274868929*^9, 3.7718433759944677`*^9}, {
   3.771843566905877*^9, 
   3.7718436756181498`*^9}},ExpressionUUID->"f69d6a5c-d4be-49fd-aca0-\
11238f9de4c1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 1004},
WindowMargins->{{0, Automatic}, {Automatic, 22}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
SpellingDictionaries->{"CorrectWords"->{"Tsetlin", "Lvovitch", "Christoffer"}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 314, 6, 99, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[897, 30, 454, 7, 36, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1354, 39, 411, 6, 36, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[CellGroupData[{
Cell[1790, 49, 157, 3, 68, "Section",ExpressionUUID->"816301f7-bb8e-48e5-a8d6-7587c2d332f7"],
Cell[1950, 54, 2420, 36, 180, "Text",ExpressionUUID->"59eabf55-a8ba-4608-8c74-6f3e5ba0a140"]
}, Closed]],
Cell[CellGroupData[{
Cell[4407, 95, 212, 4, 54, "Section",ExpressionUUID->"0e0efcca-7c60-4de9-84e5-6a5d0e7de620"],
Cell[4622, 101, 397, 8, 36, "Text",ExpressionUUID->"f4aaae64-edde-41b5-9730-b6a4010b6587"],
Cell[5022, 111, 205, 4, 39, "CodeText",ExpressionUUID->"d80df9b8-6768-4a34-ae5a-c34f3ad9ff66"],
Cell[CellGroupData[{
Cell[5252, 119, 146, 2, 31, "Input",ExpressionUUID->"4ee44a8e-67d0-4505-bbc3-037be3ff0646"],
Cell[5401, 123, 150, 2, 35, "Output",ExpressionUUID->"0161b042-8110-44b3-91c5-c3a4f96a612c"]
}, Closed]],
Cell[5566, 128, 699, 12, 56, "Text",ExpressionUUID->"e93687ad-fa4b-43bf-b6b6-eb97276b16a1"],
Cell[6268, 142, 349, 5, 39, "CodeText",ExpressionUUID->"81338f64-ae03-46b1-88e7-a7d82059e940"],
Cell[CellGroupData[{
Cell[6642, 151, 970, 21, 209, "Input",ExpressionUUID->"96de5be5-6ee4-47a8-9eef-6d3fadc2724f",
 InitializationCell->True],
Cell[7615, 174, 13525, 256, 67, "Output",ExpressionUUID->"c6953b35-ab97-4ef9-8b2e-0bf7aacbab1a"]
}, Closed]],
Cell[21155, 433, 248, 4, 39, "CodeText",ExpressionUUID->"2cac9451-c99e-4aa9-9dd6-1d0a36bee9b6"],
Cell[CellGroupData[{
Cell[21428, 441, 254, 4, 31, "Input",ExpressionUUID->"95913ef3-4d24-4d4b-b550-1a12ed6f4832"],
Cell[21685, 447, 198, 3, 35, "Output",ExpressionUUID->"8a93129a-4d87-43de-a7f5-c4713de835be"]
}, Closed]],
Cell[21898, 453, 291, 4, 28, "CodeText",ExpressionUUID->"002c9a40-91f7-4f1e-befa-d070e663bdab"],
Cell[CellGroupData[{
Cell[22214, 461, 252, 4, 31, "Input",ExpressionUUID->"40a672dd-7656-4f33-b4a9-4ce94251fa46"],
Cell[22469, 467, 171, 2, 35, "Output",ExpressionUUID->"7adb1c80-cbe1-4790-ab1f-e291dd2bffe1"]
}, Closed]],
Cell[22655, 472, 374, 8, 32, "Text",ExpressionUUID->"2ac9a2a2-4694-4e06-8fa5-e6a129f2444c"],
Cell[23032, 482, 181, 3, 39, "CodeText",ExpressionUUID->"5035ae96-aea5-4edb-83c7-6efccc5a223f"],
Cell[CellGroupData[{
Cell[23238, 489, 1582, 32, 209, "Input",ExpressionUUID->"372cdb49-a9ee-440c-b5d6-2a9369da232a",
 InitializationCell->True],
Cell[24823, 523, 14334, 270, 67, "Output",ExpressionUUID->"8fbda4f8-6927-441a-80b3-8f7106f9e554"]
}, Closed]],
Cell[CellGroupData[{
Cell[39194, 798, 342, 6, 31, "Input",ExpressionUUID->"522cd17d-9707-432e-8644-40ad0a4933f6"],
Cell[39539, 806, 203, 3, 35, "Output",ExpressionUUID->"1251edac-5282-47cc-b422-b34f286e6ab9"]
}, Closed]],
Cell[39757, 812, 208, 3, 28, "CodeText",ExpressionUUID->"68240f81-162e-427b-b29e-a55b7fb3248f"],
Cell[CellGroupData[{
Cell[39990, 819, 244, 4, 31, "Input",ExpressionUUID->"102bd5ab-e7e1-46f7-ba89-4b061f04a0ae"],
Cell[40237, 825, 175, 2, 35, "Output",ExpressionUUID->"f76c0895-9f20-4e4a-b10e-1b4f900c4bea"]
}, Closed]],
Cell[40427, 830, 180, 3, 28, "CodeText",ExpressionUUID->"ab638405-981f-46ca-9ec7-150307804a07"],
Cell[CellGroupData[{
Cell[40632, 837, 239, 4, 31, "Input",ExpressionUUID->"2355c0fb-e43d-47e3-855a-701370840b19"],
Cell[40874, 843, 149, 2, 35, "Output",ExpressionUUID->"e3fa56df-a123-4ea6-9eb7-b05323960c7e"]
}, Closed]],
Cell[41038, 848, 829, 15, 56, "Text",ExpressionUUID->"bca36145-22a1-4811-a42c-41de1893c903"],
Cell[41870, 865, 244, 4, 39, "CodeText",ExpressionUUID->"56ef0c01-ba10-4266-a912-d83ae70489d9"],
Cell[CellGroupData[{
Cell[42139, 873, 1781, 39, 278, "Input",ExpressionUUID->"9a8f99b4-d43d-40d4-9769-7f388a77b091",
 InitializationCell->True],
Cell[43923, 914, 48425, 874, 67, "Output",ExpressionUUID->"44cac1f2-8292-4037-82ec-669244869d6c"]
}, Closed]],
Cell[92363, 1791, 223, 4, 36, "Text",ExpressionUUID->"9638a2c4-44c3-4e0d-b78b-f6e1639bd2a3"],
Cell[CellGroupData[{
Cell[92611, 1799, 1565, 37, 255, "Input",ExpressionUUID->"5582880d-c60e-4587-9194-62e8ab2b5edc",
 InitializationCell->True],
Cell[94179, 1838, 48351, 871, 67, "Output",ExpressionUUID->"89e449b0-6b3b-414f-bd4a-c7c696db542f"]
}, Closed]],
Cell[142545, 2712, 538, 8, 36, "Text",ExpressionUUID->"6964a1d8-c1b2-4b85-bb0c-1003703bc2c5"],
Cell[CellGroupData[{
Cell[143108, 2724, 295, 5, 31, "Input",ExpressionUUID->"6dc45a55-12ef-429a-960f-1c76704d945a"],
Cell[143406, 2731, 196, 3, 35, "Output",ExpressionUUID->"d3ec6fa3-97db-48bd-ae24-a9f229157604"]
}, Closed]],
Cell[143617, 2737, 595, 11, 56, "Text",ExpressionUUID->"7cc76468-d9cd-48e5-84df-79800aa9a5e7"],
Cell[144215, 2750, 193, 3, 39, "CodeText",ExpressionUUID->"89d242da-c25c-43b2-b54e-d1bd1254e0de"],
Cell[CellGroupData[{
Cell[144433, 2757, 2085, 47, 301, "Input",ExpressionUUID->"ae94b64f-539f-47b7-bd5e-610b6bd25dae",
 InitializationCell->True],
Cell[146521, 2806, 142318, 2507, 67, "Output",ExpressionUUID->"44f79193-a84c-4ee9-803b-02413710b5be"]
}, Closed]],
Cell[288854, 5316, 198, 3, 39, "CodeText",ExpressionUUID->"aedf7bf2-795e-4859-9718-901f3dcef060"],
Cell[CellGroupData[{
Cell[289077, 5323, 331, 6, 31, "Input",ExpressionUUID->"8277b1fc-9192-4e56-8a66-4d9c0b62a52c"],
Cell[289411, 5331, 203, 4, 35, "Output",ExpressionUUID->"bf68965d-a187-4a2c-8b0a-9ccd81566330"]
}, Closed]],
Cell[289629, 5338, 511, 10, 32, "Text",ExpressionUUID->"c4c398fa-2cde-4787-8c32-67ea2a7fd260"],
Cell[290143, 5350, 266, 6, 39, "CodeText",ExpressionUUID->"d43211ee-c429-495d-8210-73c2f7acfece"],
Cell[CellGroupData[{
Cell[290434, 5360, 1571, 35, 193, "Input",ExpressionUUID->"d83a95fd-e6e3-4885-8cb7-8203b9c6c28e"],
Cell[292008, 5397, 592, 11, 35, "Output",ExpressionUUID->"ac3ef739-790d-4e33-b6fc-f35fe6dd27c5"]
}, Closed]],
Cell[292615, 5411, 359, 7, 28, "CodeText",ExpressionUUID->"4160f55e-b53b-4dc2-8192-c88a3c3341a1"],
Cell[CellGroupData[{
Cell[292999, 5422, 364, 9, 31, "Input",ExpressionUUID->"8c0ecd65-66d4-4fdc-966e-401635d65f2f"],
Cell[293366, 5433, 2767, 69, 251, "Output",ExpressionUUID->"c40e5dc6-ac6a-49dc-8598-f295964ed8a6"]
}, Closed]],
Cell[296148, 5505, 202, 3, 32, "Text",ExpressionUUID->"0c1115f7-2ed6-4c1e-9b5b-66e17e7df923"],
Cell[CellGroupData[{
Cell[296375, 5512, 333, 8, 31, "Input",ExpressionUUID->"89bbce15-6b1d-4f7f-abb0-6da8e97ead98"],
Cell[296711, 5522, 175, 3, 35, "Output",ExpressionUUID->"429802c0-4cc2-41fe-b921-671073351217"]
}, Closed]],
Cell[296901, 5528, 511, 8, 56, "Text",ExpressionUUID->"22aa067c-9372-4d12-8774-2f422a630440"],
Cell[297415, 5538, 230, 4, 36, "Text",ExpressionUUID->"095666e3-17bd-4354-af87-71baec934476"],
Cell[CellGroupData[{
Cell[297670, 5546, 1562, 36, 278, "Input",ExpressionUUID->"a9aeed70-f0e0-4b73-a82c-4d34b05d891e",
 InitializationCell->True],
Cell[299235, 5584, 70436, 1253, 67, "Output",ExpressionUUID->"54ccc85a-1ed4-4318-9a3b-4fccdea0fbf4"]
}, Closed]],
Cell[369686, 6840, 233, 4, 36, "Text",ExpressionUUID->"cbeca8ab-35b9-4ee9-b2a8-66153db15dc8"],
Cell[CellGroupData[{
Cell[369944, 6848, 1590, 36, 255, "Input",ExpressionUUID->"faa6a3d4-9a20-4fed-8e24-89ce594c099e",
 InitializationCell->True],
Cell[371537, 6886, 70520, 1255, 67, "Output",ExpressionUUID->"ca7b2061-8259-4ca2-9acd-d6d6d0cb1916"]
}, Closed]],
Cell[442072, 8144, 330, 7, 36, "Text",ExpressionUUID->"8b230e5e-4c8a-4373-ad90-9ace69631e5e"],
Cell[442405, 8153, 237, 4, 36, "Text",ExpressionUUID->"a50cee4d-e469-47ab-9691-e14b2443d3c2"],
Cell[442645, 8159, 508, 12, 71, "Input",ExpressionUUID->"328c6bbc-0d19-40d0-8213-8187c3ef9682",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[443190, 8176, 177, 2, 54, "Section",ExpressionUUID->"c8ac9de5-5137-42ae-9376-41699953d71b"],
Cell[443370, 8180, 900, 15, 84, "Text",ExpressionUUID->"fc794f4a-82dd-4e0a-aa4b-3abb31f8798e"],
Cell[444273, 8197, 291, 7, 39, "CodeText",ExpressionUUID->"76e56e50-60f0-4387-b1d4-2aac6b38bdf0"],
Cell[CellGroupData[{
Cell[444589, 8208, 356, 8, 31, "Input",ExpressionUUID->"22591b6a-3c44-491a-8638-54815ff667ba"],
Cell[444948, 8218, 333, 8, 35, "Output",ExpressionUUID->"603d92ce-076c-4103-bc06-c7eb68c7bbe5"]
}, Closed]],
Cell[445296, 8229, 304, 5, 32, "Text",ExpressionUUID->"6649143b-4e11-4c59-8857-3fb5af174563"],
Cell[CellGroupData[{
Cell[445625, 8238, 352, 8, 31, "Input",ExpressionUUID->"5863fb0e-0914-4a4e-8050-c48cb1ec6fdf"],
Cell[445980, 8248, 329, 8, 35, "Output",ExpressionUUID->"5a41b4fe-e4dd-4892-885c-2d6babc90c32"]
}, Closed]],
Cell[446324, 8259, 575, 13, 32, "Text",ExpressionUUID->"198fbac6-da1d-4fda-b20b-864ad7885f44"],
Cell[446902, 8274, 259, 4, 36, "Text",ExpressionUUID->"ed7ca6d4-fc43-4547-b849-5c3c19100863"],
Cell[447164, 8280, 342, 7, 47, "Input",ExpressionUUID->"add84edd-232b-4675-a562-057d478ebac8",
 InitializationCell->True],
Cell[447509, 8289, 341, 7, 47, "Input",ExpressionUUID->"26739473-1c18-4124-b4fe-0795068d348e",
 InitializationCell->True],
Cell[447853, 8298, 246, 4, 36, "Text",ExpressionUUID->"d470d5a9-b482-4441-a712-35ea65e8ef48"],
Cell[CellGroupData[{
Cell[448124, 8306, 480, 10, 55, "Input",ExpressionUUID->"e8b191b2-881d-4450-aac3-5b8377637e90"],
Cell[448607, 8318, 206, 4, 35, "Output",ExpressionUUID->"0696f101-dca3-43e6-b0d3-4de59d32cbb1"]
}, Closed]],
Cell[448828, 8325, 435, 12, 32, "Text",ExpressionUUID->"28aa213b-68a8-4a36-be30-bc9dfe16d046"],
Cell[449266, 8339, 279, 5, 36, "Text",ExpressionUUID->"1658b007-4a7c-479d-aacb-036bf6bba184"],
Cell[449548, 8346, 819, 22, 117, "Input",ExpressionUUID->"9b74e0fd-0853-4b79-b46e-f7f34c4741e4",
 InitializationCell->True],
Cell[450370, 8370, 585, 12, 36, "Text",ExpressionUUID->"dcc0bbd0-fae3-492f-96c8-15b3f2cc4ee2"],
Cell[450958, 8384, 206, 3, 36, "Text",ExpressionUUID->"13af37af-1fec-4451-8957-f1e531acf45d"],
Cell[CellGroupData[{
Cell[451189, 8391, 841, 22, 124, "Input",ExpressionUUID->"9d3c5fde-4699-49e0-8240-f817ce0aff46"],
Cell[452033, 8415, 715, 20, 35, "Output",ExpressionUUID->"062da419-433f-4ec3-8f3d-d8b2df330966"]
}, Closed]],
Cell[452763, 8438, 502, 11, 32, "Text",ExpressionUUID->"8ae03e4b-d368-49a7-8cf0-dd5c0f64d659"],
Cell[453268, 8451, 364, 8, 39, "CodeText",ExpressionUUID->"924d7479-2695-43f4-959c-2796f1279bf9",
 InitializationCell->True],
Cell[453635, 8461, 340, 7, 47, "Input",ExpressionUUID->"cf9c3011-bbf7-4c9e-9f52-8505261cd7a5",
 InitializationCell->True],
Cell[453978, 8470, 343, 7, 47, "Input",ExpressionUUID->"d2a08e80-08b5-4297-89da-f54c670484f9",
 InitializationCell->True],
Cell[454324, 8479, 215, 4, 36, "Text",ExpressionUUID->"87f8afff-5df8-4e14-9aae-fb29f5fe829a"],
Cell[CellGroupData[{
Cell[454564, 8487, 983, 24, 147, "Input",ExpressionUUID->"b5229755-1dc5-4f27-b084-8537c318291b"],
Cell[455550, 8513, 606, 17, 35, "Output",ExpressionUUID->"657816b9-f205-40a0-b5d0-68e200ecc3a8"]
}, Closed]],
Cell[456171, 8533, 190, 3, 28, "CodeText",ExpressionUUID->"97d03652-523f-4335-9e2c-4713dbff1401"],
Cell[CellGroupData[{
Cell[456386, 8540, 964, 24, 147, "Input",ExpressionUUID->"dc0cc354-418d-4d74-9476-4a592cdb8b4a"],
Cell[457353, 8566, 192, 4, 35, "Output",ExpressionUUID->"499c81ea-6bee-4f42-b098-f07696fbc37b"]
}, Closed]],
Cell[457560, 8573, 418, 9, 32, "Text",ExpressionUUID->"efa83d67-8772-4fb0-bbf8-7e7a89a14cac"],
Cell[457981, 8584, 279, 5, 36, "Text",ExpressionUUID->"9f2394fa-a16c-4ddb-bdf5-5ae0634bbb56"],
Cell[458263, 8591, 795, 17, 163, "Input",ExpressionUUID->"cad0c01e-7229-4a7a-8dc6-498cf0f3008c",
 InitializationCell->True],
Cell[459061, 8610, 477, 11, 36, "Text",ExpressionUUID->"7303d24c-0ee6-4a50-bda3-b3b7737cdc69"],
Cell[459541, 8623, 188, 3, 39, "CodeText",ExpressionUUID->"cfccdb02-b562-4a6a-99b2-3f2ce360b548"],
Cell[CellGroupData[{
Cell[459754, 8630, 1924, 51, 262, "Input",ExpressionUUID->"af351a64-2321-45d5-a80c-1733b49d8b9c"],
Cell[461681, 8683, 1510, 44, 59, "Output",ExpressionUUID->"96f847af-f36e-4759-b3fd-e960d9323624"]
}, Closed]],
Cell[463206, 8730, 542, 13, 32, "Text",ExpressionUUID->"e464e746-e34c-43f4-a0cb-cf6d15aa5ef6"],
Cell[463751, 8745, 266, 4, 36, "Text",ExpressionUUID->"4461b223-924d-49c4-816a-60930268a85e"],
Cell[464020, 8751, 391, 8, 47, "Input",ExpressionUUID->"549b2135-06e6-4e2d-b0d6-a06e6a90e3ab",
 InitializationCell->True],
Cell[464414, 8761, 355, 8, 47, "Input",ExpressionUUID->"fea0ac9d-e456-466a-999b-807410b712d7",
 InitializationCell->True],
Cell[464772, 8771, 184, 3, 39, "CodeText",ExpressionUUID->"03ccbcdf-01be-4298-8c37-94f0a8e3f689"],
Cell[CellGroupData[{
Cell[464981, 8778, 279, 4, 31, "Input",ExpressionUUID->"69e58480-28dc-442d-be05-8e84ef8f6747"],
Cell[465263, 8784, 1320, 40, 35, "Output",ExpressionUUID->"40450550-5c64-4d1d-a0aa-0f018835c6bf"]
}, Closed]],
Cell[466598, 8827, 221, 4, 32, "Text",ExpressionUUID->"6d9531d3-ca4b-45a2-a07c-aa993480c11d"],
Cell[CellGroupData[{
Cell[466844, 8835, 232, 3, 31, "Input",ExpressionUUID->"85691441-2f9a-4d4e-801c-9a057cb56e75"],
Cell[467079, 8840, 149, 2, 35, "Output",ExpressionUUID->"ac6306ba-5b17-45ac-885c-08e1dcc29bd7"]
}, Closed]],
Cell[467243, 8845, 473, 9, 32, "Text",ExpressionUUID->"d671b877-7ac5-4f38-831a-21d26b6ccd64"],
Cell[467719, 8856, 282, 5, 36, "Text",ExpressionUUID->"630efdde-8413-4698-9a5e-efee5de05e8e"],
Cell[468004, 8863, 985, 21, 255, "Input",ExpressionUUID->"37f1cc1a-56b0-49da-a310-35037ccdb946",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[469026, 8889, 168, 3, 54, "Section",ExpressionUUID->"bde74e34-f82a-4d90-a89f-36099a8bc73d"],
Cell[469197, 8894, 534, 12, 60, "Text",ExpressionUUID->"3f385c26-598d-4cea-93de-befbdae6bc9b"],
Cell[469734, 8908, 207, 3, 39, "CodeText",ExpressionUUID->"d261bcf5-9381-40c3-bb52-f4a450b38c92"],
Cell[CellGroupData[{
Cell[469966, 8915, 1210, 28, 285, "Input",ExpressionUUID->"877b0c53-c993-4565-8700-d1236b370c1c"],
Cell[471179, 8945, 845, 24, 35, "Output",ExpressionUUID->"e5c88a0a-1e9c-4037-8ee2-c1dea4a142ab"]
}, Closed]],
Cell[472039, 8972, 495, 10, 60, "Text",ExpressionUUID->"ed521a65-7ec1-463a-89fb-723ad67f7a00"],
Cell[472537, 8984, 242, 4, 36, "Text",ExpressionUUID->"42be0f7a-7091-4fc6-92d0-8158b4bdc5c0"],
Cell[472782, 8990, 1692, 41, 278, "Input",ExpressionUUID->"dad0ce6e-b81e-4b38-b5b1-4e008ee81a0e",
 InitializationCell->True],
Cell[474477, 9033, 353, 6, 36, "Text",ExpressionUUID->"2873cd71-bbc2-415d-835c-561939986746"],
Cell[CellGroupData[{
Cell[474855, 9043, 704, 14, 124, "Input",ExpressionUUID->"8b829157-5ccc-42aa-96f5-750f9eccd261"],
Cell[475562, 9059, 222, 4, 35, "Output",ExpressionUUID->"a9dc1484-f65c-4ac7-bc74-4075e8b5dd15"]
}, Closed]],
Cell[475799, 9066, 454, 11, 32, "Text",ExpressionUUID->"c2a1a465-6802-41a0-b1ea-b91aa60253bc"],
Cell[476256, 9079, 203, 3, 39, "CodeText",ExpressionUUID->"0938c48e-7485-45b8-b2ab-74e3ce27a1a7"],
Cell[476462, 9084, 614, 12, 140, "Input",ExpressionUUID->"15e2c580-2471-4aed-bce1-343bf07ae510",
 InitializationCell->True],
Cell[477079, 9098, 273, 6, 39, "CodeText",ExpressionUUID->"55e455ca-a287-40ee-a95a-0372ba6d1f34"],
Cell[CellGroupData[{
Cell[477377, 9108, 698, 14, 124, "Input",ExpressionUUID->"06fd98a9-4529-4e0d-adcd-64dbe7b44885"],
Cell[478078, 9124, 178, 2, 35, "Output",ExpressionUUID->"244f5ac3-a708-46e3-bb62-29d9837f67a1"]
}, Closed]],
Cell[478271, 9129, 546, 13, 56, "Text",ExpressionUUID->"6b816366-91df-483c-8ba0-2cb0d054f178"],
Cell[478820, 9144, 202, 3, 39, "CodeText",ExpressionUUID->"0d5db395-1f46-46de-93d9-9577c9279872"],
Cell[479025, 9149, 839, 19, 140, "Input",ExpressionUUID->"d6a1e962-f8c5-42d6-863f-1977053011f1",
 InitializationCell->True],
Cell[479867, 9170, 273, 6, 39, "CodeText",ExpressionUUID->"63b5b756-7e9a-4bb7-be10-dc5e11263c63"],
Cell[CellGroupData[{
Cell[480165, 9180, 561, 11, 101, "Input",ExpressionUUID->"f4b43eb6-29e8-4354-8bde-d8747089e692"],
Cell[480729, 9193, 178, 2, 35, "Output",ExpressionUUID->"ccc8ef0e-a930-4ab8-bde9-bbf2f8ee6da7"]
}, Closed]],
Cell[480922, 9198, 350, 7, 32, "Text",ExpressionUUID->"87ab3784-dca9-48d2-8700-68ab674cddf8"],
Cell[481275, 9207, 204, 3, 39, "CodeText",ExpressionUUID->"418e48ab-19bd-4b02-ade8-0b1ab3195387"],
Cell[481482, 9212, 879, 19, 186, "Input",ExpressionUUID->"6efc10dd-4011-45d9-858c-f05017421fc1",
 InitializationCell->True],
Cell[482364, 9233, 276, 6, 39, "CodeText",ExpressionUUID->"7757885e-98a8-4c71-9c2b-ec5b557916b3"],
Cell[CellGroupData[{
Cell[482665, 9243, 354, 6, 78, "Input",ExpressionUUID->"249a0a4e-b4e9-4296-ac04-1925fc167429"],
Cell[483022, 9251, 242, 4, 35, "Output",ExpressionUUID->"e4844770-b8a5-4d62-81d9-92c6df5b3a2e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[483313, 9261, 238, 4, 54, "Section",ExpressionUUID->"d51d02d7-2614-4ec8-a5b7-e433747f05a3"],
Cell[483554, 9267, 1150, 18, 84, "Text",ExpressionUUID->"d826bc54-04f7-441a-a5b7-8fef01f7c79a"],
Cell[484707, 9287, 846, 14, 84, "Text",ExpressionUUID->"995bfbcd-56e7-4d50-9cf2-f34623c08bcf"],
Cell[485556, 9303, 205, 3, 39, "CodeText",ExpressionUUID->"177584c0-5928-498f-b6ec-b3a0e8978253"],
Cell[485764, 9308, 3041, 72, 416, "Input",ExpressionUUID->"a716d2be-3fd7-443d-8ca8-f97ce8f571b0",
 InitializationCell->True],
Cell[488808, 9382, 256, 4, 39, "CodeText",ExpressionUUID->"1e1834e1-9a6a-4e4f-a57b-9d5acf6520cd"],
Cell[489067, 9388, 2145, 46, 508, "Input",ExpressionUUID->"3bc02c8b-3b11-4d7e-a1a0-9a670afb3896",
 InitializationCell->True],
Cell[491215, 9436, 218, 5, 39, "CodeText",ExpressionUUID->"a95c612c-0b8e-431e-9030-6701f1f1787f"],
Cell[CellGroupData[{
Cell[491458, 9445, 413, 7, 147, "Input",ExpressionUUID->"d0b2d902-08cd-42d5-b80e-e82b1ecbae2f"],
Cell[491874, 9454, 148, 2, 35, "Output",ExpressionUUID->"d8b4a289-fb43-4d65-80e6-e79709735384"]
}, Closed]],
Cell[492037, 9459, 269, 6, 28, "CodeText",ExpressionUUID->"ec90c70e-3dff-44e6-a9ec-6e8309c4aed5"],
Cell[CellGroupData[{
Cell[492331, 9469, 417, 7, 147, "Input",ExpressionUUID->"f8acd7c8-c051-490f-938e-c4a6a32e717d"],
Cell[492751, 9478, 151, 2, 35, "Output",ExpressionUUID->"8c75b400-66d4-4824-ae77-f1707e9c1096"]
}, Closed]],
Cell[492917, 9483, 485, 10, 56, "Text",ExpressionUUID->"c6d61a3d-c15b-4988-9b1e-a548a336faaa"],
Cell[493405, 9495, 250, 4, 39, "CodeText",ExpressionUUID->"1900943e-c48c-40cd-8358-f2152a169c2d"],
Cell[493658, 9501, 1917, 42, 485, "Input",ExpressionUUID->"5c435e46-fe97-448f-952b-cef20a8d101d",
 InitializationCell->True],
Cell[495578, 9545, 203, 3, 39, "CodeText",ExpressionUUID->"3423c5a0-a355-440b-a7a6-c06c58bada3c"],
Cell[495784, 9550, 1837, 41, 485, "Input",ExpressionUUID->"0b4656f7-684c-41c8-bc6e-a24134fd9d3e",
 InitializationCell->True],
Cell[497624, 9593, 1162, 19, 108, "Text",ExpressionUUID->"f031f0c3-06d6-4234-aa32-ae199b2f60f3"],
Cell[498789, 9614, 249, 4, 39, "CodeText",ExpressionUUID->"3d68d74a-0655-472e-8039-96ead568d308"],
Cell[499041, 9620, 2546, 58, 393, "Input",ExpressionUUID->"cafa3cb4-df68-4a9c-a7b7-67335ee7bcca",
 InitializationCell->True],
Cell[501590, 9680, 526, 12, 60, "Text",ExpressionUUID->"e21009be-76b2-40f7-b558-d2a1fa9609fa"],
Cell[502119, 9694, 298, 4, 39, "CodeText",ExpressionUUID->"875fe7a5-eaf7-4724-95f9-98ec30bff528"],
Cell[502420, 9700, 1582, 31, 347, "Input",ExpressionUUID->"a564aa72-382d-465f-9ad1-6fe072556030",
 InitializationCell->True],
Cell[504005, 9733, 331, 6, 39, "CodeText",ExpressionUUID->"6d618ccf-e8f9-4f9f-a90e-1d52f101e544"],
Cell[CellGroupData[{
Cell[504361, 9743, 894, 21, 239, "Input",ExpressionUUID->"00f086ba-6624-43bd-bb42-ed7ddf56ea3c"],
Cell[505258, 9766, 821, 24, 59, "Output",ExpressionUUID->"10197f72-9e0f-43d3-89cd-058567c8bd89"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[506128, 9796, 178, 3, 54, "Section",ExpressionUUID->"5e7ec47b-a1a9-444b-abae-62ead37b240b"],
Cell[506309, 9801, 349, 7, 36, "Text",ExpressionUUID->"aa1ca314-220d-4e1e-b5f3-7a2c400826f0"],
Cell[506661, 9810, 472, 10, 60, "Text",ExpressionUUID->"0f4e3c1b-508e-42c2-a86d-afe5142d4646"],
Cell[507136, 9822, 203, 3, 39, "CodeText",ExpressionUUID->"cff31325-0f19-4251-af3a-8dbf11caae1c"],
Cell[507342, 9827, 577, 15, 71, "Input",ExpressionUUID->"76a1abcb-ee9f-4caf-89d2-e09fead44630",
 InitializationCell->True],
Cell[507922, 9844, 265, 6, 39, "CodeText",ExpressionUUID->"898ff0d9-2603-45f2-b151-85b68fc14719"],
Cell[CellGroupData[{
Cell[508212, 9854, 306, 6, 31, "Input",ExpressionUUID->"ff392c5c-0d73-4019-98ec-8fdc2baae23c"],
Cell[508521, 9862, 151, 2, 35, "Output",ExpressionUUID->"7ff60bf8-70e3-4dc5-9aa8-b4a14f034f9f"]
}, Closed]],
Cell[508687, 9867, 458, 10, 56, "Text",ExpressionUUID->"d0842548-0d89-48a6-a3ff-61c31cdc4b1c"],
Cell[509148, 9879, 252, 4, 39, "CodeText",ExpressionUUID->"ac47e342-0ea2-483d-9643-d0ccc8557776"],
Cell[509403, 9885, 592, 15, 71, "Input",ExpressionUUID->"0efe3301-60a1-42bb-b44f-6b6768c2cac2",
 InitializationCell->True],
Cell[509998, 9902, 352, 7, 39, "CodeText",ExpressionUUID->"395f9677-832b-4bf3-8172-abbf49608365"],
Cell[CellGroupData[{
Cell[510375, 9913, 313, 6, 31, "Input",ExpressionUUID->"d745f141-eabe-4318-88d5-a2a7d690fcc7"],
Cell[510691, 9921, 155, 2, 35, "Output",ExpressionUUID->"7c09637c-194b-4814-8d74-edb38315dc7f"]
}, Closed]],
Cell[510861, 9926, 835, 20, 56, "Text",ExpressionUUID->"7d12d62e-d5bf-4ea7-9ab9-878ccdd30214"],
Cell[511699, 9948, 301, 4, 39, "CodeText",ExpressionUUID->"06c6b802-bbe1-4e2c-9e00-dd0c3b04bfb1"],
Cell[512003, 9954, 4168, 97, 830, "Input",ExpressionUUID->"a6f0ca29-e4b1-4e60-acae-50cadea3dcee",
 InitializationCell->True],
Cell[516174, 10053, 281, 7, 36, "Text",ExpressionUUID->"b609909f-b6a2-461f-a84e-5e1ca97adc9a"],
Cell[516458, 10062, 223, 4, 36, "Text",ExpressionUUID->"569e3527-fbb4-45e9-b6e3-2baa9c47762f"],
Cell[516684, 10068, 323, 7, 71, "Input",ExpressionUUID->"2c0ed26b-1b40-4acb-b8c8-115d267fce5d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[517044, 10080, 359, 6, 54, "Section",ExpressionUUID->"eacbe695-ec98-4f10-8904-c05373e61eaa"],
Cell[517406, 10088, 446, 9, 60, "Text",ExpressionUUID->"f084930e-5480-4fd7-8b59-e2e827b9668c"],
Cell[517855, 10099, 1109, 24, 84, "Text",ExpressionUUID->"f8b6bc77-1e5a-4ffa-90d9-edf26c59889c"],
Cell[518967, 10125, 223, 4, 36, "Text",ExpressionUUID->"97bcd7c3-fba4-42ae-bcc3-d4093426927d"],
Cell[519193, 10131, 3061, 71, 462, "Input",ExpressionUUID->"1377c33c-8887-4a72-b404-7024e8579fde",
 InitializationCell->True],
Cell[522257, 10204, 275, 5, 36, "Text",ExpressionUUID->"bd49fcda-7503-43f7-9ff6-b45b7d0f795c"],
Cell[CellGroupData[{
Cell[522557, 10213, 962, 24, 216, "Input",ExpressionUUID->"438e8e2e-1006-4233-a9ee-3acf19f1c509"],
Cell[523522, 10239, 202, 6, 26, "Echo",ExpressionUUID->"5cc601a2-ab6f-4177-bde6-2bb4d25fe14b"],
Cell[523727, 10247, 276, 4, 35, "Output",ExpressionUUID->"049caa04-8b31-4f33-9df6-8446f695633f"]
}, Closed]],
Cell[524018, 10254, 948, 16, 80, "Text",ExpressionUUID->"b4ae8b4e-77fd-4a7e-9c4d-24ea114ca28f"],
Cell[524969, 10272, 320, 5, 36, "Text",ExpressionUUID->"b543c5c9-7b0f-4875-b6bb-01a3f3f101b9"],
Cell[525292, 10279, 5259, 99, 462, "Input",ExpressionUUID->"28cf4741-a7ce-4572-a7ec-62e471b398d8",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[530588, 10383, 182, 3, 68, "Section",ExpressionUUID->"a8b20280-d626-4010-96f6-13b355ef997c"],
Cell[530773, 10388, 336, 8, 36, "Text",ExpressionUUID->"35002a42-bff1-4d2f-9986-bba917a62205"],
Cell[531112, 10398, 208, 3, 36, "Text",ExpressionUUID->"28383f09-5f02-4b47-9be8-ded1200dbef8"],
Cell[CellGroupData[{
Cell[531345, 10405, 3292, 70, 331, "Input",ExpressionUUID->"46f57f5b-04f6-4df8-ae59-3a9295b8e077"],
Cell[534640, 10477, 679, 13, 23, "Message",ExpressionUUID->"c235c29b-020a-479d-beb6-4f399e909138"],
Cell[535322, 10492, 675, 13, 23, "Message",ExpressionUUID->"e76a3227-4916-46dc-9c47-edce859b9b27"],
Cell[536000, 10507, 674, 13, 23, "Message",ExpressionUUID->"35ed19b8-8a52-4b2c-b70d-08cc21e1b6b3"],
Cell[536677, 10522, 675, 13, 23, "Message",ExpressionUUID->"0c90823c-3771-40e3-b945-88bb879b4434"],
Cell[537355, 10537, 764, 14, 23, "Message",ExpressionUUID->"4d1b1006-9f6b-493d-8222-7f32921107ed"],
Cell[538122, 10553, 677, 13, 23, "Message",ExpressionUUID->"6b1c0a9a-401d-4fc7-91b0-30e3be741f82"],
Cell[538802, 10568, 677, 13, 23, "Message",ExpressionUUID->"2ceb52ef-8259-4f3a-8936-3790d3640958"],
Cell[539482, 10583, 768, 14, 23, "Message",ExpressionUUID->"0d68b75b-e5dd-46a1-a731-16d306ff725b"],
Cell[CellGroupData[{
Cell[540275, 10601, 203, 6, 26, "Echo",ExpressionUUID->"85268ffc-9807-4778-9b44-1a0d2495bbc4"],
Cell[540481, 10609, 205, 6, 26, "Echo",ExpressionUUID->"443f2ee1-6df4-4f55-abbb-5c2003b966ec"],
Cell[540689, 10617, 203, 6, 26, "Echo",ExpressionUUID->"274300b7-947a-481e-a1c4-0862b9caec4f"],
Cell[540895, 10625, 204, 6, 26, "Echo",ExpressionUUID->"1d26fcdb-4705-4924-a5cc-5f8f03174b63"],
Cell[541102, 10633, 204, 6, 26, "Echo",ExpressionUUID->"5c263112-2753-4116-8bda-b9a088497c17"],
Cell[541309, 10641, 204, 6, 26, "Echo",ExpressionUUID->"4dabd161-a5f0-487a-a987-a26099f185f4"]
}, Open  ]],
Cell[541528, 10650, 2558, 54, 35, "Output",ExpressionUUID->"89485e89-6c8c-4a3e-b1b3-13354a2bc11a"]
}, Open  ]],
Cell[544101, 10707, 305, 5, 36, "Text",ExpressionUUID->"8989e3fa-0649-4844-b7ef-215cf9a9a915"],
Cell[CellGroupData[{
Cell[544431, 10716, 741, 18, 31, "Input",ExpressionUUID->"b2c943d5-8f58-4be1-af28-ac9d4dcb701d"],
Cell[545175, 10736, 387, 9, 23, "Message",ExpressionUUID->"2b2f82ff-e5ca-45da-8f64-f65cf3d9d270"],
Cell[545565, 10747, 386, 9, 23, "Message",ExpressionUUID->"751e3371-0522-4728-82f9-6f680db2bb92"],
Cell[545954, 10758, 389, 9, 23, "Message",ExpressionUUID->"19c11102-6a91-482e-ae2c-d7e071f2e1fb"],
Cell[546346, 10769, 476, 10, 23, "Message",ExpressionUUID->"41756fbb-b95f-48d5-b343-00d71e2c1536"],
Cell[546825, 10781, 500, 10, 35, "Output",ExpressionUUID->"a23d85c2-a9ad-4321-b53f-7196e2606061"]
}, Open  ]],
Cell[547340, 10794, 250, 5, 36, "Text",ExpressionUUID->"af95ddcc-c5bc-4c5d-bf56-6e26a7754f97"],
Cell[547593, 10801, 161, 3, 39, "CodeText",ExpressionUUID->"488fad62-c4fd-46fa-8356-13f879415aa8"],
Cell[CellGroupData[{
Cell[547779, 10808, 253, 4, 31, "Input",ExpressionUUID->"ab9b6e75-ef86-47f5-ac72-df3ebbcdfe0e"],
Cell[548035, 10814, 19228, 384, 83, "Output",ExpressionUUID->"044a2f59-955a-4c4d-9de4-ba1c36348e5b"]
}, Open  ]],
Cell[567278, 11201, 234, 4, 39, "CodeText",ExpressionUUID->"4a0cded8-cf7a-4dec-860e-8f1fef16dabb"],
Cell[CellGroupData[{
Cell[567537, 11209, 1420, 37, 31, "Input",ExpressionUUID->"50a6ad71-2bb0-4cae-8a50-a0cf5be0be3f"],
Cell[568960, 11248, 8788, 228, 95, "Output",ExpressionUUID->"0d535fce-25b3-4c93-b32e-3bfe8142ac28"]
}, Open  ]],
Cell[577763, 11479, 235, 4, 39, "CodeText",ExpressionUUID->"dc3421ce-2826-431b-ac64-1b6a7e896baf"],
Cell[CellGroupData[{
Cell[578023, 11487, 1467, 38, 31, "Input",ExpressionUUID->"1177bae3-f4dc-44df-a3f0-dcb13944e63b"],
Cell[579493, 11527, 8954, 231, 95, "Output",ExpressionUUID->"8426b5d7-8a16-498c-801c-4738ba91cdc1"]
}, Open  ]],
Cell[588462, 11761, 171, 3, 39, "CodeText",ExpressionUUID->"5cd7ed64-5535-4675-a9bc-7da8ce655783"],
Cell[588636, 11766, 1949, 42, 308, "Input",ExpressionUUID->"f69d6a5c-d4be-49fd-aca0-11238f9de4c1"]
}, Open  ]]
}, Open  ]]
}
]
*)

